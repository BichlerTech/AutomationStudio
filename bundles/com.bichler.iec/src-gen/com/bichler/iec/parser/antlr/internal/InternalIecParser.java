package com.bichler.iec.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.bichler.iec.services.IecGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalIecParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_EOL", "RULE_SUB_RANGE", "RULE_DIRECT_VARIABLE_ID", "RULE_FIELD_SELECTOR", "RULE_INT", "RULE_BINT", "RULE_OINT", "RULE_HINT", "RULE_FIXED_POINT", "RULE_EXPONENT", "RULE_SINGLE_BYTE_STRING", "RULE_DOUBLE_BYTE_STRING", "RULE_DAYS", "RULE_HOURS", "RULE_MINUTES", "RULE_SECONDS", "RULE_MILLISECONDS", "RULE_LETTER", "RULE_ID", "RULE_DIGIT", "RULE_MY_NL", "RULE_ML_COMMENT", "RULE_STRING", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'WSTRING'", "'TIME'", "'STRING'", "'SINT'", "'DINT'", "'LINT'", "'INT'", "'USINT'", "'UINT'", "'UDINT'", "'ULINT'", "'REAL'", "'LREAL'", "'DATE'", "'TIME_OF_DAY'", "'TOD'", "'DATE_AND_TIME'", "'DT'", "'BOOL'", "'BYTE'", "'WORD'", "'DWORD'", "'LWORD'", "'ANY'", "'ANY_DERIVED'", "'ANY_ELEMENTARY'", "'ANY_MAGNITUDE'", "'ANY_NUM'", "'ANY_REAL'", "'ANY_INT'", "'ANY_BIT'", "'ANY_STRING'", "'ANY_DATE'", "'TYPE'", "':'", "'END_TYPE'", "':='", "'('", "')'", "'ARRAY'", "'['", "','", "']'", "'OF'", "'+'", "'-'", "'#'", "'STRUCT'", "'END_STRUCT'", "'OR'", "'XOR'", "'&'", "'AND'", "'='", "'<>'", "'<'", "'>'", "'<='", "'>='", "'*'", "'/'", "'MOD'", "'**'", "'NOT'", "':>'", "'FUNCTION'", "'END_FUNCTION'", "'VAR_INPUT'", "'RETAIN'", "'NON_RETAIN'", "'END_VAR'", "'R_EDGE'", "'F_EDGE'", "'VAR_OUTPUT'", "'VAR_IN_OUT'", "'LD'", "'LDN'", "'ADD'", "'JMP'", "'JMPC'", "'JMPCN'", "'IF'", "'THEN'", "'ELSE'", "'END_IF'", "'ELSIF'", "'CASE'", "'END_CASE'", "'FUNCTION_BLOCK'", "'END_FUNCTION_BLOCK'", "'VAR'", "'CONSTANT'", "'PROGRAM'", "'END_PROGRAM'", "'AT'", "'VAR_ACCESS'", "'READ_WRITE'", "'READ_ONLY'", "'CONFIGURATION'", "'END_CONFIGURATION'", "'RESOURCE'", "'ON'", "'END_RESOURCE'", "'NONRETAIN'", "'WITH'", "'=>'", "'VAR_GLOBAL'", "'TASK'", "'SINGLE'", "'INTERVAL'", "'PRIORITY'", "'BYTE#'", "'WORD#'", "'DWORD#'", "'LWORD#'", "'BOOL#'", "'TRUE'", "'FALSE'", "'T#'", "'t#'", "'TIME#'", "'TIME_OF_DAY#'", "'TOD#'", "'DATE#'", "'D#'", "'DATE_AND_TIME#'", "'DT#'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int RULE_DIRECT_VARIABLE_ID=6;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int RULE_ID=22;
    public static final int RULE_EOL=4;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_FIXED_POINT=12;
    public static final int RULE_DIGIT=23;
    public static final int RULE_INT=8;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=25;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__155=155;
    public static final int T__154=154;
    public static final int T__156=156;
    public static final int T__151=151;
    public static final int T__150=150;
    public static final int T__153=153;
    public static final int T__152=152;
    public static final int RULE_LETTER=21;
    public static final int RULE_EXPONENT=13;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__149=149;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int RULE_SUB_RANGE=5;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int RULE_MY_NL=24;
    public static final int RULE_BINT=9;
    public static final int RULE_DOUBLE_BYTE_STRING=15;
    public static final int RULE_MINUTES=18;
    public static final int T__99=99;
    public static final int RULE_DAYS=16;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int RULE_OINT=10;
    public static final int RULE_HOURS=17;
    public static final int T__122=122;
    public static final int T__70=70;
    public static final int T__121=121;
    public static final int T__71=71;
    public static final int T__124=124;
    public static final int RULE_SECONDS=19;
    public static final int T__72=72;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_HINT=11;
    public static final int RULE_STRING=26;
    public static final int RULE_FIELD_SELECTOR=7;
    public static final int RULE_SL_COMMENT=27;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int RULE_MILLISECONDS=20;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=28;
    public static final int RULE_ANY_OTHER=29;
    public static final int RULE_SINGLE_BYTE_STRING=14;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalIecParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalIecParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalIecParser.tokenNames; }
    public String getGrammarFileName() { return "InternalIec.g"; }



     	private IecGrammarAccess grammarAccess;
     	
        public InternalIecParser(TokenStream input, IecGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }
        
        @Override
        protected String getFirstRuleName() {
        	return "Model";	
       	}
       	
       	@Override
       	protected IecGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}



    // $ANTLR start "entryRuleModel"
    // InternalIec.g:67:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalIec.g:68:2: (iv_ruleModel= ruleModel EOF )
            // InternalIec.g:69:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalIec.g:76:1: ruleModel returns [EObject current=null] : ( (lv_modelElement_0_0= ruleModelElement ) )* ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject lv_modelElement_0_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:79:28: ( ( (lv_modelElement_0_0= ruleModelElement ) )* )
            // InternalIec.g:80:1: ( (lv_modelElement_0_0= ruleModelElement ) )*
            {
            // InternalIec.g:80:1: ( (lv_modelElement_0_0= ruleModelElement ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( ((LA1_0>=RULE_LETTER && LA1_0<=RULE_ID)||(LA1_0>=30 && LA1_0<=63)||LA1_0==95||LA1_0==118||LA1_0==122||LA1_0==128||LA1_0==130) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalIec.g:81:1: (lv_modelElement_0_0= ruleModelElement )
            	    {
            	    // InternalIec.g:81:1: (lv_modelElement_0_0= ruleModelElement )
            	    // InternalIec.g:82:3: lv_modelElement_0_0= ruleModelElement
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getModelAccess().getModelElementModelElementParserRuleCall_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_3);
            	    lv_modelElement_0_0=ruleModelElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getModelRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"modelElement",
            	              		lv_modelElement_0_0, 
            	              		"com.bichler.iec.Iec.ModelElement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleModelElement"
    // InternalIec.g:106:1: entryRuleModelElement returns [EObject current=null] : iv_ruleModelElement= ruleModelElement EOF ;
    public final EObject entryRuleModelElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModelElement = null;


        try {
            // InternalIec.g:107:2: (iv_ruleModelElement= ruleModelElement EOF )
            // InternalIec.g:108:2: iv_ruleModelElement= ruleModelElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModelElement=ruleModelElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModelElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModelElement"


    // $ANTLR start "ruleModelElement"
    // InternalIec.g:115:1: ruleModelElement returns [EObject current=null] : (this_LibraryElement_0= ruleLibraryElement | this_LibraryElementDeclaration_1= ruleLibraryElementDeclaration ) ;
    public final EObject ruleModelElement() throws RecognitionException {
        EObject current = null;

        EObject this_LibraryElement_0 = null;

        EObject this_LibraryElementDeclaration_1 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:118:28: ( (this_LibraryElement_0= ruleLibraryElement | this_LibraryElementDeclaration_1= ruleLibraryElementDeclaration ) )
            // InternalIec.g:119:1: (this_LibraryElement_0= ruleLibraryElement | this_LibraryElementDeclaration_1= ruleLibraryElementDeclaration )
            {
            // InternalIec.g:119:1: (this_LibraryElement_0= ruleLibraryElement | this_LibraryElementDeclaration_1= ruleLibraryElementDeclaration )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( ((LA2_0>=RULE_LETTER && LA2_0<=RULE_ID)||(LA2_0>=30 && LA2_0<=62)||LA2_0==95) ) {
                alt2=1;
            }
            else if ( (LA2_0==63||LA2_0==118||LA2_0==122||LA2_0==128||LA2_0==130) ) {
                alt2=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalIec.g:120:5: this_LibraryElement_0= ruleLibraryElement
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getModelElementAccess().getLibraryElementParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_LibraryElement_0=ruleLibraryElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_LibraryElement_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:130:5: this_LibraryElementDeclaration_1= ruleLibraryElementDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getModelElementAccess().getLibraryElementDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_LibraryElementDeclaration_1=ruleLibraryElementDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_LibraryElementDeclaration_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModelElement"


    // $ANTLR start "entryRuleLibraryElement"
    // InternalIec.g:146:1: entryRuleLibraryElement returns [EObject current=null] : iv_ruleLibraryElement= ruleLibraryElement EOF ;
    public final EObject entryRuleLibraryElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLibraryElement = null;


        try {
            // InternalIec.g:147:2: (iv_ruleLibraryElement= ruleLibraryElement EOF )
            // InternalIec.g:148:2: iv_ruleLibraryElement= ruleLibraryElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLibraryElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLibraryElement=ruleLibraryElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLibraryElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLibraryElement"


    // $ANTLR start "ruleLibraryElement"
    // InternalIec.g:155:1: ruleLibraryElement returns [EObject current=null] : (this_DataType_0= ruleDataType | this_FunctionDeclaration_1= ruleFunctionDeclaration ) ;
    public final EObject ruleLibraryElement() throws RecognitionException {
        EObject current = null;

        EObject this_DataType_0 = null;

        EObject this_FunctionDeclaration_1 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:158:28: ( (this_DataType_0= ruleDataType | this_FunctionDeclaration_1= ruleFunctionDeclaration ) )
            // InternalIec.g:159:1: (this_DataType_0= ruleDataType | this_FunctionDeclaration_1= ruleFunctionDeclaration )
            {
            // InternalIec.g:159:1: (this_DataType_0= ruleDataType | this_FunctionDeclaration_1= ruleFunctionDeclaration )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( ((LA3_0>=RULE_LETTER && LA3_0<=RULE_ID)||(LA3_0>=30 && LA3_0<=62)) ) {
                alt3=1;
            }
            else if ( (LA3_0==95) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalIec.g:160:5: this_DataType_0= ruleDataType
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLibraryElementAccess().getDataTypeParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DataType_0=ruleDataType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_DataType_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:170:5: this_FunctionDeclaration_1= ruleFunctionDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLibraryElementAccess().getFunctionDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionDeclaration_1=ruleFunctionDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_FunctionDeclaration_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLibraryElement"


    // $ANTLR start "entryRuleLibraryElementDeclaration"
    // InternalIec.g:186:1: entryRuleLibraryElementDeclaration returns [EObject current=null] : iv_ruleLibraryElementDeclaration= ruleLibraryElementDeclaration EOF ;
    public final EObject entryRuleLibraryElementDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLibraryElementDeclaration = null;


        try {
            // InternalIec.g:187:2: (iv_ruleLibraryElementDeclaration= ruleLibraryElementDeclaration EOF )
            // InternalIec.g:188:2: iv_ruleLibraryElementDeclaration= ruleLibraryElementDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLibraryElementDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLibraryElementDeclaration=ruleLibraryElementDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLibraryElementDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLibraryElementDeclaration"


    // $ANTLR start "ruleLibraryElementDeclaration"
    // InternalIec.g:195:1: ruleLibraryElementDeclaration returns [EObject current=null] : (this_DataTypeDeclaration_0= ruleDataTypeDeclaration | this_FunctionBlockDeclaration_1= ruleFunctionBlockDeclaration | this_ProgramDeclaration_2= ruleProgramDeclaration | this_ConfigurationDeclaration_3= ruleConfigurationDeclaration | this_ResourceDeclaration_4= ruleResourceDeclaration ) ;
    public final EObject ruleLibraryElementDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_DataTypeDeclaration_0 = null;

        EObject this_FunctionBlockDeclaration_1 = null;

        EObject this_ProgramDeclaration_2 = null;

        EObject this_ConfigurationDeclaration_3 = null;

        EObject this_ResourceDeclaration_4 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:198:28: ( (this_DataTypeDeclaration_0= ruleDataTypeDeclaration | this_FunctionBlockDeclaration_1= ruleFunctionBlockDeclaration | this_ProgramDeclaration_2= ruleProgramDeclaration | this_ConfigurationDeclaration_3= ruleConfigurationDeclaration | this_ResourceDeclaration_4= ruleResourceDeclaration ) )
            // InternalIec.g:199:1: (this_DataTypeDeclaration_0= ruleDataTypeDeclaration | this_FunctionBlockDeclaration_1= ruleFunctionBlockDeclaration | this_ProgramDeclaration_2= ruleProgramDeclaration | this_ConfigurationDeclaration_3= ruleConfigurationDeclaration | this_ResourceDeclaration_4= ruleResourceDeclaration )
            {
            // InternalIec.g:199:1: (this_DataTypeDeclaration_0= ruleDataTypeDeclaration | this_FunctionBlockDeclaration_1= ruleFunctionBlockDeclaration | this_ProgramDeclaration_2= ruleProgramDeclaration | this_ConfigurationDeclaration_3= ruleConfigurationDeclaration | this_ResourceDeclaration_4= ruleResourceDeclaration )
            int alt4=5;
            switch ( input.LA(1) ) {
            case 63:
                {
                alt4=1;
                }
                break;
            case 118:
                {
                alt4=2;
                }
                break;
            case 122:
                {
                alt4=3;
                }
                break;
            case 128:
                {
                alt4=4;
                }
                break;
            case 130:
                {
                alt4=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // InternalIec.g:200:5: this_DataTypeDeclaration_0= ruleDataTypeDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLibraryElementDeclarationAccess().getDataTypeDeclarationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DataTypeDeclaration_0=ruleDataTypeDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_DataTypeDeclaration_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:210:5: this_FunctionBlockDeclaration_1= ruleFunctionBlockDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLibraryElementDeclarationAccess().getFunctionBlockDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionBlockDeclaration_1=ruleFunctionBlockDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_FunctionBlockDeclaration_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIec.g:220:5: this_ProgramDeclaration_2= ruleProgramDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLibraryElementDeclarationAccess().getProgramDeclarationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ProgramDeclaration_2=ruleProgramDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ProgramDeclaration_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalIec.g:230:5: this_ConfigurationDeclaration_3= ruleConfigurationDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLibraryElementDeclarationAccess().getConfigurationDeclarationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ConfigurationDeclaration_3=ruleConfigurationDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ConfigurationDeclaration_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalIec.g:240:5: this_ResourceDeclaration_4= ruleResourceDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLibraryElementDeclarationAccess().getResourceDeclarationParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ResourceDeclaration_4=ruleResourceDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ResourceDeclaration_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLibraryElementDeclaration"


    // $ANTLR start "entryRuleDataType"
    // InternalIec.g:256:1: entryRuleDataType returns [EObject current=null] : iv_ruleDataType= ruleDataType EOF ;
    public final EObject entryRuleDataType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDataType = null;


        try {
            // InternalIec.g:257:2: (iv_ruleDataType= ruleDataType EOF )
            // InternalIec.g:258:2: iv_ruleDataType= ruleDataType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDataTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDataType=ruleDataType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDataType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDataType"


    // $ANTLR start "ruleDataType"
    // InternalIec.g:265:1: ruleDataType returns [EObject current=null] : (this_NonGenericType_0= ruleNonGenericType | this_GenericType_1= ruleGenericType ) ;
    public final EObject ruleDataType() throws RecognitionException {
        EObject current = null;

        EObject this_NonGenericType_0 = null;

        EObject this_GenericType_1 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:268:28: ( (this_NonGenericType_0= ruleNonGenericType | this_GenericType_1= ruleGenericType ) )
            // InternalIec.g:269:1: (this_NonGenericType_0= ruleNonGenericType | this_GenericType_1= ruleGenericType )
            {
            // InternalIec.g:269:1: (this_NonGenericType_0= ruleNonGenericType | this_GenericType_1= ruleGenericType )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( ((LA5_0>=RULE_LETTER && LA5_0<=RULE_ID)||(LA5_0>=30 && LA5_0<=52)) ) {
                alt5=1;
            }
            else if ( ((LA5_0>=53 && LA5_0<=62)) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalIec.g:270:5: this_NonGenericType_0= ruleNonGenericType
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDataTypeAccess().getNonGenericTypeParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_NonGenericType_0=ruleNonGenericType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_NonGenericType_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:280:5: this_GenericType_1= ruleGenericType
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDataTypeAccess().getGenericTypeParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_GenericType_1=ruleGenericType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_GenericType_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataType"


    // $ANTLR start "entryRuleNonGenericType"
    // InternalIec.g:296:1: entryRuleNonGenericType returns [EObject current=null] : iv_ruleNonGenericType= ruleNonGenericType EOF ;
    public final EObject entryRuleNonGenericType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNonGenericType = null;


        try {
            // InternalIec.g:297:2: (iv_ruleNonGenericType= ruleNonGenericType EOF )
            // InternalIec.g:298:2: iv_ruleNonGenericType= ruleNonGenericType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNonGenericTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNonGenericType=ruleNonGenericType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNonGenericType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNonGenericType"


    // $ANTLR start "ruleNonGenericType"
    // InternalIec.g:305:1: ruleNonGenericType returns [EObject current=null] : (this_ElementaryType_0= ruleElementaryType | this_DerivedType_1= ruleDerivedType ) ;
    public final EObject ruleNonGenericType() throws RecognitionException {
        EObject current = null;

        EObject this_ElementaryType_0 = null;

        EObject this_DerivedType_1 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:308:28: ( (this_ElementaryType_0= ruleElementaryType | this_DerivedType_1= ruleDerivedType ) )
            // InternalIec.g:309:1: (this_ElementaryType_0= ruleElementaryType | this_DerivedType_1= ruleDerivedType )
            {
            // InternalIec.g:309:1: (this_ElementaryType_0= ruleElementaryType | this_DerivedType_1= ruleDerivedType )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( ((LA6_0>=30 && LA6_0<=52)) ) {
                alt6=1;
            }
            else if ( ((LA6_0>=RULE_LETTER && LA6_0<=RULE_ID)) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalIec.g:310:5: this_ElementaryType_0= ruleElementaryType
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNonGenericTypeAccess().getElementaryTypeParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ElementaryType_0=ruleElementaryType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ElementaryType_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:320:5: this_DerivedType_1= ruleDerivedType
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNonGenericTypeAccess().getDerivedTypeParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DerivedType_1=ruleDerivedType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_DerivedType_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNonGenericType"


    // $ANTLR start "entryRuleElementaryType"
    // InternalIec.g:336:1: entryRuleElementaryType returns [EObject current=null] : iv_ruleElementaryType= ruleElementaryType EOF ;
    public final EObject entryRuleElementaryType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElementaryType = null;


        try {
            // InternalIec.g:337:2: (iv_ruleElementaryType= ruleElementaryType EOF )
            // InternalIec.g:338:2: iv_ruleElementaryType= ruleElementaryType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementaryTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElementaryType=ruleElementaryType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElementaryType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElementaryType"


    // $ANTLR start "ruleElementaryType"
    // InternalIec.g:345:1: ruleElementaryType returns [EObject current=null] : (this_NumericType_0= ruleNumericType | this_DateType_1= ruleDateType | this_BitStringType_2= ruleBitStringType | this_StringType_3= ruleStringType | ( (lv_typeName_4_0= 'WSTRING' ) ) | ( (lv_typeName_5_0= 'TIME' ) ) ) ;
    public final EObject ruleElementaryType() throws RecognitionException {
        EObject current = null;

        Token lv_typeName_4_0=null;
        Token lv_typeName_5_0=null;
        EObject this_NumericType_0 = null;

        EObject this_DateType_1 = null;

        EObject this_BitStringType_2 = null;

        EObject this_StringType_3 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:348:28: ( (this_NumericType_0= ruleNumericType | this_DateType_1= ruleDateType | this_BitStringType_2= ruleBitStringType | this_StringType_3= ruleStringType | ( (lv_typeName_4_0= 'WSTRING' ) ) | ( (lv_typeName_5_0= 'TIME' ) ) ) )
            // InternalIec.g:349:1: (this_NumericType_0= ruleNumericType | this_DateType_1= ruleDateType | this_BitStringType_2= ruleBitStringType | this_StringType_3= ruleStringType | ( (lv_typeName_4_0= 'WSTRING' ) ) | ( (lv_typeName_5_0= 'TIME' ) ) )
            {
            // InternalIec.g:349:1: (this_NumericType_0= ruleNumericType | this_DateType_1= ruleDateType | this_BitStringType_2= ruleBitStringType | this_StringType_3= ruleStringType | ( (lv_typeName_4_0= 'WSTRING' ) ) | ( (lv_typeName_5_0= 'TIME' ) ) )
            int alt7=6;
            switch ( input.LA(1) ) {
            case 33:
            case 34:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
                {
                alt7=1;
                }
                break;
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
                {
                alt7=2;
                }
                break;
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
                {
                alt7=3;
                }
                break;
            case 32:
                {
                alt7=4;
                }
                break;
            case 30:
                {
                alt7=5;
                }
                break;
            case 31:
                {
                alt7=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // InternalIec.g:350:5: this_NumericType_0= ruleNumericType
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getElementaryTypeAccess().getNumericTypeParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_NumericType_0=ruleNumericType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_NumericType_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:360:5: this_DateType_1= ruleDateType
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getElementaryTypeAccess().getDateTypeParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DateType_1=ruleDateType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_DateType_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIec.g:370:5: this_BitStringType_2= ruleBitStringType
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getElementaryTypeAccess().getBitStringTypeParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_BitStringType_2=ruleBitStringType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_BitStringType_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalIec.g:380:5: this_StringType_3= ruleStringType
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getElementaryTypeAccess().getStringTypeParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_StringType_3=ruleStringType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StringType_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalIec.g:389:6: ( (lv_typeName_4_0= 'WSTRING' ) )
                    {
                    // InternalIec.g:389:6: ( (lv_typeName_4_0= 'WSTRING' ) )
                    // InternalIec.g:390:1: (lv_typeName_4_0= 'WSTRING' )
                    {
                    // InternalIec.g:390:1: (lv_typeName_4_0= 'WSTRING' )
                    // InternalIec.g:391:3: lv_typeName_4_0= 'WSTRING'
                    {
                    lv_typeName_4_0=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_4_0, grammarAccess.getElementaryTypeAccess().getTypeNameWSTRINGKeyword_4_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getElementaryTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_4_0, "WSTRING");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalIec.g:405:6: ( (lv_typeName_5_0= 'TIME' ) )
                    {
                    // InternalIec.g:405:6: ( (lv_typeName_5_0= 'TIME' ) )
                    // InternalIec.g:406:1: (lv_typeName_5_0= 'TIME' )
                    {
                    // InternalIec.g:406:1: (lv_typeName_5_0= 'TIME' )
                    // InternalIec.g:407:3: lv_typeName_5_0= 'TIME'
                    {
                    lv_typeName_5_0=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_5_0, grammarAccess.getElementaryTypeAccess().getTypeNameTIMEKeyword_5_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getElementaryTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_5_0, "TIME");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElementaryType"


    // $ANTLR start "entryRuleStringType"
    // InternalIec.g:428:1: entryRuleStringType returns [EObject current=null] : iv_ruleStringType= ruleStringType EOF ;
    public final EObject entryRuleStringType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringType = null;


        try {
            // InternalIec.g:429:2: (iv_ruleStringType= ruleStringType EOF )
            // InternalIec.g:430:2: iv_ruleStringType= ruleStringType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStringType=ruleStringType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringType"


    // $ANTLR start "ruleStringType"
    // InternalIec.g:437:1: ruleStringType returns [EObject current=null] : ( () otherlv_1= 'STRING' ) ;
    public final EObject ruleStringType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // InternalIec.g:440:28: ( ( () otherlv_1= 'STRING' ) )
            // InternalIec.g:441:1: ( () otherlv_1= 'STRING' )
            {
            // InternalIec.g:441:1: ( () otherlv_1= 'STRING' )
            // InternalIec.g:441:2: () otherlv_1= 'STRING'
            {
            // InternalIec.g:441:2: ()
            // InternalIec.g:442:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getStringTypeAccess().getStringTypeAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getStringTypeAccess().getSTRINGKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringType"


    // $ANTLR start "entryRuleNumericType"
    // InternalIec.g:459:1: entryRuleNumericType returns [EObject current=null] : iv_ruleNumericType= ruleNumericType EOF ;
    public final EObject entryRuleNumericType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNumericType = null;


        try {
            // InternalIec.g:460:2: (iv_ruleNumericType= ruleNumericType EOF )
            // InternalIec.g:461:2: iv_ruleNumericType= ruleNumericType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumericTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumericType=ruleNumericType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumericType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumericType"


    // $ANTLR start "ruleNumericType"
    // InternalIec.g:468:1: ruleNumericType returns [EObject current=null] : (this_IntegerType_0= ruleIntegerType | this_RealType_1= ruleRealType ) ;
    public final EObject ruleNumericType() throws RecognitionException {
        EObject current = null;

        EObject this_IntegerType_0 = null;

        EObject this_RealType_1 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:471:28: ( (this_IntegerType_0= ruleIntegerType | this_RealType_1= ruleRealType ) )
            // InternalIec.g:472:1: (this_IntegerType_0= ruleIntegerType | this_RealType_1= ruleRealType )
            {
            // InternalIec.g:472:1: (this_IntegerType_0= ruleIntegerType | this_RealType_1= ruleRealType )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( ((LA8_0>=33 && LA8_0<=40)) ) {
                alt8=1;
            }
            else if ( ((LA8_0>=41 && LA8_0<=42)) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalIec.g:473:5: this_IntegerType_0= ruleIntegerType
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericTypeAccess().getIntegerTypeParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IntegerType_0=ruleIntegerType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_IntegerType_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:483:5: this_RealType_1= ruleRealType
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericTypeAccess().getRealTypeParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_RealType_1=ruleRealType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_RealType_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumericType"


    // $ANTLR start "entryRuleIntegerType"
    // InternalIec.g:499:1: entryRuleIntegerType returns [EObject current=null] : iv_ruleIntegerType= ruleIntegerType EOF ;
    public final EObject entryRuleIntegerType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntegerType = null;


        try {
            // InternalIec.g:500:2: (iv_ruleIntegerType= ruleIntegerType EOF )
            // InternalIec.g:501:2: iv_ruleIntegerType= ruleIntegerType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntegerTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIntegerType=ruleIntegerType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntegerType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntegerType"


    // $ANTLR start "ruleIntegerType"
    // InternalIec.g:508:1: ruleIntegerType returns [EObject current=null] : (this_SignedIntegerType_0= ruleSignedIntegerType | this_PlainIntegerType_1= rulePlainIntegerType | this_UnsignedIntegerType_2= ruleUnsignedIntegerType ) ;
    public final EObject ruleIntegerType() throws RecognitionException {
        EObject current = null;

        EObject this_SignedIntegerType_0 = null;

        EObject this_PlainIntegerType_1 = null;

        EObject this_UnsignedIntegerType_2 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:511:28: ( (this_SignedIntegerType_0= ruleSignedIntegerType | this_PlainIntegerType_1= rulePlainIntegerType | this_UnsignedIntegerType_2= ruleUnsignedIntegerType ) )
            // InternalIec.g:512:1: (this_SignedIntegerType_0= ruleSignedIntegerType | this_PlainIntegerType_1= rulePlainIntegerType | this_UnsignedIntegerType_2= ruleUnsignedIntegerType )
            {
            // InternalIec.g:512:1: (this_SignedIntegerType_0= ruleSignedIntegerType | this_PlainIntegerType_1= rulePlainIntegerType | this_UnsignedIntegerType_2= ruleUnsignedIntegerType )
            int alt9=3;
            switch ( input.LA(1) ) {
            case 33:
            case 34:
            case 35:
                {
                alt9=1;
                }
                break;
            case 36:
                {
                alt9=2;
                }
                break;
            case 37:
            case 38:
            case 39:
            case 40:
                {
                alt9=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }

            switch (alt9) {
                case 1 :
                    // InternalIec.g:513:5: this_SignedIntegerType_0= ruleSignedIntegerType
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIntegerTypeAccess().getSignedIntegerTypeParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SignedIntegerType_0=ruleSignedIntegerType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SignedIntegerType_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:523:5: this_PlainIntegerType_1= rulePlainIntegerType
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIntegerTypeAccess().getPlainIntegerTypeParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PlainIntegerType_1=rulePlainIntegerType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_PlainIntegerType_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIec.g:533:5: this_UnsignedIntegerType_2= ruleUnsignedIntegerType
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIntegerTypeAccess().getUnsignedIntegerTypeParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_UnsignedIntegerType_2=ruleUnsignedIntegerType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_UnsignedIntegerType_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntegerType"


    // $ANTLR start "entryRuleSignedIntegerType"
    // InternalIec.g:549:1: entryRuleSignedIntegerType returns [EObject current=null] : iv_ruleSignedIntegerType= ruleSignedIntegerType EOF ;
    public final EObject entryRuleSignedIntegerType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSignedIntegerType = null;


        try {
            // InternalIec.g:550:2: (iv_ruleSignedIntegerType= ruleSignedIntegerType EOF )
            // InternalIec.g:551:2: iv_ruleSignedIntegerType= ruleSignedIntegerType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignedIntegerTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSignedIntegerType=ruleSignedIntegerType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignedIntegerType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSignedIntegerType"


    // $ANTLR start "ruleSignedIntegerType"
    // InternalIec.g:558:1: ruleSignedIntegerType returns [EObject current=null] : ( ( (lv_typeName_0_0= 'SINT' ) ) | ( (lv_typeName_1_0= 'DINT' ) ) | ( (lv_typeName_2_0= 'LINT' ) ) ) ;
    public final EObject ruleSignedIntegerType() throws RecognitionException {
        EObject current = null;

        Token lv_typeName_0_0=null;
        Token lv_typeName_1_0=null;
        Token lv_typeName_2_0=null;

         enterRule(); 
            
        try {
            // InternalIec.g:561:28: ( ( ( (lv_typeName_0_0= 'SINT' ) ) | ( (lv_typeName_1_0= 'DINT' ) ) | ( (lv_typeName_2_0= 'LINT' ) ) ) )
            // InternalIec.g:562:1: ( ( (lv_typeName_0_0= 'SINT' ) ) | ( (lv_typeName_1_0= 'DINT' ) ) | ( (lv_typeName_2_0= 'LINT' ) ) )
            {
            // InternalIec.g:562:1: ( ( (lv_typeName_0_0= 'SINT' ) ) | ( (lv_typeName_1_0= 'DINT' ) ) | ( (lv_typeName_2_0= 'LINT' ) ) )
            int alt10=3;
            switch ( input.LA(1) ) {
            case 33:
                {
                alt10=1;
                }
                break;
            case 34:
                {
                alt10=2;
                }
                break;
            case 35:
                {
                alt10=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }

            switch (alt10) {
                case 1 :
                    // InternalIec.g:562:2: ( (lv_typeName_0_0= 'SINT' ) )
                    {
                    // InternalIec.g:562:2: ( (lv_typeName_0_0= 'SINT' ) )
                    // InternalIec.g:563:1: (lv_typeName_0_0= 'SINT' )
                    {
                    // InternalIec.g:563:1: (lv_typeName_0_0= 'SINT' )
                    // InternalIec.g:564:3: lv_typeName_0_0= 'SINT'
                    {
                    lv_typeName_0_0=(Token)match(input,33,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_0_0, grammarAccess.getSignedIntegerTypeAccess().getTypeNameSINTKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSignedIntegerTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_0_0, "SINT");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIec.g:578:6: ( (lv_typeName_1_0= 'DINT' ) )
                    {
                    // InternalIec.g:578:6: ( (lv_typeName_1_0= 'DINT' ) )
                    // InternalIec.g:579:1: (lv_typeName_1_0= 'DINT' )
                    {
                    // InternalIec.g:579:1: (lv_typeName_1_0= 'DINT' )
                    // InternalIec.g:580:3: lv_typeName_1_0= 'DINT'
                    {
                    lv_typeName_1_0=(Token)match(input,34,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_1_0, grammarAccess.getSignedIntegerTypeAccess().getTypeNameDINTKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSignedIntegerTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_1_0, "DINT");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalIec.g:594:6: ( (lv_typeName_2_0= 'LINT' ) )
                    {
                    // InternalIec.g:594:6: ( (lv_typeName_2_0= 'LINT' ) )
                    // InternalIec.g:595:1: (lv_typeName_2_0= 'LINT' )
                    {
                    // InternalIec.g:595:1: (lv_typeName_2_0= 'LINT' )
                    // InternalIec.g:596:3: lv_typeName_2_0= 'LINT'
                    {
                    lv_typeName_2_0=(Token)match(input,35,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_2_0, grammarAccess.getSignedIntegerTypeAccess().getTypeNameLINTKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSignedIntegerTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_2_0, "LINT");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSignedIntegerType"


    // $ANTLR start "entryRulePlainIntegerType"
    // InternalIec.g:617:1: entryRulePlainIntegerType returns [EObject current=null] : iv_rulePlainIntegerType= rulePlainIntegerType EOF ;
    public final EObject entryRulePlainIntegerType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePlainIntegerType = null;


        try {
            // InternalIec.g:618:2: (iv_rulePlainIntegerType= rulePlainIntegerType EOF )
            // InternalIec.g:619:2: iv_rulePlainIntegerType= rulePlainIntegerType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPlainIntegerTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePlainIntegerType=rulePlainIntegerType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePlainIntegerType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePlainIntegerType"


    // $ANTLR start "rulePlainIntegerType"
    // InternalIec.g:626:1: rulePlainIntegerType returns [EObject current=null] : ( () otherlv_1= 'INT' ) ;
    public final EObject rulePlainIntegerType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // InternalIec.g:629:28: ( ( () otherlv_1= 'INT' ) )
            // InternalIec.g:630:1: ( () otherlv_1= 'INT' )
            {
            // InternalIec.g:630:1: ( () otherlv_1= 'INT' )
            // InternalIec.g:630:2: () otherlv_1= 'INT'
            {
            // InternalIec.g:630:2: ()
            // InternalIec.g:631:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPlainIntegerTypeAccess().getSignedIntegerTypeAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPlainIntegerTypeAccess().getINTKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePlainIntegerType"


    // $ANTLR start "entryRuleUnsignedIntegerType"
    // InternalIec.g:648:1: entryRuleUnsignedIntegerType returns [EObject current=null] : iv_ruleUnsignedIntegerType= ruleUnsignedIntegerType EOF ;
    public final EObject entryRuleUnsignedIntegerType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnsignedIntegerType = null;


        try {
            // InternalIec.g:649:2: (iv_ruleUnsignedIntegerType= ruleUnsignedIntegerType EOF )
            // InternalIec.g:650:2: iv_ruleUnsignedIntegerType= ruleUnsignedIntegerType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnsignedIntegerTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnsignedIntegerType=ruleUnsignedIntegerType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnsignedIntegerType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnsignedIntegerType"


    // $ANTLR start "ruleUnsignedIntegerType"
    // InternalIec.g:657:1: ruleUnsignedIntegerType returns [EObject current=null] : ( ( (lv_typeName_0_0= 'USINT' ) ) | ( (lv_typeName_1_0= 'UINT' ) ) | ( (lv_typeName_2_0= 'UDINT' ) ) | ( (lv_typeName_3_0= 'ULINT' ) ) ) ;
    public final EObject ruleUnsignedIntegerType() throws RecognitionException {
        EObject current = null;

        Token lv_typeName_0_0=null;
        Token lv_typeName_1_0=null;
        Token lv_typeName_2_0=null;
        Token lv_typeName_3_0=null;

         enterRule(); 
            
        try {
            // InternalIec.g:660:28: ( ( ( (lv_typeName_0_0= 'USINT' ) ) | ( (lv_typeName_1_0= 'UINT' ) ) | ( (lv_typeName_2_0= 'UDINT' ) ) | ( (lv_typeName_3_0= 'ULINT' ) ) ) )
            // InternalIec.g:661:1: ( ( (lv_typeName_0_0= 'USINT' ) ) | ( (lv_typeName_1_0= 'UINT' ) ) | ( (lv_typeName_2_0= 'UDINT' ) ) | ( (lv_typeName_3_0= 'ULINT' ) ) )
            {
            // InternalIec.g:661:1: ( ( (lv_typeName_0_0= 'USINT' ) ) | ( (lv_typeName_1_0= 'UINT' ) ) | ( (lv_typeName_2_0= 'UDINT' ) ) | ( (lv_typeName_3_0= 'ULINT' ) ) )
            int alt11=4;
            switch ( input.LA(1) ) {
            case 37:
                {
                alt11=1;
                }
                break;
            case 38:
                {
                alt11=2;
                }
                break;
            case 39:
                {
                alt11=3;
                }
                break;
            case 40:
                {
                alt11=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // InternalIec.g:661:2: ( (lv_typeName_0_0= 'USINT' ) )
                    {
                    // InternalIec.g:661:2: ( (lv_typeName_0_0= 'USINT' ) )
                    // InternalIec.g:662:1: (lv_typeName_0_0= 'USINT' )
                    {
                    // InternalIec.g:662:1: (lv_typeName_0_0= 'USINT' )
                    // InternalIec.g:663:3: lv_typeName_0_0= 'USINT'
                    {
                    lv_typeName_0_0=(Token)match(input,37,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_0_0, grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameUSINTKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getUnsignedIntegerTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_0_0, "USINT");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIec.g:677:6: ( (lv_typeName_1_0= 'UINT' ) )
                    {
                    // InternalIec.g:677:6: ( (lv_typeName_1_0= 'UINT' ) )
                    // InternalIec.g:678:1: (lv_typeName_1_0= 'UINT' )
                    {
                    // InternalIec.g:678:1: (lv_typeName_1_0= 'UINT' )
                    // InternalIec.g:679:3: lv_typeName_1_0= 'UINT'
                    {
                    lv_typeName_1_0=(Token)match(input,38,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_1_0, grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameUINTKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getUnsignedIntegerTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_1_0, "UINT");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalIec.g:693:6: ( (lv_typeName_2_0= 'UDINT' ) )
                    {
                    // InternalIec.g:693:6: ( (lv_typeName_2_0= 'UDINT' ) )
                    // InternalIec.g:694:1: (lv_typeName_2_0= 'UDINT' )
                    {
                    // InternalIec.g:694:1: (lv_typeName_2_0= 'UDINT' )
                    // InternalIec.g:695:3: lv_typeName_2_0= 'UDINT'
                    {
                    lv_typeName_2_0=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_2_0, grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameUDINTKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getUnsignedIntegerTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_2_0, "UDINT");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalIec.g:709:6: ( (lv_typeName_3_0= 'ULINT' ) )
                    {
                    // InternalIec.g:709:6: ( (lv_typeName_3_0= 'ULINT' ) )
                    // InternalIec.g:710:1: (lv_typeName_3_0= 'ULINT' )
                    {
                    // InternalIec.g:710:1: (lv_typeName_3_0= 'ULINT' )
                    // InternalIec.g:711:3: lv_typeName_3_0= 'ULINT'
                    {
                    lv_typeName_3_0=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_3_0, grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameULINTKeyword_3_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getUnsignedIntegerTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_3_0, "ULINT");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnsignedIntegerType"


    // $ANTLR start "entryRuleRealType"
    // InternalIec.g:732:1: entryRuleRealType returns [EObject current=null] : iv_ruleRealType= ruleRealType EOF ;
    public final EObject entryRuleRealType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRealType = null;


        try {
            // InternalIec.g:733:2: (iv_ruleRealType= ruleRealType EOF )
            // InternalIec.g:734:2: iv_ruleRealType= ruleRealType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRealTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRealType=ruleRealType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRealType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRealType"


    // $ANTLR start "ruleRealType"
    // InternalIec.g:741:1: ruleRealType returns [EObject current=null] : ( ( (lv_typeName_0_0= 'REAL' ) ) | ( (lv_typeName_1_0= 'LREAL' ) ) ) ;
    public final EObject ruleRealType() throws RecognitionException {
        EObject current = null;

        Token lv_typeName_0_0=null;
        Token lv_typeName_1_0=null;

         enterRule(); 
            
        try {
            // InternalIec.g:744:28: ( ( ( (lv_typeName_0_0= 'REAL' ) ) | ( (lv_typeName_1_0= 'LREAL' ) ) ) )
            // InternalIec.g:745:1: ( ( (lv_typeName_0_0= 'REAL' ) ) | ( (lv_typeName_1_0= 'LREAL' ) ) )
            {
            // InternalIec.g:745:1: ( ( (lv_typeName_0_0= 'REAL' ) ) | ( (lv_typeName_1_0= 'LREAL' ) ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==41) ) {
                alt12=1;
            }
            else if ( (LA12_0==42) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalIec.g:745:2: ( (lv_typeName_0_0= 'REAL' ) )
                    {
                    // InternalIec.g:745:2: ( (lv_typeName_0_0= 'REAL' ) )
                    // InternalIec.g:746:1: (lv_typeName_0_0= 'REAL' )
                    {
                    // InternalIec.g:746:1: (lv_typeName_0_0= 'REAL' )
                    // InternalIec.g:747:3: lv_typeName_0_0= 'REAL'
                    {
                    lv_typeName_0_0=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_0_0, grammarAccess.getRealTypeAccess().getTypeNameREALKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getRealTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_0_0, "REAL");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIec.g:761:6: ( (lv_typeName_1_0= 'LREAL' ) )
                    {
                    // InternalIec.g:761:6: ( (lv_typeName_1_0= 'LREAL' ) )
                    // InternalIec.g:762:1: (lv_typeName_1_0= 'LREAL' )
                    {
                    // InternalIec.g:762:1: (lv_typeName_1_0= 'LREAL' )
                    // InternalIec.g:763:3: lv_typeName_1_0= 'LREAL'
                    {
                    lv_typeName_1_0=(Token)match(input,42,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_1_0, grammarAccess.getRealTypeAccess().getTypeNameLREALKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getRealTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_1_0, "LREAL");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRealType"


    // $ANTLR start "entryRuleDateType"
    // InternalIec.g:784:1: entryRuleDateType returns [EObject current=null] : iv_ruleDateType= ruleDateType EOF ;
    public final EObject entryRuleDateType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDateType = null;


        try {
            // InternalIec.g:785:2: (iv_ruleDateType= ruleDateType EOF )
            // InternalIec.g:786:2: iv_ruleDateType= ruleDateType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDateTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDateType=ruleDateType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDateType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDateType"


    // $ANTLR start "ruleDateType"
    // InternalIec.g:793:1: ruleDateType returns [EObject current=null] : ( ( (lv_typeName_0_0= 'DATE' ) ) | ( (lv_typeName_1_0= 'TIME_OF_DAY' ) ) | ( (lv_typeName_2_0= 'TOD' ) ) | ( (lv_typeName_3_0= 'DATE_AND_TIME' ) ) | ( (lv_typeName_4_0= 'DT' ) ) ) ;
    public final EObject ruleDateType() throws RecognitionException {
        EObject current = null;

        Token lv_typeName_0_0=null;
        Token lv_typeName_1_0=null;
        Token lv_typeName_2_0=null;
        Token lv_typeName_3_0=null;
        Token lv_typeName_4_0=null;

         enterRule(); 
            
        try {
            // InternalIec.g:796:28: ( ( ( (lv_typeName_0_0= 'DATE' ) ) | ( (lv_typeName_1_0= 'TIME_OF_DAY' ) ) | ( (lv_typeName_2_0= 'TOD' ) ) | ( (lv_typeName_3_0= 'DATE_AND_TIME' ) ) | ( (lv_typeName_4_0= 'DT' ) ) ) )
            // InternalIec.g:797:1: ( ( (lv_typeName_0_0= 'DATE' ) ) | ( (lv_typeName_1_0= 'TIME_OF_DAY' ) ) | ( (lv_typeName_2_0= 'TOD' ) ) | ( (lv_typeName_3_0= 'DATE_AND_TIME' ) ) | ( (lv_typeName_4_0= 'DT' ) ) )
            {
            // InternalIec.g:797:1: ( ( (lv_typeName_0_0= 'DATE' ) ) | ( (lv_typeName_1_0= 'TIME_OF_DAY' ) ) | ( (lv_typeName_2_0= 'TOD' ) ) | ( (lv_typeName_3_0= 'DATE_AND_TIME' ) ) | ( (lv_typeName_4_0= 'DT' ) ) )
            int alt13=5;
            switch ( input.LA(1) ) {
            case 43:
                {
                alt13=1;
                }
                break;
            case 44:
                {
                alt13=2;
                }
                break;
            case 45:
                {
                alt13=3;
                }
                break;
            case 46:
                {
                alt13=4;
                }
                break;
            case 47:
                {
                alt13=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // InternalIec.g:797:2: ( (lv_typeName_0_0= 'DATE' ) )
                    {
                    // InternalIec.g:797:2: ( (lv_typeName_0_0= 'DATE' ) )
                    // InternalIec.g:798:1: (lv_typeName_0_0= 'DATE' )
                    {
                    // InternalIec.g:798:1: (lv_typeName_0_0= 'DATE' )
                    // InternalIec.g:799:3: lv_typeName_0_0= 'DATE'
                    {
                    lv_typeName_0_0=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_0_0, grammarAccess.getDateTypeAccess().getTypeNameDATEKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDateTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_0_0, "DATE");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIec.g:813:6: ( (lv_typeName_1_0= 'TIME_OF_DAY' ) )
                    {
                    // InternalIec.g:813:6: ( (lv_typeName_1_0= 'TIME_OF_DAY' ) )
                    // InternalIec.g:814:1: (lv_typeName_1_0= 'TIME_OF_DAY' )
                    {
                    // InternalIec.g:814:1: (lv_typeName_1_0= 'TIME_OF_DAY' )
                    // InternalIec.g:815:3: lv_typeName_1_0= 'TIME_OF_DAY'
                    {
                    lv_typeName_1_0=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_1_0, grammarAccess.getDateTypeAccess().getTypeNameTIME_OF_DAYKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDateTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_1_0, "TIME_OF_DAY");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalIec.g:829:6: ( (lv_typeName_2_0= 'TOD' ) )
                    {
                    // InternalIec.g:829:6: ( (lv_typeName_2_0= 'TOD' ) )
                    // InternalIec.g:830:1: (lv_typeName_2_0= 'TOD' )
                    {
                    // InternalIec.g:830:1: (lv_typeName_2_0= 'TOD' )
                    // InternalIec.g:831:3: lv_typeName_2_0= 'TOD'
                    {
                    lv_typeName_2_0=(Token)match(input,45,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_2_0, grammarAccess.getDateTypeAccess().getTypeNameTODKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDateTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_2_0, "TOD");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalIec.g:845:6: ( (lv_typeName_3_0= 'DATE_AND_TIME' ) )
                    {
                    // InternalIec.g:845:6: ( (lv_typeName_3_0= 'DATE_AND_TIME' ) )
                    // InternalIec.g:846:1: (lv_typeName_3_0= 'DATE_AND_TIME' )
                    {
                    // InternalIec.g:846:1: (lv_typeName_3_0= 'DATE_AND_TIME' )
                    // InternalIec.g:847:3: lv_typeName_3_0= 'DATE_AND_TIME'
                    {
                    lv_typeName_3_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_3_0, grammarAccess.getDateTypeAccess().getTypeNameDATE_AND_TIMEKeyword_3_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDateTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_3_0, "DATE_AND_TIME");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalIec.g:861:6: ( (lv_typeName_4_0= 'DT' ) )
                    {
                    // InternalIec.g:861:6: ( (lv_typeName_4_0= 'DT' ) )
                    // InternalIec.g:862:1: (lv_typeName_4_0= 'DT' )
                    {
                    // InternalIec.g:862:1: (lv_typeName_4_0= 'DT' )
                    // InternalIec.g:863:3: lv_typeName_4_0= 'DT'
                    {
                    lv_typeName_4_0=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_4_0, grammarAccess.getDateTypeAccess().getTypeNameDTKeyword_4_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDateTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_4_0, "DT");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDateType"


    // $ANTLR start "entryRuleBitStringType"
    // InternalIec.g:884:1: entryRuleBitStringType returns [EObject current=null] : iv_ruleBitStringType= ruleBitStringType EOF ;
    public final EObject entryRuleBitStringType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitStringType = null;


        try {
            // InternalIec.g:885:2: (iv_ruleBitStringType= ruleBitStringType EOF )
            // InternalIec.g:886:2: iv_ruleBitStringType= ruleBitStringType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitStringTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBitStringType=ruleBitStringType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitStringType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitStringType"


    // $ANTLR start "ruleBitStringType"
    // InternalIec.g:893:1: ruleBitStringType returns [EObject current=null] : ( ( (lv_typeName_0_0= 'BOOL' ) ) | ( (lv_typeName_1_0= 'BYTE' ) ) | ( (lv_typeName_2_0= 'WORD' ) ) | ( (lv_typeName_3_0= 'DWORD' ) ) | ( (lv_typeName_4_0= 'LWORD' ) ) ) ;
    public final EObject ruleBitStringType() throws RecognitionException {
        EObject current = null;

        Token lv_typeName_0_0=null;
        Token lv_typeName_1_0=null;
        Token lv_typeName_2_0=null;
        Token lv_typeName_3_0=null;
        Token lv_typeName_4_0=null;

         enterRule(); 
            
        try {
            // InternalIec.g:896:28: ( ( ( (lv_typeName_0_0= 'BOOL' ) ) | ( (lv_typeName_1_0= 'BYTE' ) ) | ( (lv_typeName_2_0= 'WORD' ) ) | ( (lv_typeName_3_0= 'DWORD' ) ) | ( (lv_typeName_4_0= 'LWORD' ) ) ) )
            // InternalIec.g:897:1: ( ( (lv_typeName_0_0= 'BOOL' ) ) | ( (lv_typeName_1_0= 'BYTE' ) ) | ( (lv_typeName_2_0= 'WORD' ) ) | ( (lv_typeName_3_0= 'DWORD' ) ) | ( (lv_typeName_4_0= 'LWORD' ) ) )
            {
            // InternalIec.g:897:1: ( ( (lv_typeName_0_0= 'BOOL' ) ) | ( (lv_typeName_1_0= 'BYTE' ) ) | ( (lv_typeName_2_0= 'WORD' ) ) | ( (lv_typeName_3_0= 'DWORD' ) ) | ( (lv_typeName_4_0= 'LWORD' ) ) )
            int alt14=5;
            switch ( input.LA(1) ) {
            case 48:
                {
                alt14=1;
                }
                break;
            case 49:
                {
                alt14=2;
                }
                break;
            case 50:
                {
                alt14=3;
                }
                break;
            case 51:
                {
                alt14=4;
                }
                break;
            case 52:
                {
                alt14=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }

            switch (alt14) {
                case 1 :
                    // InternalIec.g:897:2: ( (lv_typeName_0_0= 'BOOL' ) )
                    {
                    // InternalIec.g:897:2: ( (lv_typeName_0_0= 'BOOL' ) )
                    // InternalIec.g:898:1: (lv_typeName_0_0= 'BOOL' )
                    {
                    // InternalIec.g:898:1: (lv_typeName_0_0= 'BOOL' )
                    // InternalIec.g:899:3: lv_typeName_0_0= 'BOOL'
                    {
                    lv_typeName_0_0=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_0_0, grammarAccess.getBitStringTypeAccess().getTypeNameBOOLKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getBitStringTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_0_0, "BOOL");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIec.g:913:6: ( (lv_typeName_1_0= 'BYTE' ) )
                    {
                    // InternalIec.g:913:6: ( (lv_typeName_1_0= 'BYTE' ) )
                    // InternalIec.g:914:1: (lv_typeName_1_0= 'BYTE' )
                    {
                    // InternalIec.g:914:1: (lv_typeName_1_0= 'BYTE' )
                    // InternalIec.g:915:3: lv_typeName_1_0= 'BYTE'
                    {
                    lv_typeName_1_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_1_0, grammarAccess.getBitStringTypeAccess().getTypeNameBYTEKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getBitStringTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_1_0, "BYTE");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalIec.g:929:6: ( (lv_typeName_2_0= 'WORD' ) )
                    {
                    // InternalIec.g:929:6: ( (lv_typeName_2_0= 'WORD' ) )
                    // InternalIec.g:930:1: (lv_typeName_2_0= 'WORD' )
                    {
                    // InternalIec.g:930:1: (lv_typeName_2_0= 'WORD' )
                    // InternalIec.g:931:3: lv_typeName_2_0= 'WORD'
                    {
                    lv_typeName_2_0=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_2_0, grammarAccess.getBitStringTypeAccess().getTypeNameWORDKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getBitStringTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_2_0, "WORD");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalIec.g:945:6: ( (lv_typeName_3_0= 'DWORD' ) )
                    {
                    // InternalIec.g:945:6: ( (lv_typeName_3_0= 'DWORD' ) )
                    // InternalIec.g:946:1: (lv_typeName_3_0= 'DWORD' )
                    {
                    // InternalIec.g:946:1: (lv_typeName_3_0= 'DWORD' )
                    // InternalIec.g:947:3: lv_typeName_3_0= 'DWORD'
                    {
                    lv_typeName_3_0=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_3_0, grammarAccess.getBitStringTypeAccess().getTypeNameDWORDKeyword_3_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getBitStringTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_3_0, "DWORD");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalIec.g:961:6: ( (lv_typeName_4_0= 'LWORD' ) )
                    {
                    // InternalIec.g:961:6: ( (lv_typeName_4_0= 'LWORD' ) )
                    // InternalIec.g:962:1: (lv_typeName_4_0= 'LWORD' )
                    {
                    // InternalIec.g:962:1: (lv_typeName_4_0= 'LWORD' )
                    // InternalIec.g:963:3: lv_typeName_4_0= 'LWORD'
                    {
                    lv_typeName_4_0=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_4_0, grammarAccess.getBitStringTypeAccess().getTypeNameLWORDKeyword_4_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getBitStringTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_4_0, "LWORD");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitStringType"


    // $ANTLR start "entryRuleGenericType"
    // InternalIec.g:984:1: entryRuleGenericType returns [EObject current=null] : iv_ruleGenericType= ruleGenericType EOF ;
    public final EObject entryRuleGenericType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGenericType = null;


        try {
            // InternalIec.g:985:2: (iv_ruleGenericType= ruleGenericType EOF )
            // InternalIec.g:986:2: iv_ruleGenericType= ruleGenericType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGenericTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGenericType=ruleGenericType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGenericType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGenericType"


    // $ANTLR start "ruleGenericType"
    // InternalIec.g:993:1: ruleGenericType returns [EObject current=null] : ( ( (lv_typeName_0_0= 'ANY' ) ) | ( (lv_typeName_1_0= 'ANY_DERIVED' ) ) | ( (lv_typeName_2_0= 'ANY_ELEMENTARY' ) ) | ( (lv_typeName_3_0= 'ANY_MAGNITUDE' ) ) | ( (lv_typeName_4_0= 'ANY_NUM' ) ) | ( (lv_typeName_5_0= 'ANY_REAL' ) ) | ( (lv_typeName_6_0= 'ANY_INT' ) ) | ( (lv_typeName_7_0= 'ANY_BIT' ) ) | ( (lv_typeName_8_0= 'ANY_STRING' ) ) | ( (lv_typeName_9_0= 'ANY_DATE' ) ) ) ;
    public final EObject ruleGenericType() throws RecognitionException {
        EObject current = null;

        Token lv_typeName_0_0=null;
        Token lv_typeName_1_0=null;
        Token lv_typeName_2_0=null;
        Token lv_typeName_3_0=null;
        Token lv_typeName_4_0=null;
        Token lv_typeName_5_0=null;
        Token lv_typeName_6_0=null;
        Token lv_typeName_7_0=null;
        Token lv_typeName_8_0=null;
        Token lv_typeName_9_0=null;

         enterRule(); 
            
        try {
            // InternalIec.g:996:28: ( ( ( (lv_typeName_0_0= 'ANY' ) ) | ( (lv_typeName_1_0= 'ANY_DERIVED' ) ) | ( (lv_typeName_2_0= 'ANY_ELEMENTARY' ) ) | ( (lv_typeName_3_0= 'ANY_MAGNITUDE' ) ) | ( (lv_typeName_4_0= 'ANY_NUM' ) ) | ( (lv_typeName_5_0= 'ANY_REAL' ) ) | ( (lv_typeName_6_0= 'ANY_INT' ) ) | ( (lv_typeName_7_0= 'ANY_BIT' ) ) | ( (lv_typeName_8_0= 'ANY_STRING' ) ) | ( (lv_typeName_9_0= 'ANY_DATE' ) ) ) )
            // InternalIec.g:997:1: ( ( (lv_typeName_0_0= 'ANY' ) ) | ( (lv_typeName_1_0= 'ANY_DERIVED' ) ) | ( (lv_typeName_2_0= 'ANY_ELEMENTARY' ) ) | ( (lv_typeName_3_0= 'ANY_MAGNITUDE' ) ) | ( (lv_typeName_4_0= 'ANY_NUM' ) ) | ( (lv_typeName_5_0= 'ANY_REAL' ) ) | ( (lv_typeName_6_0= 'ANY_INT' ) ) | ( (lv_typeName_7_0= 'ANY_BIT' ) ) | ( (lv_typeName_8_0= 'ANY_STRING' ) ) | ( (lv_typeName_9_0= 'ANY_DATE' ) ) )
            {
            // InternalIec.g:997:1: ( ( (lv_typeName_0_0= 'ANY' ) ) | ( (lv_typeName_1_0= 'ANY_DERIVED' ) ) | ( (lv_typeName_2_0= 'ANY_ELEMENTARY' ) ) | ( (lv_typeName_3_0= 'ANY_MAGNITUDE' ) ) | ( (lv_typeName_4_0= 'ANY_NUM' ) ) | ( (lv_typeName_5_0= 'ANY_REAL' ) ) | ( (lv_typeName_6_0= 'ANY_INT' ) ) | ( (lv_typeName_7_0= 'ANY_BIT' ) ) | ( (lv_typeName_8_0= 'ANY_STRING' ) ) | ( (lv_typeName_9_0= 'ANY_DATE' ) ) )
            int alt15=10;
            switch ( input.LA(1) ) {
            case 53:
                {
                alt15=1;
                }
                break;
            case 54:
                {
                alt15=2;
                }
                break;
            case 55:
                {
                alt15=3;
                }
                break;
            case 56:
                {
                alt15=4;
                }
                break;
            case 57:
                {
                alt15=5;
                }
                break;
            case 58:
                {
                alt15=6;
                }
                break;
            case 59:
                {
                alt15=7;
                }
                break;
            case 60:
                {
                alt15=8;
                }
                break;
            case 61:
                {
                alt15=9;
                }
                break;
            case 62:
                {
                alt15=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // InternalIec.g:997:2: ( (lv_typeName_0_0= 'ANY' ) )
                    {
                    // InternalIec.g:997:2: ( (lv_typeName_0_0= 'ANY' ) )
                    // InternalIec.g:998:1: (lv_typeName_0_0= 'ANY' )
                    {
                    // InternalIec.g:998:1: (lv_typeName_0_0= 'ANY' )
                    // InternalIec.g:999:3: lv_typeName_0_0= 'ANY'
                    {
                    lv_typeName_0_0=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_0_0, grammarAccess.getGenericTypeAccess().getTypeNameANYKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getGenericTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_0_0, "ANY");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIec.g:1013:6: ( (lv_typeName_1_0= 'ANY_DERIVED' ) )
                    {
                    // InternalIec.g:1013:6: ( (lv_typeName_1_0= 'ANY_DERIVED' ) )
                    // InternalIec.g:1014:1: (lv_typeName_1_0= 'ANY_DERIVED' )
                    {
                    // InternalIec.g:1014:1: (lv_typeName_1_0= 'ANY_DERIVED' )
                    // InternalIec.g:1015:3: lv_typeName_1_0= 'ANY_DERIVED'
                    {
                    lv_typeName_1_0=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_1_0, grammarAccess.getGenericTypeAccess().getTypeNameANY_DERIVEDKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getGenericTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_1_0, "ANY_DERIVED");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalIec.g:1029:6: ( (lv_typeName_2_0= 'ANY_ELEMENTARY' ) )
                    {
                    // InternalIec.g:1029:6: ( (lv_typeName_2_0= 'ANY_ELEMENTARY' ) )
                    // InternalIec.g:1030:1: (lv_typeName_2_0= 'ANY_ELEMENTARY' )
                    {
                    // InternalIec.g:1030:1: (lv_typeName_2_0= 'ANY_ELEMENTARY' )
                    // InternalIec.g:1031:3: lv_typeName_2_0= 'ANY_ELEMENTARY'
                    {
                    lv_typeName_2_0=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_2_0, grammarAccess.getGenericTypeAccess().getTypeNameANY_ELEMENTARYKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getGenericTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_2_0, "ANY_ELEMENTARY");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalIec.g:1045:6: ( (lv_typeName_3_0= 'ANY_MAGNITUDE' ) )
                    {
                    // InternalIec.g:1045:6: ( (lv_typeName_3_0= 'ANY_MAGNITUDE' ) )
                    // InternalIec.g:1046:1: (lv_typeName_3_0= 'ANY_MAGNITUDE' )
                    {
                    // InternalIec.g:1046:1: (lv_typeName_3_0= 'ANY_MAGNITUDE' )
                    // InternalIec.g:1047:3: lv_typeName_3_0= 'ANY_MAGNITUDE'
                    {
                    lv_typeName_3_0=(Token)match(input,56,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_3_0, grammarAccess.getGenericTypeAccess().getTypeNameANY_MAGNITUDEKeyword_3_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getGenericTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_3_0, "ANY_MAGNITUDE");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalIec.g:1061:6: ( (lv_typeName_4_0= 'ANY_NUM' ) )
                    {
                    // InternalIec.g:1061:6: ( (lv_typeName_4_0= 'ANY_NUM' ) )
                    // InternalIec.g:1062:1: (lv_typeName_4_0= 'ANY_NUM' )
                    {
                    // InternalIec.g:1062:1: (lv_typeName_4_0= 'ANY_NUM' )
                    // InternalIec.g:1063:3: lv_typeName_4_0= 'ANY_NUM'
                    {
                    lv_typeName_4_0=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_4_0, grammarAccess.getGenericTypeAccess().getTypeNameANY_NUMKeyword_4_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getGenericTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_4_0, "ANY_NUM");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalIec.g:1077:6: ( (lv_typeName_5_0= 'ANY_REAL' ) )
                    {
                    // InternalIec.g:1077:6: ( (lv_typeName_5_0= 'ANY_REAL' ) )
                    // InternalIec.g:1078:1: (lv_typeName_5_0= 'ANY_REAL' )
                    {
                    // InternalIec.g:1078:1: (lv_typeName_5_0= 'ANY_REAL' )
                    // InternalIec.g:1079:3: lv_typeName_5_0= 'ANY_REAL'
                    {
                    lv_typeName_5_0=(Token)match(input,58,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_5_0, grammarAccess.getGenericTypeAccess().getTypeNameANY_REALKeyword_5_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getGenericTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_5_0, "ANY_REAL");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalIec.g:1093:6: ( (lv_typeName_6_0= 'ANY_INT' ) )
                    {
                    // InternalIec.g:1093:6: ( (lv_typeName_6_0= 'ANY_INT' ) )
                    // InternalIec.g:1094:1: (lv_typeName_6_0= 'ANY_INT' )
                    {
                    // InternalIec.g:1094:1: (lv_typeName_6_0= 'ANY_INT' )
                    // InternalIec.g:1095:3: lv_typeName_6_0= 'ANY_INT'
                    {
                    lv_typeName_6_0=(Token)match(input,59,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_6_0, grammarAccess.getGenericTypeAccess().getTypeNameANY_INTKeyword_6_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getGenericTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_6_0, "ANY_INT");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalIec.g:1109:6: ( (lv_typeName_7_0= 'ANY_BIT' ) )
                    {
                    // InternalIec.g:1109:6: ( (lv_typeName_7_0= 'ANY_BIT' ) )
                    // InternalIec.g:1110:1: (lv_typeName_7_0= 'ANY_BIT' )
                    {
                    // InternalIec.g:1110:1: (lv_typeName_7_0= 'ANY_BIT' )
                    // InternalIec.g:1111:3: lv_typeName_7_0= 'ANY_BIT'
                    {
                    lv_typeName_7_0=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_7_0, grammarAccess.getGenericTypeAccess().getTypeNameANY_BITKeyword_7_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getGenericTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_7_0, "ANY_BIT");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalIec.g:1125:6: ( (lv_typeName_8_0= 'ANY_STRING' ) )
                    {
                    // InternalIec.g:1125:6: ( (lv_typeName_8_0= 'ANY_STRING' ) )
                    // InternalIec.g:1126:1: (lv_typeName_8_0= 'ANY_STRING' )
                    {
                    // InternalIec.g:1126:1: (lv_typeName_8_0= 'ANY_STRING' )
                    // InternalIec.g:1127:3: lv_typeName_8_0= 'ANY_STRING'
                    {
                    lv_typeName_8_0=(Token)match(input,61,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_8_0, grammarAccess.getGenericTypeAccess().getTypeNameANY_STRINGKeyword_8_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getGenericTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_8_0, "ANY_STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalIec.g:1141:6: ( (lv_typeName_9_0= 'ANY_DATE' ) )
                    {
                    // InternalIec.g:1141:6: ( (lv_typeName_9_0= 'ANY_DATE' ) )
                    // InternalIec.g:1142:1: (lv_typeName_9_0= 'ANY_DATE' )
                    {
                    // InternalIec.g:1142:1: (lv_typeName_9_0= 'ANY_DATE' )
                    // InternalIec.g:1143:3: lv_typeName_9_0= 'ANY_DATE'
                    {
                    lv_typeName_9_0=(Token)match(input,62,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_typeName_9_0, grammarAccess.getGenericTypeAccess().getTypeNameANY_DATEKeyword_9_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getGenericTypeRule());
                      	        }
                             		setWithLastConsumed(current, "typeName", lv_typeName_9_0, "ANY_DATE");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGenericType"


    // $ANTLR start "entryRuleDerivedType"
    // InternalIec.g:1164:1: entryRuleDerivedType returns [EObject current=null] : iv_ruleDerivedType= ruleDerivedType EOF ;
    public final EObject entryRuleDerivedType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDerivedType = null;


        try {
            // InternalIec.g:1165:2: (iv_ruleDerivedType= ruleDerivedType EOF )
            // InternalIec.g:1166:2: iv_ruleDerivedType= ruleDerivedType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDerivedTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDerivedType=ruleDerivedType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDerivedType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDerivedType"


    // $ANTLR start "ruleDerivedType"
    // InternalIec.g:1173:1: ruleDerivedType returns [EObject current=null] : ( (lv_name_0_0= ruleIdentifier ) ) ;
    public final EObject ruleDerivedType() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:1176:28: ( ( (lv_name_0_0= ruleIdentifier ) ) )
            // InternalIec.g:1177:1: ( (lv_name_0_0= ruleIdentifier ) )
            {
            // InternalIec.g:1177:1: ( (lv_name_0_0= ruleIdentifier ) )
            // InternalIec.g:1178:1: (lv_name_0_0= ruleIdentifier )
            {
            // InternalIec.g:1178:1: (lv_name_0_0= ruleIdentifier )
            // InternalIec.g:1179:3: lv_name_0_0= ruleIdentifier
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDerivedTypeAccess().getNameIdentifierParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDerivedTypeRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"com.bichler.iec.Iec.Identifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDerivedType"


    // $ANTLR start "entryRuleDataTypeDeclaration"
    // InternalIec.g:1203:1: entryRuleDataTypeDeclaration returns [EObject current=null] : iv_ruleDataTypeDeclaration= ruleDataTypeDeclaration EOF ;
    public final EObject entryRuleDataTypeDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDataTypeDeclaration = null;


        try {
            // InternalIec.g:1204:2: (iv_ruleDataTypeDeclaration= ruleDataTypeDeclaration EOF )
            // InternalIec.g:1205:2: iv_ruleDataTypeDeclaration= ruleDataTypeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDataTypeDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDataTypeDeclaration=ruleDataTypeDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDataTypeDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDataTypeDeclaration"


    // $ANTLR start "ruleDataTypeDeclaration"
    // InternalIec.g:1212:1: ruleDataTypeDeclaration returns [EObject current=null] : (otherlv_0= 'TYPE' ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' ( (lv_typeDeclaration_3_0= ruleTypeDeclaration ) ) this_EOL_4= RULE_EOL ( ( (lv_typeDeclaration_5_0= ruleTypeDeclaration ) ) this_EOL_6= RULE_EOL )* otherlv_7= 'END_TYPE' ) ;
    public final EObject ruleDataTypeDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token this_EOL_4=null;
        Token this_EOL_6=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_typeDeclaration_3_0 = null;

        EObject lv_typeDeclaration_5_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:1215:28: ( (otherlv_0= 'TYPE' ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' ( (lv_typeDeclaration_3_0= ruleTypeDeclaration ) ) this_EOL_4= RULE_EOL ( ( (lv_typeDeclaration_5_0= ruleTypeDeclaration ) ) this_EOL_6= RULE_EOL )* otherlv_7= 'END_TYPE' ) )
            // InternalIec.g:1216:1: (otherlv_0= 'TYPE' ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' ( (lv_typeDeclaration_3_0= ruleTypeDeclaration ) ) this_EOL_4= RULE_EOL ( ( (lv_typeDeclaration_5_0= ruleTypeDeclaration ) ) this_EOL_6= RULE_EOL )* otherlv_7= 'END_TYPE' )
            {
            // InternalIec.g:1216:1: (otherlv_0= 'TYPE' ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' ( (lv_typeDeclaration_3_0= ruleTypeDeclaration ) ) this_EOL_4= RULE_EOL ( ( (lv_typeDeclaration_5_0= ruleTypeDeclaration ) ) this_EOL_6= RULE_EOL )* otherlv_7= 'END_TYPE' )
            // InternalIec.g:1216:3: otherlv_0= 'TYPE' ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' ( (lv_typeDeclaration_3_0= ruleTypeDeclaration ) ) this_EOL_4= RULE_EOL ( ( (lv_typeDeclaration_5_0= ruleTypeDeclaration ) ) this_EOL_6= RULE_EOL )* otherlv_7= 'END_TYPE'
            {
            otherlv_0=(Token)match(input,63,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getDataTypeDeclarationAccess().getTYPEKeyword_0());
                  
            }
            // InternalIec.g:1220:1: ( (lv_name_1_0= ruleIdentifier ) )
            // InternalIec.g:1221:1: (lv_name_1_0= ruleIdentifier )
            {
            // InternalIec.g:1221:1: (lv_name_1_0= ruleIdentifier )
            // InternalIec.g:1222:3: lv_name_1_0= ruleIdentifier
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDataTypeDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_5);
            lv_name_1_0=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDataTypeDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"com.bichler.iec.Iec.Identifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,64,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getDataTypeDeclarationAccess().getColonKeyword_2());
                  
            }
            // InternalIec.g:1242:1: ( (lv_typeDeclaration_3_0= ruleTypeDeclaration ) )
            // InternalIec.g:1243:1: (lv_typeDeclaration_3_0= ruleTypeDeclaration )
            {
            // InternalIec.g:1243:1: (lv_typeDeclaration_3_0= ruleTypeDeclaration )
            // InternalIec.g:1244:3: lv_typeDeclaration_3_0= ruleTypeDeclaration
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDataTypeDeclarationAccess().getTypeDeclarationTypeDeclarationParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_typeDeclaration_3_0=ruleTypeDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDataTypeDeclarationRule());
              	        }
                     		add(
                     			current, 
                     			"typeDeclaration",
                      		lv_typeDeclaration_3_0, 
                      		"com.bichler.iec.Iec.TypeDeclaration");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            this_EOL_4=(Token)match(input,RULE_EOL,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_EOL_4, grammarAccess.getDataTypeDeclarationAccess().getEOLTerminalRuleCall_4()); 
                  
            }
            // InternalIec.g:1264:1: ( ( (lv_typeDeclaration_5_0= ruleTypeDeclaration ) ) this_EOL_6= RULE_EOL )*
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( ((LA16_0>=RULE_LETTER && LA16_0<=RULE_ID)) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // InternalIec.g:1264:2: ( (lv_typeDeclaration_5_0= ruleTypeDeclaration ) ) this_EOL_6= RULE_EOL
            	    {
            	    // InternalIec.g:1264:2: ( (lv_typeDeclaration_5_0= ruleTypeDeclaration ) )
            	    // InternalIec.g:1265:1: (lv_typeDeclaration_5_0= ruleTypeDeclaration )
            	    {
            	    // InternalIec.g:1265:1: (lv_typeDeclaration_5_0= ruleTypeDeclaration )
            	    // InternalIec.g:1266:3: lv_typeDeclaration_5_0= ruleTypeDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDataTypeDeclarationAccess().getTypeDeclarationTypeDeclarationParserRuleCall_5_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_typeDeclaration_5_0=ruleTypeDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDataTypeDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"typeDeclaration",
            	              		lv_typeDeclaration_5_0, 
            	              		"com.bichler.iec.Iec.TypeDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    this_EOL_6=(Token)match(input,RULE_EOL,FOLLOW_7); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_EOL_6, grammarAccess.getDataTypeDeclarationAccess().getEOLTerminalRuleCall_5_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);

            otherlv_7=(Token)match(input,65,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getDataTypeDeclarationAccess().getEND_TYPEKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataTypeDeclaration"


    // $ANTLR start "entryRuleTypeDeclaration"
    // InternalIec.g:1298:1: entryRuleTypeDeclaration returns [EObject current=null] : iv_ruleTypeDeclaration= ruleTypeDeclaration EOF ;
    public final EObject entryRuleTypeDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeDeclaration = null;


        try {
            // InternalIec.g:1299:2: (iv_ruleTypeDeclaration= ruleTypeDeclaration EOF )
            // InternalIec.g:1300:2: iv_ruleTypeDeclaration= ruleTypeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeDeclaration=ruleTypeDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeDeclaration"


    // $ANTLR start "ruleTypeDeclaration"
    // InternalIec.g:1307:1: ruleTypeDeclaration returns [EObject current=null] : (this_SimpleTypeDeclaration_0= ruleSimpleTypeDeclaration | this_RangeDeclaration_1= ruleRangeDeclaration | this_EnumDeclaration_2= ruleEnumDeclaration | this_ArrayDeclaration_3= ruleArrayDeclaration | this_StructureTypeDeclaration_4= ruleStructureTypeDeclaration | this_StringDeclaration_5= ruleStringDeclaration ) ;
    public final EObject ruleTypeDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_SimpleTypeDeclaration_0 = null;

        EObject this_RangeDeclaration_1 = null;

        EObject this_EnumDeclaration_2 = null;

        EObject this_ArrayDeclaration_3 = null;

        EObject this_StructureTypeDeclaration_4 = null;

        EObject this_StringDeclaration_5 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:1310:28: ( (this_SimpleTypeDeclaration_0= ruleSimpleTypeDeclaration | this_RangeDeclaration_1= ruleRangeDeclaration | this_EnumDeclaration_2= ruleEnumDeclaration | this_ArrayDeclaration_3= ruleArrayDeclaration | this_StructureTypeDeclaration_4= ruleStructureTypeDeclaration | this_StringDeclaration_5= ruleStringDeclaration ) )
            // InternalIec.g:1311:1: (this_SimpleTypeDeclaration_0= ruleSimpleTypeDeclaration | this_RangeDeclaration_1= ruleRangeDeclaration | this_EnumDeclaration_2= ruleEnumDeclaration | this_ArrayDeclaration_3= ruleArrayDeclaration | this_StructureTypeDeclaration_4= ruleStructureTypeDeclaration | this_StringDeclaration_5= ruleStringDeclaration )
            {
            // InternalIec.g:1311:1: (this_SimpleTypeDeclaration_0= ruleSimpleTypeDeclaration | this_RangeDeclaration_1= ruleRangeDeclaration | this_EnumDeclaration_2= ruleEnumDeclaration | this_ArrayDeclaration_3= ruleArrayDeclaration | this_StructureTypeDeclaration_4= ruleStructureTypeDeclaration | this_StringDeclaration_5= ruleStringDeclaration )
            int alt17=6;
            alt17 = dfa17.predict(input);
            switch (alt17) {
                case 1 :
                    // InternalIec.g:1312:5: this_SimpleTypeDeclaration_0= ruleSimpleTypeDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeDeclarationAccess().getSimpleTypeDeclarationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SimpleTypeDeclaration_0=ruleSimpleTypeDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SimpleTypeDeclaration_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:1322:5: this_RangeDeclaration_1= ruleRangeDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeDeclarationAccess().getRangeDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_RangeDeclaration_1=ruleRangeDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_RangeDeclaration_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIec.g:1332:5: this_EnumDeclaration_2= ruleEnumDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeDeclarationAccess().getEnumDeclarationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_EnumDeclaration_2=ruleEnumDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_EnumDeclaration_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalIec.g:1342:5: this_ArrayDeclaration_3= ruleArrayDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeDeclarationAccess().getArrayDeclarationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayDeclaration_3=ruleArrayDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ArrayDeclaration_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalIec.g:1352:5: this_StructureTypeDeclaration_4= ruleStructureTypeDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeDeclarationAccess().getStructureTypeDeclarationParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_StructureTypeDeclaration_4=ruleStructureTypeDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StructureTypeDeclaration_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalIec.g:1362:5: this_StringDeclaration_5= ruleStringDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeDeclarationAccess().getStringDeclarationParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_StringDeclaration_5=ruleStringDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StringDeclaration_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeDeclaration"


    // $ANTLR start "entryRuleSimpleTypeDeclaration"
    // InternalIec.g:1378:1: entryRuleSimpleTypeDeclaration returns [EObject current=null] : iv_ruleSimpleTypeDeclaration= ruleSimpleTypeDeclaration EOF ;
    public final EObject entryRuleSimpleTypeDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleTypeDeclaration = null;


        try {
            // InternalIec.g:1379:2: (iv_ruleSimpleTypeDeclaration= ruleSimpleTypeDeclaration EOF )
            // InternalIec.g:1380:2: iv_ruleSimpleTypeDeclaration= ruleSimpleTypeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleTypeDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleTypeDeclaration=ruleSimpleTypeDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleTypeDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleTypeDeclaration"


    // $ANTLR start "ruleSimpleTypeDeclaration"
    // InternalIec.g:1387:1: ruleSimpleTypeDeclaration returns [EObject current=null] : ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' ( (lv_specInit_2_0= ruleSpecInit ) ) ) ;
    public final EObject ruleSimpleTypeDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_derivedType_0_0 = null;

        EObject lv_specInit_2_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:1390:28: ( ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' ( (lv_specInit_2_0= ruleSpecInit ) ) ) )
            // InternalIec.g:1391:1: ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' ( (lv_specInit_2_0= ruleSpecInit ) ) )
            {
            // InternalIec.g:1391:1: ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' ( (lv_specInit_2_0= ruleSpecInit ) ) )
            // InternalIec.g:1391:2: ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' ( (lv_specInit_2_0= ruleSpecInit ) )
            {
            // InternalIec.g:1391:2: ( (lv_derivedType_0_0= ruleDerivedType ) )
            // InternalIec.g:1392:1: (lv_derivedType_0_0= ruleDerivedType )
            {
            // InternalIec.g:1392:1: (lv_derivedType_0_0= ruleDerivedType )
            // InternalIec.g:1393:3: lv_derivedType_0_0= ruleDerivedType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSimpleTypeDeclarationAccess().getDerivedTypeDerivedTypeParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_5);
            lv_derivedType_0_0=ruleDerivedType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSimpleTypeDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"derivedType",
                      		lv_derivedType_0_0, 
                      		"com.bichler.iec.Iec.DerivedType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,64,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSimpleTypeDeclarationAccess().getColonKeyword_1());
                  
            }
            // InternalIec.g:1413:1: ( (lv_specInit_2_0= ruleSpecInit ) )
            // InternalIec.g:1414:1: (lv_specInit_2_0= ruleSpecInit )
            {
            // InternalIec.g:1414:1: (lv_specInit_2_0= ruleSpecInit )
            // InternalIec.g:1415:3: lv_specInit_2_0= ruleSpecInit
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSimpleTypeDeclarationAccess().getSpecInitSpecInitParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_specInit_2_0=ruleSpecInit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSimpleTypeDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"specInit",
                      		lv_specInit_2_0, 
                      		"com.bichler.iec.Iec.SpecInit");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleTypeDeclaration"


    // $ANTLR start "entryRuleSpecInit"
    // InternalIec.g:1439:1: entryRuleSpecInit returns [EObject current=null] : iv_ruleSpecInit= ruleSpecInit EOF ;
    public final EObject entryRuleSpecInit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSpecInit = null;


        try {
            // InternalIec.g:1440:2: (iv_ruleSpecInit= ruleSpecInit EOF )
            // InternalIec.g:1441:2: iv_ruleSpecInit= ruleSpecInit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSpecInitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSpecInit=ruleSpecInit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSpecInit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSpecInit"


    // $ANTLR start "ruleSpecInit"
    // InternalIec.g:1448:1: ruleSpecInit returns [EObject current=null] : ( ( ( (lv_baseType_0_0= ruleElementaryType ) ) | ( (lv_baseType_1_0= ruleDerivedType ) ) ) (otherlv_2= ':=' ( ( (lv_constant_3_0= ruleConstant ) ) | ( (lv_constant_4_0= ruleEnumeratedValue ) ) | ( (lv_constant_5_0= ruleArrayInitialization ) ) ) )? ) ;
    public final EObject ruleSpecInit() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_baseType_0_0 = null;

        EObject lv_baseType_1_0 = null;

        EObject lv_constant_3_0 = null;

        EObject lv_constant_4_0 = null;

        EObject lv_constant_5_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:1451:28: ( ( ( ( (lv_baseType_0_0= ruleElementaryType ) ) | ( (lv_baseType_1_0= ruleDerivedType ) ) ) (otherlv_2= ':=' ( ( (lv_constant_3_0= ruleConstant ) ) | ( (lv_constant_4_0= ruleEnumeratedValue ) ) | ( (lv_constant_5_0= ruleArrayInitialization ) ) ) )? ) )
            // InternalIec.g:1452:1: ( ( ( (lv_baseType_0_0= ruleElementaryType ) ) | ( (lv_baseType_1_0= ruleDerivedType ) ) ) (otherlv_2= ':=' ( ( (lv_constant_3_0= ruleConstant ) ) | ( (lv_constant_4_0= ruleEnumeratedValue ) ) | ( (lv_constant_5_0= ruleArrayInitialization ) ) ) )? )
            {
            // InternalIec.g:1452:1: ( ( ( (lv_baseType_0_0= ruleElementaryType ) ) | ( (lv_baseType_1_0= ruleDerivedType ) ) ) (otherlv_2= ':=' ( ( (lv_constant_3_0= ruleConstant ) ) | ( (lv_constant_4_0= ruleEnumeratedValue ) ) | ( (lv_constant_5_0= ruleArrayInitialization ) ) ) )? )
            // InternalIec.g:1452:2: ( ( (lv_baseType_0_0= ruleElementaryType ) ) | ( (lv_baseType_1_0= ruleDerivedType ) ) ) (otherlv_2= ':=' ( ( (lv_constant_3_0= ruleConstant ) ) | ( (lv_constant_4_0= ruleEnumeratedValue ) ) | ( (lv_constant_5_0= ruleArrayInitialization ) ) ) )?
            {
            // InternalIec.g:1452:2: ( ( (lv_baseType_0_0= ruleElementaryType ) ) | ( (lv_baseType_1_0= ruleDerivedType ) ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( ((LA18_0>=30 && LA18_0<=52)) ) {
                alt18=1;
            }
            else if ( ((LA18_0>=RULE_LETTER && LA18_0<=RULE_ID)) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalIec.g:1452:3: ( (lv_baseType_0_0= ruleElementaryType ) )
                    {
                    // InternalIec.g:1452:3: ( (lv_baseType_0_0= ruleElementaryType ) )
                    // InternalIec.g:1453:1: (lv_baseType_0_0= ruleElementaryType )
                    {
                    // InternalIec.g:1453:1: (lv_baseType_0_0= ruleElementaryType )
                    // InternalIec.g:1454:3: lv_baseType_0_0= ruleElementaryType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSpecInitAccess().getBaseTypeElementaryTypeParserRuleCall_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_8);
                    lv_baseType_0_0=ruleElementaryType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSpecInitRule());
                      	        }
                             		set(
                             			current, 
                             			"baseType",
                              		lv_baseType_0_0, 
                              		"com.bichler.iec.Iec.ElementaryType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIec.g:1471:6: ( (lv_baseType_1_0= ruleDerivedType ) )
                    {
                    // InternalIec.g:1471:6: ( (lv_baseType_1_0= ruleDerivedType ) )
                    // InternalIec.g:1472:1: (lv_baseType_1_0= ruleDerivedType )
                    {
                    // InternalIec.g:1472:1: (lv_baseType_1_0= ruleDerivedType )
                    // InternalIec.g:1473:3: lv_baseType_1_0= ruleDerivedType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSpecInitAccess().getBaseTypeDerivedTypeParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_8);
                    lv_baseType_1_0=ruleDerivedType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSpecInitRule());
                      	        }
                             		set(
                             			current, 
                             			"baseType",
                              		lv_baseType_1_0, 
                              		"com.bichler.iec.Iec.DerivedType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalIec.g:1489:3: (otherlv_2= ':=' ( ( (lv_constant_3_0= ruleConstant ) ) | ( (lv_constant_4_0= ruleEnumeratedValue ) ) | ( (lv_constant_5_0= ruleArrayInitialization ) ) ) )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==66) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // InternalIec.g:1489:5: otherlv_2= ':=' ( ( (lv_constant_3_0= ruleConstant ) ) | ( (lv_constant_4_0= ruleEnumeratedValue ) ) | ( (lv_constant_5_0= ruleArrayInitialization ) ) )
                    {
                    otherlv_2=(Token)match(input,66,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getSpecInitAccess().getColonEqualsSignKeyword_1_0());
                          
                    }
                    // InternalIec.g:1493:1: ( ( (lv_constant_3_0= ruleConstant ) ) | ( (lv_constant_4_0= ruleEnumeratedValue ) ) | ( (lv_constant_5_0= ruleArrayInitialization ) ) )
                    int alt19=3;
                    switch ( input.LA(1) ) {
                    case RULE_INT:
                    case RULE_BINT:
                    case RULE_OINT:
                    case RULE_HINT:
                    case RULE_FIXED_POINT:
                    case RULE_SINGLE_BYTE_STRING:
                    case RULE_DOUBLE_BYTE_STRING:
                    case RULE_DIGIT:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 74:
                    case 75:
                    case 141:
                    case 142:
                    case 143:
                    case 144:
                    case 145:
                    case 146:
                    case 147:
                    case 148:
                    case 149:
                    case 150:
                    case 151:
                    case 152:
                    case 153:
                    case 154:
                    case 155:
                    case 156:
                        {
                        alt19=1;
                        }
                        break;
                    case RULE_LETTER:
                    case RULE_ID:
                        {
                        alt19=2;
                        }
                        break;
                    case 70:
                        {
                        alt19=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 19, 0, input);

                        throw nvae;
                    }

                    switch (alt19) {
                        case 1 :
                            // InternalIec.g:1493:2: ( (lv_constant_3_0= ruleConstant ) )
                            {
                            // InternalIec.g:1493:2: ( (lv_constant_3_0= ruleConstant ) )
                            // InternalIec.g:1494:1: (lv_constant_3_0= ruleConstant )
                            {
                            // InternalIec.g:1494:1: (lv_constant_3_0= ruleConstant )
                            // InternalIec.g:1495:3: lv_constant_3_0= ruleConstant
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getSpecInitAccess().getConstantConstantParserRuleCall_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_constant_3_0=ruleConstant();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getSpecInitRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"constant",
                                      		lv_constant_3_0, 
                                      		"com.bichler.iec.Iec.Constant");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalIec.g:1512:6: ( (lv_constant_4_0= ruleEnumeratedValue ) )
                            {
                            // InternalIec.g:1512:6: ( (lv_constant_4_0= ruleEnumeratedValue ) )
                            // InternalIec.g:1513:1: (lv_constant_4_0= ruleEnumeratedValue )
                            {
                            // InternalIec.g:1513:1: (lv_constant_4_0= ruleEnumeratedValue )
                            // InternalIec.g:1514:3: lv_constant_4_0= ruleEnumeratedValue
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getSpecInitAccess().getConstantEnumeratedValueParserRuleCall_1_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_constant_4_0=ruleEnumeratedValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getSpecInitRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"constant",
                                      		lv_constant_4_0, 
                                      		"com.bichler.iec.Iec.EnumeratedValue");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalIec.g:1531:6: ( (lv_constant_5_0= ruleArrayInitialization ) )
                            {
                            // InternalIec.g:1531:6: ( (lv_constant_5_0= ruleArrayInitialization ) )
                            // InternalIec.g:1532:1: (lv_constant_5_0= ruleArrayInitialization )
                            {
                            // InternalIec.g:1532:1: (lv_constant_5_0= ruleArrayInitialization )
                            // InternalIec.g:1533:3: lv_constant_5_0= ruleArrayInitialization
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getSpecInitAccess().getConstantArrayInitializationParserRuleCall_1_1_2_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_constant_5_0=ruleArrayInitialization();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getSpecInitRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"constant",
                                      		lv_constant_5_0, 
                                      		"com.bichler.iec.Iec.ArrayInitialization");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSpecInit"


    // $ANTLR start "entryRuleRangeDeclaration"
    // InternalIec.g:1557:1: entryRuleRangeDeclaration returns [EObject current=null] : iv_ruleRangeDeclaration= ruleRangeDeclaration EOF ;
    public final EObject entryRuleRangeDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRangeDeclaration = null;


        try {
            // InternalIec.g:1558:2: (iv_ruleRangeDeclaration= ruleRangeDeclaration EOF )
            // InternalIec.g:1559:2: iv_ruleRangeDeclaration= ruleRangeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRangeDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRangeDeclaration=ruleRangeDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRangeDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRangeDeclaration"


    // $ANTLR start "ruleRangeDeclaration"
    // InternalIec.g:1566:1: ruleRangeDeclaration returns [EObject current=null] : ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' ( (lv_baseType_2_0= ruleElementaryType ) ) (otherlv_3= '(' ( (lv_range_4_0= ruleSubRangeWithSign ) ) otherlv_5= ')' ) (otherlv_6= ':=' ( (lv_constant_7_0= ruleSignedInteger ) ) )? ) ;
    public final EObject ruleRangeDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_derivedType_0_0 = null;

        EObject lv_baseType_2_0 = null;

        AntlrDatatypeRuleToken lv_range_4_0 = null;

        AntlrDatatypeRuleToken lv_constant_7_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:1569:28: ( ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' ( (lv_baseType_2_0= ruleElementaryType ) ) (otherlv_3= '(' ( (lv_range_4_0= ruleSubRangeWithSign ) ) otherlv_5= ')' ) (otherlv_6= ':=' ( (lv_constant_7_0= ruleSignedInteger ) ) )? ) )
            // InternalIec.g:1570:1: ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' ( (lv_baseType_2_0= ruleElementaryType ) ) (otherlv_3= '(' ( (lv_range_4_0= ruleSubRangeWithSign ) ) otherlv_5= ')' ) (otherlv_6= ':=' ( (lv_constant_7_0= ruleSignedInteger ) ) )? )
            {
            // InternalIec.g:1570:1: ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' ( (lv_baseType_2_0= ruleElementaryType ) ) (otherlv_3= '(' ( (lv_range_4_0= ruleSubRangeWithSign ) ) otherlv_5= ')' ) (otherlv_6= ':=' ( (lv_constant_7_0= ruleSignedInteger ) ) )? )
            // InternalIec.g:1570:2: ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' ( (lv_baseType_2_0= ruleElementaryType ) ) (otherlv_3= '(' ( (lv_range_4_0= ruleSubRangeWithSign ) ) otherlv_5= ')' ) (otherlv_6= ':=' ( (lv_constant_7_0= ruleSignedInteger ) ) )?
            {
            // InternalIec.g:1570:2: ( (lv_derivedType_0_0= ruleDerivedType ) )
            // InternalIec.g:1571:1: (lv_derivedType_0_0= ruleDerivedType )
            {
            // InternalIec.g:1571:1: (lv_derivedType_0_0= ruleDerivedType )
            // InternalIec.g:1572:3: lv_derivedType_0_0= ruleDerivedType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRangeDeclarationAccess().getDerivedTypeDerivedTypeParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_5);
            lv_derivedType_0_0=ruleDerivedType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRangeDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"derivedType",
                      		lv_derivedType_0_0, 
                      		"com.bichler.iec.Iec.DerivedType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,64,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getRangeDeclarationAccess().getColonKeyword_1());
                  
            }
            // InternalIec.g:1592:1: ( (lv_baseType_2_0= ruleElementaryType ) )
            // InternalIec.g:1593:1: (lv_baseType_2_0= ruleElementaryType )
            {
            // InternalIec.g:1593:1: (lv_baseType_2_0= ruleElementaryType )
            // InternalIec.g:1594:3: lv_baseType_2_0= ruleElementaryType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRangeDeclarationAccess().getBaseTypeElementaryTypeParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_11);
            lv_baseType_2_0=ruleElementaryType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRangeDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"baseType",
                      		lv_baseType_2_0, 
                      		"com.bichler.iec.Iec.ElementaryType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:1610:2: (otherlv_3= '(' ( (lv_range_4_0= ruleSubRangeWithSign ) ) otherlv_5= ')' )
            // InternalIec.g:1610:4: otherlv_3= '(' ( (lv_range_4_0= ruleSubRangeWithSign ) ) otherlv_5= ')'
            {
            otherlv_3=(Token)match(input,67,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getRangeDeclarationAccess().getLeftParenthesisKeyword_3_0());
                  
            }
            // InternalIec.g:1614:1: ( (lv_range_4_0= ruleSubRangeWithSign ) )
            // InternalIec.g:1615:1: (lv_range_4_0= ruleSubRangeWithSign )
            {
            // InternalIec.g:1615:1: (lv_range_4_0= ruleSubRangeWithSign )
            // InternalIec.g:1616:3: lv_range_4_0= ruleSubRangeWithSign
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRangeDeclarationAccess().getRangeSubRangeWithSignParserRuleCall_3_1_0()); 
              	    
            }
            pushFollow(FOLLOW_13);
            lv_range_4_0=ruleSubRangeWithSign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRangeDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"range",
                      		lv_range_4_0, 
                      		"com.bichler.iec.Iec.SubRangeWithSign");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,68,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getRangeDeclarationAccess().getRightParenthesisKeyword_3_2());
                  
            }

            }

            // InternalIec.g:1636:2: (otherlv_6= ':=' ( (lv_constant_7_0= ruleSignedInteger ) ) )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==66) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // InternalIec.g:1636:4: otherlv_6= ':=' ( (lv_constant_7_0= ruleSignedInteger ) )
                    {
                    otherlv_6=(Token)match(input,66,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getRangeDeclarationAccess().getColonEqualsSignKeyword_4_0());
                          
                    }
                    // InternalIec.g:1640:1: ( (lv_constant_7_0= ruleSignedInteger ) )
                    // InternalIec.g:1641:1: (lv_constant_7_0= ruleSignedInteger )
                    {
                    // InternalIec.g:1641:1: (lv_constant_7_0= ruleSignedInteger )
                    // InternalIec.g:1642:3: lv_constant_7_0= ruleSignedInteger
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getRangeDeclarationAccess().getConstantSignedIntegerParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_7_0=ruleSignedInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getRangeDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"constant",
                              		lv_constant_7_0, 
                              		"com.bichler.iec.Iec.SignedInteger");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRangeDeclaration"


    // $ANTLR start "entryRuleEnumDeclaration"
    // InternalIec.g:1666:1: entryRuleEnumDeclaration returns [EObject current=null] : iv_ruleEnumDeclaration= ruleEnumDeclaration EOF ;
    public final EObject entryRuleEnumDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumDeclaration = null;


        try {
            // InternalIec.g:1667:2: (iv_ruleEnumDeclaration= ruleEnumDeclaration EOF )
            // InternalIec.g:1668:2: iv_ruleEnumDeclaration= ruleEnumDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEnumDeclaration=ruleEnumDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumDeclaration"


    // $ANTLR start "ruleEnumDeclaration"
    // InternalIec.g:1675:1: ruleEnumDeclaration returns [EObject current=null] : ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' otherlv_2= '(' ( (lv_enumeration_3_0= ruleEnumeration ) ) otherlv_4= ')' (otherlv_5= ':=' ( (lv_constant_6_0= ruleEnumeratedValue ) ) )? ) ;
    public final EObject ruleEnumDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_derivedType_0_0 = null;

        EObject lv_enumeration_3_0 = null;

        EObject lv_constant_6_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:1678:28: ( ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' otherlv_2= '(' ( (lv_enumeration_3_0= ruleEnumeration ) ) otherlv_4= ')' (otherlv_5= ':=' ( (lv_constant_6_0= ruleEnumeratedValue ) ) )? ) )
            // InternalIec.g:1679:1: ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' otherlv_2= '(' ( (lv_enumeration_3_0= ruleEnumeration ) ) otherlv_4= ')' (otherlv_5= ':=' ( (lv_constant_6_0= ruleEnumeratedValue ) ) )? )
            {
            // InternalIec.g:1679:1: ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' otherlv_2= '(' ( (lv_enumeration_3_0= ruleEnumeration ) ) otherlv_4= ')' (otherlv_5= ':=' ( (lv_constant_6_0= ruleEnumeratedValue ) ) )? )
            // InternalIec.g:1679:2: ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' otherlv_2= '(' ( (lv_enumeration_3_0= ruleEnumeration ) ) otherlv_4= ')' (otherlv_5= ':=' ( (lv_constant_6_0= ruleEnumeratedValue ) ) )?
            {
            // InternalIec.g:1679:2: ( (lv_derivedType_0_0= ruleDerivedType ) )
            // InternalIec.g:1680:1: (lv_derivedType_0_0= ruleDerivedType )
            {
            // InternalIec.g:1680:1: (lv_derivedType_0_0= ruleDerivedType )
            // InternalIec.g:1681:3: lv_derivedType_0_0= ruleDerivedType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getEnumDeclarationAccess().getDerivedTypeDerivedTypeParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_5);
            lv_derivedType_0_0=ruleDerivedType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getEnumDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"derivedType",
                      		lv_derivedType_0_0, 
                      		"com.bichler.iec.Iec.DerivedType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,64,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getEnumDeclarationAccess().getColonKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,67,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getEnumDeclarationAccess().getLeftParenthesisKeyword_2());
                  
            }
            // InternalIec.g:1705:1: ( (lv_enumeration_3_0= ruleEnumeration ) )
            // InternalIec.g:1706:1: (lv_enumeration_3_0= ruleEnumeration )
            {
            // InternalIec.g:1706:1: (lv_enumeration_3_0= ruleEnumeration )
            // InternalIec.g:1707:3: lv_enumeration_3_0= ruleEnumeration
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getEnumDeclarationAccess().getEnumerationEnumerationParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_13);
            lv_enumeration_3_0=ruleEnumeration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getEnumDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"enumeration",
                      		lv_enumeration_3_0, 
                      		"com.bichler.iec.Iec.Enumeration");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,68,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getEnumDeclarationAccess().getRightParenthesisKeyword_4());
                  
            }
            // InternalIec.g:1727:1: (otherlv_5= ':=' ( (lv_constant_6_0= ruleEnumeratedValue ) ) )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==66) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // InternalIec.g:1727:3: otherlv_5= ':=' ( (lv_constant_6_0= ruleEnumeratedValue ) )
                    {
                    otherlv_5=(Token)match(input,66,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getEnumDeclarationAccess().getColonEqualsSignKeyword_5_0());
                          
                    }
                    // InternalIec.g:1731:1: ( (lv_constant_6_0= ruleEnumeratedValue ) )
                    // InternalIec.g:1732:1: (lv_constant_6_0= ruleEnumeratedValue )
                    {
                    // InternalIec.g:1732:1: (lv_constant_6_0= ruleEnumeratedValue )
                    // InternalIec.g:1733:3: lv_constant_6_0= ruleEnumeratedValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getEnumDeclarationAccess().getConstantEnumeratedValueParserRuleCall_5_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_6_0=ruleEnumeratedValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEnumDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"constant",
                              		lv_constant_6_0, 
                              		"com.bichler.iec.Iec.EnumeratedValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumDeclaration"


    // $ANTLR start "entryRuleArrayDeclaration"
    // InternalIec.g:1757:1: entryRuleArrayDeclaration returns [EObject current=null] : iv_ruleArrayDeclaration= ruleArrayDeclaration EOF ;
    public final EObject entryRuleArrayDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayDeclaration = null;


        try {
            // InternalIec.g:1758:2: (iv_ruleArrayDeclaration= ruleArrayDeclaration EOF )
            // InternalIec.g:1759:2: iv_ruleArrayDeclaration= ruleArrayDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayDeclaration=ruleArrayDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayDeclaration"


    // $ANTLR start "ruleArrayDeclaration"
    // InternalIec.g:1766:1: ruleArrayDeclaration returns [EObject current=null] : ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' otherlv_2= 'ARRAY' otherlv_3= '[' ( (lv_ranges_4_0= ruleSubRangeWithSign ) ) (otherlv_5= ',' ( (lv_ranges_6_0= ruleSubRangeWithSign ) ) )* otherlv_7= ']' otherlv_8= 'OF' ( (lv_baseType_9_0= ruleNonGenericType ) ) (otherlv_10= ':=' ( (lv_constant_11_0= ruleArrayInitialization ) ) )? ) ;
    public final EObject ruleArrayDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_derivedType_0_0 = null;

        AntlrDatatypeRuleToken lv_ranges_4_0 = null;

        AntlrDatatypeRuleToken lv_ranges_6_0 = null;

        EObject lv_baseType_9_0 = null;

        EObject lv_constant_11_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:1769:28: ( ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' otherlv_2= 'ARRAY' otherlv_3= '[' ( (lv_ranges_4_0= ruleSubRangeWithSign ) ) (otherlv_5= ',' ( (lv_ranges_6_0= ruleSubRangeWithSign ) ) )* otherlv_7= ']' otherlv_8= 'OF' ( (lv_baseType_9_0= ruleNonGenericType ) ) (otherlv_10= ':=' ( (lv_constant_11_0= ruleArrayInitialization ) ) )? ) )
            // InternalIec.g:1770:1: ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' otherlv_2= 'ARRAY' otherlv_3= '[' ( (lv_ranges_4_0= ruleSubRangeWithSign ) ) (otherlv_5= ',' ( (lv_ranges_6_0= ruleSubRangeWithSign ) ) )* otherlv_7= ']' otherlv_8= 'OF' ( (lv_baseType_9_0= ruleNonGenericType ) ) (otherlv_10= ':=' ( (lv_constant_11_0= ruleArrayInitialization ) ) )? )
            {
            // InternalIec.g:1770:1: ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' otherlv_2= 'ARRAY' otherlv_3= '[' ( (lv_ranges_4_0= ruleSubRangeWithSign ) ) (otherlv_5= ',' ( (lv_ranges_6_0= ruleSubRangeWithSign ) ) )* otherlv_7= ']' otherlv_8= 'OF' ( (lv_baseType_9_0= ruleNonGenericType ) ) (otherlv_10= ':=' ( (lv_constant_11_0= ruleArrayInitialization ) ) )? )
            // InternalIec.g:1770:2: ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' otherlv_2= 'ARRAY' otherlv_3= '[' ( (lv_ranges_4_0= ruleSubRangeWithSign ) ) (otherlv_5= ',' ( (lv_ranges_6_0= ruleSubRangeWithSign ) ) )* otherlv_7= ']' otherlv_8= 'OF' ( (lv_baseType_9_0= ruleNonGenericType ) ) (otherlv_10= ':=' ( (lv_constant_11_0= ruleArrayInitialization ) ) )?
            {
            // InternalIec.g:1770:2: ( (lv_derivedType_0_0= ruleDerivedType ) )
            // InternalIec.g:1771:1: (lv_derivedType_0_0= ruleDerivedType )
            {
            // InternalIec.g:1771:1: (lv_derivedType_0_0= ruleDerivedType )
            // InternalIec.g:1772:3: lv_derivedType_0_0= ruleDerivedType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArrayDeclarationAccess().getDerivedTypeDerivedTypeParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_5);
            lv_derivedType_0_0=ruleDerivedType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArrayDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"derivedType",
                      		lv_derivedType_0_0, 
                      		"com.bichler.iec.Iec.DerivedType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,64,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getArrayDeclarationAccess().getColonKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,69,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getArrayDeclarationAccess().getARRAYKeyword_2());
                  
            }
            otherlv_3=(Token)match(input,70,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getArrayDeclarationAccess().getLeftSquareBracketKeyword_3());
                  
            }
            // InternalIec.g:1800:1: ( (lv_ranges_4_0= ruleSubRangeWithSign ) )
            // InternalIec.g:1801:1: (lv_ranges_4_0= ruleSubRangeWithSign )
            {
            // InternalIec.g:1801:1: (lv_ranges_4_0= ruleSubRangeWithSign )
            // InternalIec.g:1802:3: lv_ranges_4_0= ruleSubRangeWithSign
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArrayDeclarationAccess().getRangesSubRangeWithSignParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_17);
            lv_ranges_4_0=ruleSubRangeWithSign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArrayDeclarationRule());
              	        }
                     		add(
                     			current, 
                     			"ranges",
                      		lv_ranges_4_0, 
                      		"com.bichler.iec.Iec.SubRangeWithSign");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:1818:2: (otherlv_5= ',' ( (lv_ranges_6_0= ruleSubRangeWithSign ) ) )*
            loop23:
            do {
                int alt23=2;
                int LA23_0 = input.LA(1);

                if ( (LA23_0==71) ) {
                    alt23=1;
                }


                switch (alt23) {
            	case 1 :
            	    // InternalIec.g:1818:4: otherlv_5= ',' ( (lv_ranges_6_0= ruleSubRangeWithSign ) )
            	    {
            	    otherlv_5=(Token)match(input,71,FOLLOW_12); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_5, grammarAccess.getArrayDeclarationAccess().getCommaKeyword_5_0());
            	          
            	    }
            	    // InternalIec.g:1822:1: ( (lv_ranges_6_0= ruleSubRangeWithSign ) )
            	    // InternalIec.g:1823:1: (lv_ranges_6_0= ruleSubRangeWithSign )
            	    {
            	    // InternalIec.g:1823:1: (lv_ranges_6_0= ruleSubRangeWithSign )
            	    // InternalIec.g:1824:3: lv_ranges_6_0= ruleSubRangeWithSign
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArrayDeclarationAccess().getRangesSubRangeWithSignParserRuleCall_5_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_17);
            	    lv_ranges_6_0=ruleSubRangeWithSign();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArrayDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"ranges",
            	              		lv_ranges_6_0, 
            	              		"com.bichler.iec.Iec.SubRangeWithSign");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);

            otherlv_7=(Token)match(input,72,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getArrayDeclarationAccess().getRightSquareBracketKeyword_6());
                  
            }
            otherlv_8=(Token)match(input,73,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getArrayDeclarationAccess().getOFKeyword_7());
                  
            }
            // InternalIec.g:1848:1: ( (lv_baseType_9_0= ruleNonGenericType ) )
            // InternalIec.g:1849:1: (lv_baseType_9_0= ruleNonGenericType )
            {
            // InternalIec.g:1849:1: (lv_baseType_9_0= ruleNonGenericType )
            // InternalIec.g:1850:3: lv_baseType_9_0= ruleNonGenericType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArrayDeclarationAccess().getBaseTypeNonGenericTypeParserRuleCall_8_0()); 
              	    
            }
            pushFollow(FOLLOW_8);
            lv_baseType_9_0=ruleNonGenericType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArrayDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"baseType",
                      		lv_baseType_9_0, 
                      		"com.bichler.iec.Iec.NonGenericType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:1866:2: (otherlv_10= ':=' ( (lv_constant_11_0= ruleArrayInitialization ) ) )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==66) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalIec.g:1866:4: otherlv_10= ':=' ( (lv_constant_11_0= ruleArrayInitialization ) )
                    {
                    otherlv_10=(Token)match(input,66,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getArrayDeclarationAccess().getColonEqualsSignKeyword_9_0());
                          
                    }
                    // InternalIec.g:1870:1: ( (lv_constant_11_0= ruleArrayInitialization ) )
                    // InternalIec.g:1871:1: (lv_constant_11_0= ruleArrayInitialization )
                    {
                    // InternalIec.g:1871:1: (lv_constant_11_0= ruleArrayInitialization )
                    // InternalIec.g:1872:3: lv_constant_11_0= ruleArrayInitialization
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrayDeclarationAccess().getConstantArrayInitializationParserRuleCall_9_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_11_0=ruleArrayInitialization();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrayDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"constant",
                              		lv_constant_11_0, 
                              		"com.bichler.iec.Iec.ArrayInitialization");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayDeclaration"


    // $ANTLR start "entryRuleSubRangeWithSign"
    // InternalIec.g:1896:1: entryRuleSubRangeWithSign returns [String current=null] : iv_ruleSubRangeWithSign= ruleSubRangeWithSign EOF ;
    public final String entryRuleSubRangeWithSign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSubRangeWithSign = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        	
        try {
            // InternalIec.g:1900:2: (iv_ruleSubRangeWithSign= ruleSubRangeWithSign EOF )
            // InternalIec.g:1901:2: iv_ruleSubRangeWithSign= ruleSubRangeWithSign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSubRangeWithSignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSubRangeWithSign=ruleSubRangeWithSign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSubRangeWithSign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleSubRangeWithSign"


    // $ANTLR start "ruleSubRangeWithSign"
    // InternalIec.g:1911:1: ruleSubRangeWithSign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '+' | kw= '-' )? this_SUB_RANGE_2= RULE_SUB_RANGE ) ;
    public final AntlrDatatypeRuleToken ruleSubRangeWithSign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_SUB_RANGE_2=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            // InternalIec.g:1915:28: ( ( (kw= '+' | kw= '-' )? this_SUB_RANGE_2= RULE_SUB_RANGE ) )
            // InternalIec.g:1916:1: ( (kw= '+' | kw= '-' )? this_SUB_RANGE_2= RULE_SUB_RANGE )
            {
            // InternalIec.g:1916:1: ( (kw= '+' | kw= '-' )? this_SUB_RANGE_2= RULE_SUB_RANGE )
            // InternalIec.g:1916:2: (kw= '+' | kw= '-' )? this_SUB_RANGE_2= RULE_SUB_RANGE
            {
            // InternalIec.g:1916:2: (kw= '+' | kw= '-' )?
            int alt25=3;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==74) ) {
                alt25=1;
            }
            else if ( (LA25_0==75) ) {
                alt25=2;
            }
            switch (alt25) {
                case 1 :
                    // InternalIec.g:1917:2: kw= '+'
                    {
                    kw=(Token)match(input,74,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getSubRangeWithSignAccess().getPlusSignKeyword_0_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:1924:2: kw= '-'
                    {
                    kw=(Token)match(input,75,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getSubRangeWithSignAccess().getHyphenMinusKeyword_0_1()); 
                          
                    }

                    }
                    break;

            }

            this_SUB_RANGE_2=(Token)match(input,RULE_SUB_RANGE,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_SUB_RANGE_2);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_SUB_RANGE_2, grammarAccess.getSubRangeWithSignAccess().getSUB_RANGETerminalRuleCall_1()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleSubRangeWithSign"


    // $ANTLR start "entryRuleEnumeration"
    // InternalIec.g:1947:1: entryRuleEnumeration returns [EObject current=null] : iv_ruleEnumeration= ruleEnumeration EOF ;
    public final EObject entryRuleEnumeration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumeration = null;


        try {
            // InternalIec.g:1948:2: (iv_ruleEnumeration= ruleEnumeration EOF )
            // InternalIec.g:1949:2: iv_ruleEnumeration= ruleEnumeration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumerationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEnumeration=ruleEnumeration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumeration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumeration"


    // $ANTLR start "ruleEnumeration"
    // InternalIec.g:1956:1: ruleEnumeration returns [EObject current=null] : ( ( (lv_values_0_0= ruleEnumeratedValue ) ) (otherlv_1= ',' ( (lv_values_2_0= ruleEnumeratedValue ) ) )* ) ;
    public final EObject ruleEnumeration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_values_0_0 = null;

        EObject lv_values_2_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:1959:28: ( ( ( (lv_values_0_0= ruleEnumeratedValue ) ) (otherlv_1= ',' ( (lv_values_2_0= ruleEnumeratedValue ) ) )* ) )
            // InternalIec.g:1960:1: ( ( (lv_values_0_0= ruleEnumeratedValue ) ) (otherlv_1= ',' ( (lv_values_2_0= ruleEnumeratedValue ) ) )* )
            {
            // InternalIec.g:1960:1: ( ( (lv_values_0_0= ruleEnumeratedValue ) ) (otherlv_1= ',' ( (lv_values_2_0= ruleEnumeratedValue ) ) )* )
            // InternalIec.g:1960:2: ( (lv_values_0_0= ruleEnumeratedValue ) ) (otherlv_1= ',' ( (lv_values_2_0= ruleEnumeratedValue ) ) )*
            {
            // InternalIec.g:1960:2: ( (lv_values_0_0= ruleEnumeratedValue ) )
            // InternalIec.g:1961:1: (lv_values_0_0= ruleEnumeratedValue )
            {
            // InternalIec.g:1961:1: (lv_values_0_0= ruleEnumeratedValue )
            // InternalIec.g:1962:3: lv_values_0_0= ruleEnumeratedValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getEnumerationAccess().getValuesEnumeratedValueParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_20);
            lv_values_0_0=ruleEnumeratedValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getEnumerationRule());
              	        }
                     		add(
                     			current, 
                     			"values",
                      		lv_values_0_0, 
                      		"com.bichler.iec.Iec.EnumeratedValue");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:1978:2: (otherlv_1= ',' ( (lv_values_2_0= ruleEnumeratedValue ) ) )*
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( (LA26_0==71) ) {
                    alt26=1;
                }


                switch (alt26) {
            	case 1 :
            	    // InternalIec.g:1978:4: otherlv_1= ',' ( (lv_values_2_0= ruleEnumeratedValue ) )
            	    {
            	    otherlv_1=(Token)match(input,71,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getEnumerationAccess().getCommaKeyword_1_0());
            	          
            	    }
            	    // InternalIec.g:1982:1: ( (lv_values_2_0= ruleEnumeratedValue ) )
            	    // InternalIec.g:1983:1: (lv_values_2_0= ruleEnumeratedValue )
            	    {
            	    // InternalIec.g:1983:1: (lv_values_2_0= ruleEnumeratedValue )
            	    // InternalIec.g:1984:3: lv_values_2_0= ruleEnumeratedValue
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEnumerationAccess().getValuesEnumeratedValueParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_20);
            	    lv_values_2_0=ruleEnumeratedValue();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEnumerationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"values",
            	              		lv_values_2_0, 
            	              		"com.bichler.iec.Iec.EnumeratedValue");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumeration"


    // $ANTLR start "entryRuleEnumeratedValue"
    // InternalIec.g:2008:1: entryRuleEnumeratedValue returns [EObject current=null] : iv_ruleEnumeratedValue= ruleEnumeratedValue EOF ;
    public final EObject entryRuleEnumeratedValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumeratedValue = null;


        try {
            // InternalIec.g:2009:2: (iv_ruleEnumeratedValue= ruleEnumeratedValue EOF )
            // InternalIec.g:2010:2: iv_ruleEnumeratedValue= ruleEnumeratedValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumeratedValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEnumeratedValue=ruleEnumeratedValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumeratedValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumeratedValue"


    // $ANTLR start "ruleEnumeratedValue"
    // InternalIec.g:2017:1: ruleEnumeratedValue returns [EObject current=null] : ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= '#' ( (lv_name_2_0= ruleIdentifier ) ) ) ;
    public final EObject ruleEnumeratedValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_derivedType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:2020:28: ( ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= '#' ( (lv_name_2_0= ruleIdentifier ) ) ) )
            // InternalIec.g:2021:1: ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= '#' ( (lv_name_2_0= ruleIdentifier ) ) )
            {
            // InternalIec.g:2021:1: ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= '#' ( (lv_name_2_0= ruleIdentifier ) ) )
            // InternalIec.g:2021:2: ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= '#' ( (lv_name_2_0= ruleIdentifier ) )
            {
            // InternalIec.g:2021:2: ( (lv_derivedType_0_0= ruleDerivedType ) )
            // InternalIec.g:2022:1: (lv_derivedType_0_0= ruleDerivedType )
            {
            // InternalIec.g:2022:1: (lv_derivedType_0_0= ruleDerivedType )
            // InternalIec.g:2023:3: lv_derivedType_0_0= ruleDerivedType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getEnumeratedValueAccess().getDerivedTypeDerivedTypeParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_21);
            lv_derivedType_0_0=ruleDerivedType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getEnumeratedValueRule());
              	        }
                     		set(
                     			current, 
                     			"derivedType",
                      		lv_derivedType_0_0, 
                      		"com.bichler.iec.Iec.DerivedType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,76,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getEnumeratedValueAccess().getNumberSignKeyword_1());
                  
            }
            // InternalIec.g:2043:1: ( (lv_name_2_0= ruleIdentifier ) )
            // InternalIec.g:2044:1: (lv_name_2_0= ruleIdentifier )
            {
            // InternalIec.g:2044:1: (lv_name_2_0= ruleIdentifier )
            // InternalIec.g:2045:3: lv_name_2_0= ruleIdentifier
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getEnumeratedValueAccess().getNameIdentifierParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_name_2_0=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getEnumeratedValueRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"com.bichler.iec.Iec.Identifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumeratedValue"


    // $ANTLR start "entryRuleArrayInitialization"
    // InternalIec.g:2069:1: entryRuleArrayInitialization returns [EObject current=null] : iv_ruleArrayInitialization= ruleArrayInitialization EOF ;
    public final EObject entryRuleArrayInitialization() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayInitialization = null;


        try {
            // InternalIec.g:2070:2: (iv_ruleArrayInitialization= ruleArrayInitialization EOF )
            // InternalIec.g:2071:2: iv_ruleArrayInitialization= ruleArrayInitialization EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayInitializationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayInitialization=ruleArrayInitialization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayInitialization; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayInitialization"


    // $ANTLR start "ruleArrayInitialization"
    // InternalIec.g:2078:1: ruleArrayInitialization returns [EObject current=null] : (otherlv_0= '[' ( (lv_initialElements_1_0= ruleArrayInitialElements ) ) (otherlv_2= ',' ( (lv_initialElements_3_0= ruleArrayInitialElements ) ) )* otherlv_4= ']' ) ;
    public final EObject ruleArrayInitialization() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_initialElements_1_0 = null;

        EObject lv_initialElements_3_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:2081:28: ( (otherlv_0= '[' ( (lv_initialElements_1_0= ruleArrayInitialElements ) ) (otherlv_2= ',' ( (lv_initialElements_3_0= ruleArrayInitialElements ) ) )* otherlv_4= ']' ) )
            // InternalIec.g:2082:1: (otherlv_0= '[' ( (lv_initialElements_1_0= ruleArrayInitialElements ) ) (otherlv_2= ',' ( (lv_initialElements_3_0= ruleArrayInitialElements ) ) )* otherlv_4= ']' )
            {
            // InternalIec.g:2082:1: (otherlv_0= '[' ( (lv_initialElements_1_0= ruleArrayInitialElements ) ) (otherlv_2= ',' ( (lv_initialElements_3_0= ruleArrayInitialElements ) ) )* otherlv_4= ']' )
            // InternalIec.g:2082:3: otherlv_0= '[' ( (lv_initialElements_1_0= ruleArrayInitialElements ) ) (otherlv_2= ',' ( (lv_initialElements_3_0= ruleArrayInitialElements ) ) )* otherlv_4= ']'
            {
            otherlv_0=(Token)match(input,70,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getArrayInitializationAccess().getLeftSquareBracketKeyword_0());
                  
            }
            // InternalIec.g:2086:1: ( (lv_initialElements_1_0= ruleArrayInitialElements ) )
            // InternalIec.g:2087:1: (lv_initialElements_1_0= ruleArrayInitialElements )
            {
            // InternalIec.g:2087:1: (lv_initialElements_1_0= ruleArrayInitialElements )
            // InternalIec.g:2088:3: lv_initialElements_1_0= ruleArrayInitialElements
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArrayInitializationAccess().getInitialElementsArrayInitialElementsParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_17);
            lv_initialElements_1_0=ruleArrayInitialElements();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArrayInitializationRule());
              	        }
                     		add(
                     			current, 
                     			"initialElements",
                      		lv_initialElements_1_0, 
                      		"com.bichler.iec.Iec.ArrayInitialElements");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:2104:2: (otherlv_2= ',' ( (lv_initialElements_3_0= ruleArrayInitialElements ) ) )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==71) ) {
                    alt27=1;
                }


                switch (alt27) {
            	case 1 :
            	    // InternalIec.g:2104:4: otherlv_2= ',' ( (lv_initialElements_3_0= ruleArrayInitialElements ) )
            	    {
            	    otherlv_2=(Token)match(input,71,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getArrayInitializationAccess().getCommaKeyword_2_0());
            	          
            	    }
            	    // InternalIec.g:2108:1: ( (lv_initialElements_3_0= ruleArrayInitialElements ) )
            	    // InternalIec.g:2109:1: (lv_initialElements_3_0= ruleArrayInitialElements )
            	    {
            	    // InternalIec.g:2109:1: (lv_initialElements_3_0= ruleArrayInitialElements )
            	    // InternalIec.g:2110:3: lv_initialElements_3_0= ruleArrayInitialElements
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArrayInitializationAccess().getInitialElementsArrayInitialElementsParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_17);
            	    lv_initialElements_3_0=ruleArrayInitialElements();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArrayInitializationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"initialElements",
            	              		lv_initialElements_3_0, 
            	              		"com.bichler.iec.Iec.ArrayInitialElements");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);

            otherlv_4=(Token)match(input,72,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getArrayInitializationAccess().getRightSquareBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayInitialization"


    // $ANTLR start "entryRuleArrayInitialElements"
    // InternalIec.g:2138:1: entryRuleArrayInitialElements returns [EObject current=null] : iv_ruleArrayInitialElements= ruleArrayInitialElements EOF ;
    public final EObject entryRuleArrayInitialElements() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayInitialElements = null;


        try {
            // InternalIec.g:2139:2: (iv_ruleArrayInitialElements= ruleArrayInitialElements EOF )
            // InternalIec.g:2140:2: iv_ruleArrayInitialElements= ruleArrayInitialElements EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayInitialElementsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayInitialElements=ruleArrayInitialElements();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayInitialElements; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayInitialElements"


    // $ANTLR start "ruleArrayInitialElements"
    // InternalIec.g:2147:1: ruleArrayInitialElements returns [EObject current=null] : ( ( (lv_initialElement_0_0= ruleInitialElement ) ) | ( ( (lv_index_1_0= ruleInteger ) ) otherlv_2= '(' ( (lv_initialElement_3_0= ruleInitialElement ) ) otherlv_4= ')' ) ) ;
    public final EObject ruleArrayInitialElements() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_initialElement_0_0 = null;

        AntlrDatatypeRuleToken lv_index_1_0 = null;

        EObject lv_initialElement_3_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:2150:28: ( ( ( (lv_initialElement_0_0= ruleInitialElement ) ) | ( ( (lv_index_1_0= ruleInteger ) ) otherlv_2= '(' ( (lv_initialElement_3_0= ruleInitialElement ) ) otherlv_4= ')' ) ) )
            // InternalIec.g:2151:1: ( ( (lv_initialElement_0_0= ruleInitialElement ) ) | ( ( (lv_index_1_0= ruleInteger ) ) otherlv_2= '(' ( (lv_initialElement_3_0= ruleInitialElement ) ) otherlv_4= ')' ) )
            {
            // InternalIec.g:2151:1: ( ( (lv_initialElement_0_0= ruleInitialElement ) ) | ( ( (lv_index_1_0= ruleInteger ) ) otherlv_2= '(' ( (lv_initialElement_3_0= ruleInitialElement ) ) otherlv_4= ')' ) )
            int alt28=2;
            switch ( input.LA(1) ) {
            case RULE_BINT:
            case RULE_OINT:
            case RULE_HINT:
            case RULE_FIXED_POINT:
            case RULE_SINGLE_BYTE_STRING:
            case RULE_DOUBLE_BYTE_STRING:
            case RULE_LETTER:
            case RULE_ID:
            case 33:
            case 34:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 67:
            case 70:
            case 74:
            case 75:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
                {
                alt28=1;
                }
                break;
            case RULE_DIGIT:
                {
                int LA28_2 = input.LA(2);

                if ( (LA28_2==EOF||(LA28_2>=71 && LA28_2<=72)) ) {
                    alt28=1;
                }
                else if ( (LA28_2==67) ) {
                    alt28=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 28, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
                {
                int LA28_3 = input.LA(2);

                if ( (LA28_3==EOF||(LA28_3>=71 && LA28_3<=72)) ) {
                    alt28=1;
                }
                else if ( (LA28_3==67) ) {
                    alt28=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 28, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }

            switch (alt28) {
                case 1 :
                    // InternalIec.g:2151:2: ( (lv_initialElement_0_0= ruleInitialElement ) )
                    {
                    // InternalIec.g:2151:2: ( (lv_initialElement_0_0= ruleInitialElement ) )
                    // InternalIec.g:2152:1: (lv_initialElement_0_0= ruleInitialElement )
                    {
                    // InternalIec.g:2152:1: (lv_initialElement_0_0= ruleInitialElement )
                    // InternalIec.g:2153:3: lv_initialElement_0_0= ruleInitialElement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrayInitialElementsAccess().getInitialElementInitialElementParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_initialElement_0_0=ruleInitialElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrayInitialElementsRule());
                      	        }
                             		set(
                             			current, 
                             			"initialElement",
                              		lv_initialElement_0_0, 
                              		"com.bichler.iec.Iec.InitialElement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIec.g:2170:6: ( ( (lv_index_1_0= ruleInteger ) ) otherlv_2= '(' ( (lv_initialElement_3_0= ruleInitialElement ) ) otherlv_4= ')' )
                    {
                    // InternalIec.g:2170:6: ( ( (lv_index_1_0= ruleInteger ) ) otherlv_2= '(' ( (lv_initialElement_3_0= ruleInitialElement ) ) otherlv_4= ')' )
                    // InternalIec.g:2170:7: ( (lv_index_1_0= ruleInteger ) ) otherlv_2= '(' ( (lv_initialElement_3_0= ruleInitialElement ) ) otherlv_4= ')'
                    {
                    // InternalIec.g:2170:7: ( (lv_index_1_0= ruleInteger ) )
                    // InternalIec.g:2171:1: (lv_index_1_0= ruleInteger )
                    {
                    // InternalIec.g:2171:1: (lv_index_1_0= ruleInteger )
                    // InternalIec.g:2172:3: lv_index_1_0= ruleInteger
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrayInitialElementsAccess().getIndexIntegerParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_11);
                    lv_index_1_0=ruleInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrayInitialElementsRule());
                      	        }
                             		set(
                             			current, 
                             			"index",
                              		lv_index_1_0, 
                              		"com.bichler.iec.Iec.Integer");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,67,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getArrayInitialElementsAccess().getLeftParenthesisKeyword_1_1());
                          
                    }
                    // InternalIec.g:2192:1: ( (lv_initialElement_3_0= ruleInitialElement ) )
                    // InternalIec.g:2193:1: (lv_initialElement_3_0= ruleInitialElement )
                    {
                    // InternalIec.g:2193:1: (lv_initialElement_3_0= ruleInitialElement )
                    // InternalIec.g:2194:3: lv_initialElement_3_0= ruleInitialElement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrayInitialElementsAccess().getInitialElementInitialElementParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_13);
                    lv_initialElement_3_0=ruleInitialElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrayInitialElementsRule());
                      	        }
                             		set(
                             			current, 
                             			"initialElement",
                              		lv_initialElement_3_0, 
                              		"com.bichler.iec.Iec.InitialElement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,68,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getArrayInitialElementsAccess().getRightParenthesisKeyword_1_3());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayInitialElements"


    // $ANTLR start "entryRuleInitialElement"
    // InternalIec.g:2222:1: entryRuleInitialElement returns [EObject current=null] : iv_ruleInitialElement= ruleInitialElement EOF ;
    public final EObject entryRuleInitialElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInitialElement = null;


        try {
            // InternalIec.g:2223:2: (iv_ruleInitialElement= ruleInitialElement EOF )
            // InternalIec.g:2224:2: iv_ruleInitialElement= ruleInitialElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInitialElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInitialElement=ruleInitialElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInitialElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInitialElement"


    // $ANTLR start "ruleInitialElement"
    // InternalIec.g:2231:1: ruleInitialElement returns [EObject current=null] : (this_Constant_0= ruleConstant | this_EnumeratedValue_1= ruleEnumeratedValue | this_ArrayInitialization_2= ruleArrayInitialization | this_StructureInitialization_3= ruleStructureInitialization ) ;
    public final EObject ruleInitialElement() throws RecognitionException {
        EObject current = null;

        EObject this_Constant_0 = null;

        EObject this_EnumeratedValue_1 = null;

        EObject this_ArrayInitialization_2 = null;

        EObject this_StructureInitialization_3 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:2234:28: ( (this_Constant_0= ruleConstant | this_EnumeratedValue_1= ruleEnumeratedValue | this_ArrayInitialization_2= ruleArrayInitialization | this_StructureInitialization_3= ruleStructureInitialization ) )
            // InternalIec.g:2235:1: (this_Constant_0= ruleConstant | this_EnumeratedValue_1= ruleEnumeratedValue | this_ArrayInitialization_2= ruleArrayInitialization | this_StructureInitialization_3= ruleStructureInitialization )
            {
            // InternalIec.g:2235:1: (this_Constant_0= ruleConstant | this_EnumeratedValue_1= ruleEnumeratedValue | this_ArrayInitialization_2= ruleArrayInitialization | this_StructureInitialization_3= ruleStructureInitialization )
            int alt29=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case RULE_BINT:
            case RULE_OINT:
            case RULE_HINT:
            case RULE_FIXED_POINT:
            case RULE_SINGLE_BYTE_STRING:
            case RULE_DOUBLE_BYTE_STRING:
            case RULE_DIGIT:
            case 33:
            case 34:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 74:
            case 75:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
                {
                alt29=1;
                }
                break;
            case RULE_LETTER:
            case RULE_ID:
                {
                alt29=2;
                }
                break;
            case 70:
                {
                alt29=3;
                }
                break;
            case 67:
                {
                alt29=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }

            switch (alt29) {
                case 1 :
                    // InternalIec.g:2236:5: this_Constant_0= ruleConstant
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getInitialElementAccess().getConstantParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Constant_0=ruleConstant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Constant_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:2246:5: this_EnumeratedValue_1= ruleEnumeratedValue
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getInitialElementAccess().getEnumeratedValueParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_EnumeratedValue_1=ruleEnumeratedValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_EnumeratedValue_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIec.g:2256:5: this_ArrayInitialization_2= ruleArrayInitialization
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getInitialElementAccess().getArrayInitializationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayInitialization_2=ruleArrayInitialization();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ArrayInitialization_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalIec.g:2266:5: this_StructureInitialization_3= ruleStructureInitialization
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getInitialElementAccess().getStructureInitializationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_StructureInitialization_3=ruleStructureInitialization();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StructureInitialization_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInitialElement"


    // $ANTLR start "entryRuleStructureTypeDeclaration"
    // InternalIec.g:2282:1: entryRuleStructureTypeDeclaration returns [EObject current=null] : iv_ruleStructureTypeDeclaration= ruleStructureTypeDeclaration EOF ;
    public final EObject entryRuleStructureTypeDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructureTypeDeclaration = null;


        try {
            // InternalIec.g:2283:2: (iv_ruleStructureTypeDeclaration= ruleStructureTypeDeclaration EOF )
            // InternalIec.g:2284:2: iv_ruleStructureTypeDeclaration= ruleStructureTypeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructureTypeDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStructureTypeDeclaration=ruleStructureTypeDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructureTypeDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructureTypeDeclaration"


    // $ANTLR start "ruleStructureTypeDeclaration"
    // InternalIec.g:2291:1: ruleStructureTypeDeclaration returns [EObject current=null] : ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' ( ( (lv_declaration_2_0= ruleStructureDeclaration ) ) | ( (lv_initialization_3_0= ruleInitializedStructure ) ) ) ) ;
    public final EObject ruleStructureTypeDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_derivedType_0_0 = null;

        EObject lv_declaration_2_0 = null;

        EObject lv_initialization_3_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:2294:28: ( ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' ( ( (lv_declaration_2_0= ruleStructureDeclaration ) ) | ( (lv_initialization_3_0= ruleInitializedStructure ) ) ) ) )
            // InternalIec.g:2295:1: ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' ( ( (lv_declaration_2_0= ruleStructureDeclaration ) ) | ( (lv_initialization_3_0= ruleInitializedStructure ) ) ) )
            {
            // InternalIec.g:2295:1: ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' ( ( (lv_declaration_2_0= ruleStructureDeclaration ) ) | ( (lv_initialization_3_0= ruleInitializedStructure ) ) ) )
            // InternalIec.g:2295:2: ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' ( ( (lv_declaration_2_0= ruleStructureDeclaration ) ) | ( (lv_initialization_3_0= ruleInitializedStructure ) ) )
            {
            // InternalIec.g:2295:2: ( (lv_derivedType_0_0= ruleDerivedType ) )
            // InternalIec.g:2296:1: (lv_derivedType_0_0= ruleDerivedType )
            {
            // InternalIec.g:2296:1: (lv_derivedType_0_0= ruleDerivedType )
            // InternalIec.g:2297:3: lv_derivedType_0_0= ruleDerivedType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getStructureTypeDeclarationAccess().getDerivedTypeDerivedTypeParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_5);
            lv_derivedType_0_0=ruleDerivedType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStructureTypeDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"derivedType",
                      		lv_derivedType_0_0, 
                      		"com.bichler.iec.Iec.DerivedType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,64,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getStructureTypeDeclarationAccess().getColonKeyword_1());
                  
            }
            // InternalIec.g:2317:1: ( ( (lv_declaration_2_0= ruleStructureDeclaration ) ) | ( (lv_initialization_3_0= ruleInitializedStructure ) ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==77) ) {
                alt30=1;
            }
            else if ( ((LA30_0>=RULE_LETTER && LA30_0<=RULE_ID)) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalIec.g:2317:2: ( (lv_declaration_2_0= ruleStructureDeclaration ) )
                    {
                    // InternalIec.g:2317:2: ( (lv_declaration_2_0= ruleStructureDeclaration ) )
                    // InternalIec.g:2318:1: (lv_declaration_2_0= ruleStructureDeclaration )
                    {
                    // InternalIec.g:2318:1: (lv_declaration_2_0= ruleStructureDeclaration )
                    // InternalIec.g:2319:3: lv_declaration_2_0= ruleStructureDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getStructureTypeDeclarationAccess().getDeclarationStructureDeclarationParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_2_0=ruleStructureDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getStructureTypeDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaration",
                              		lv_declaration_2_0, 
                              		"com.bichler.iec.Iec.StructureDeclaration");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIec.g:2336:6: ( (lv_initialization_3_0= ruleInitializedStructure ) )
                    {
                    // InternalIec.g:2336:6: ( (lv_initialization_3_0= ruleInitializedStructure ) )
                    // InternalIec.g:2337:1: (lv_initialization_3_0= ruleInitializedStructure )
                    {
                    // InternalIec.g:2337:1: (lv_initialization_3_0= ruleInitializedStructure )
                    // InternalIec.g:2338:3: lv_initialization_3_0= ruleInitializedStructure
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getStructureTypeDeclarationAccess().getInitializationInitializedStructureParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_initialization_3_0=ruleInitializedStructure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getStructureTypeDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"initialization",
                              		lv_initialization_3_0, 
                              		"com.bichler.iec.Iec.InitializedStructure");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructureTypeDeclaration"


    // $ANTLR start "entryRuleStructureDeclaration"
    // InternalIec.g:2362:1: entryRuleStructureDeclaration returns [EObject current=null] : iv_ruleStructureDeclaration= ruleStructureDeclaration EOF ;
    public final EObject entryRuleStructureDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructureDeclaration = null;


        try {
            // InternalIec.g:2363:2: (iv_ruleStructureDeclaration= ruleStructureDeclaration EOF )
            // InternalIec.g:2364:2: iv_ruleStructureDeclaration= ruleStructureDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructureDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStructureDeclaration=ruleStructureDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructureDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructureDeclaration"


    // $ANTLR start "ruleStructureDeclaration"
    // InternalIec.g:2371:1: ruleStructureDeclaration returns [EObject current=null] : (otherlv_0= 'STRUCT' ( (lv_structureElement_1_0= ruleStructureElementDeclaration ) ) this_EOL_2= RULE_EOL ( ( (lv_structureElement_3_0= ruleStructureElementDeclaration ) ) this_EOL_4= RULE_EOL )* otherlv_5= 'END_STRUCT' ) ;
    public final EObject ruleStructureDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_EOL_2=null;
        Token this_EOL_4=null;
        Token otherlv_5=null;
        EObject lv_structureElement_1_0 = null;

        EObject lv_structureElement_3_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:2374:28: ( (otherlv_0= 'STRUCT' ( (lv_structureElement_1_0= ruleStructureElementDeclaration ) ) this_EOL_2= RULE_EOL ( ( (lv_structureElement_3_0= ruleStructureElementDeclaration ) ) this_EOL_4= RULE_EOL )* otherlv_5= 'END_STRUCT' ) )
            // InternalIec.g:2375:1: (otherlv_0= 'STRUCT' ( (lv_structureElement_1_0= ruleStructureElementDeclaration ) ) this_EOL_2= RULE_EOL ( ( (lv_structureElement_3_0= ruleStructureElementDeclaration ) ) this_EOL_4= RULE_EOL )* otherlv_5= 'END_STRUCT' )
            {
            // InternalIec.g:2375:1: (otherlv_0= 'STRUCT' ( (lv_structureElement_1_0= ruleStructureElementDeclaration ) ) this_EOL_2= RULE_EOL ( ( (lv_structureElement_3_0= ruleStructureElementDeclaration ) ) this_EOL_4= RULE_EOL )* otherlv_5= 'END_STRUCT' )
            // InternalIec.g:2375:3: otherlv_0= 'STRUCT' ( (lv_structureElement_1_0= ruleStructureElementDeclaration ) ) this_EOL_2= RULE_EOL ( ( (lv_structureElement_3_0= ruleStructureElementDeclaration ) ) this_EOL_4= RULE_EOL )* otherlv_5= 'END_STRUCT'
            {
            otherlv_0=(Token)match(input,77,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getStructureDeclarationAccess().getSTRUCTKeyword_0());
                  
            }
            // InternalIec.g:2379:1: ( (lv_structureElement_1_0= ruleStructureElementDeclaration ) )
            // InternalIec.g:2380:1: (lv_structureElement_1_0= ruleStructureElementDeclaration )
            {
            // InternalIec.g:2380:1: (lv_structureElement_1_0= ruleStructureElementDeclaration )
            // InternalIec.g:2381:3: lv_structureElement_1_0= ruleStructureElementDeclaration
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getStructureDeclarationAccess().getStructureElementStructureElementDeclarationParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_structureElement_1_0=ruleStructureElementDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStructureDeclarationRule());
              	        }
                     		add(
                     			current, 
                     			"structureElement",
                      		lv_structureElement_1_0, 
                      		"com.bichler.iec.Iec.StructureElementDeclaration");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            this_EOL_2=(Token)match(input,RULE_EOL,FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_EOL_2, grammarAccess.getStructureDeclarationAccess().getEOLTerminalRuleCall_2()); 
                  
            }
            // InternalIec.g:2401:1: ( ( (lv_structureElement_3_0= ruleStructureElementDeclaration ) ) this_EOL_4= RULE_EOL )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( ((LA31_0>=RULE_LETTER && LA31_0<=RULE_ID)) ) {
                    alt31=1;
                }


                switch (alt31) {
            	case 1 :
            	    // InternalIec.g:2401:2: ( (lv_structureElement_3_0= ruleStructureElementDeclaration ) ) this_EOL_4= RULE_EOL
            	    {
            	    // InternalIec.g:2401:2: ( (lv_structureElement_3_0= ruleStructureElementDeclaration ) )
            	    // InternalIec.g:2402:1: (lv_structureElement_3_0= ruleStructureElementDeclaration )
            	    {
            	    // InternalIec.g:2402:1: (lv_structureElement_3_0= ruleStructureElementDeclaration )
            	    // InternalIec.g:2403:3: lv_structureElement_3_0= ruleStructureElementDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getStructureDeclarationAccess().getStructureElementStructureElementDeclarationParserRuleCall_3_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_structureElement_3_0=ruleStructureElementDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getStructureDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"structureElement",
            	              		lv_structureElement_3_0, 
            	              		"com.bichler.iec.Iec.StructureElementDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    this_EOL_4=(Token)match(input,RULE_EOL,FOLLOW_24); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_EOL_4, grammarAccess.getStructureDeclarationAccess().getEOLTerminalRuleCall_3_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);

            otherlv_5=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getStructureDeclarationAccess().getEND_STRUCTKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructureDeclaration"


    // $ANTLR start "entryRuleStructureElementDeclaration"
    // InternalIec.g:2435:1: entryRuleStructureElementDeclaration returns [EObject current=null] : iv_ruleStructureElementDeclaration= ruleStructureElementDeclaration EOF ;
    public final EObject entryRuleStructureElementDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructureElementDeclaration = null;


        try {
            // InternalIec.g:2436:2: (iv_ruleStructureElementDeclaration= ruleStructureElementDeclaration EOF )
            // InternalIec.g:2437:2: iv_ruleStructureElementDeclaration= ruleStructureElementDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructureElementDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStructureElementDeclaration=ruleStructureElementDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructureElementDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructureElementDeclaration"


    // $ANTLR start "ruleStructureElementDeclaration"
    // InternalIec.g:2444:1: ruleStructureElementDeclaration returns [EObject current=null] : ( ( (lv_name_0_0= ruleIdentifier ) ) otherlv_1= ':' ( (lv_specInit_2_0= ruleSpecInit ) ) ) ;
    public final EObject ruleStructureElementDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_specInit_2_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:2447:28: ( ( ( (lv_name_0_0= ruleIdentifier ) ) otherlv_1= ':' ( (lv_specInit_2_0= ruleSpecInit ) ) ) )
            // InternalIec.g:2448:1: ( ( (lv_name_0_0= ruleIdentifier ) ) otherlv_1= ':' ( (lv_specInit_2_0= ruleSpecInit ) ) )
            {
            // InternalIec.g:2448:1: ( ( (lv_name_0_0= ruleIdentifier ) ) otherlv_1= ':' ( (lv_specInit_2_0= ruleSpecInit ) ) )
            // InternalIec.g:2448:2: ( (lv_name_0_0= ruleIdentifier ) ) otherlv_1= ':' ( (lv_specInit_2_0= ruleSpecInit ) )
            {
            // InternalIec.g:2448:2: ( (lv_name_0_0= ruleIdentifier ) )
            // InternalIec.g:2449:1: (lv_name_0_0= ruleIdentifier )
            {
            // InternalIec.g:2449:1: (lv_name_0_0= ruleIdentifier )
            // InternalIec.g:2450:3: lv_name_0_0= ruleIdentifier
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getStructureElementDeclarationAccess().getNameIdentifierParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_5);
            lv_name_0_0=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStructureElementDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"com.bichler.iec.Iec.Identifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,64,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getStructureElementDeclarationAccess().getColonKeyword_1());
                  
            }
            // InternalIec.g:2470:1: ( (lv_specInit_2_0= ruleSpecInit ) )
            // InternalIec.g:2471:1: (lv_specInit_2_0= ruleSpecInit )
            {
            // InternalIec.g:2471:1: (lv_specInit_2_0= ruleSpecInit )
            // InternalIec.g:2472:3: lv_specInit_2_0= ruleSpecInit
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getStructureElementDeclarationAccess().getSpecInitSpecInitParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_specInit_2_0=ruleSpecInit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStructureElementDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"specInit",
                      		lv_specInit_2_0, 
                      		"com.bichler.iec.Iec.SpecInit");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructureElementDeclaration"


    // $ANTLR start "entryRuleInitializedStructure"
    // InternalIec.g:2496:1: entryRuleInitializedStructure returns [EObject current=null] : iv_ruleInitializedStructure= ruleInitializedStructure EOF ;
    public final EObject entryRuleInitializedStructure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInitializedStructure = null;


        try {
            // InternalIec.g:2497:2: (iv_ruleInitializedStructure= ruleInitializedStructure EOF )
            // InternalIec.g:2498:2: iv_ruleInitializedStructure= ruleInitializedStructure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInitializedStructureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInitializedStructure=ruleInitializedStructure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInitializedStructure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInitializedStructure"


    // $ANTLR start "ruleInitializedStructure"
    // InternalIec.g:2505:1: ruleInitializedStructure returns [EObject current=null] : ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':=' ( (lv_initialization_2_0= ruleStructureInitialization ) ) ) ;
    public final EObject ruleInitializedStructure() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_derivedType_0_0 = null;

        EObject lv_initialization_2_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:2508:28: ( ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':=' ( (lv_initialization_2_0= ruleStructureInitialization ) ) ) )
            // InternalIec.g:2509:1: ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':=' ( (lv_initialization_2_0= ruleStructureInitialization ) ) )
            {
            // InternalIec.g:2509:1: ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':=' ( (lv_initialization_2_0= ruleStructureInitialization ) ) )
            // InternalIec.g:2509:2: ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':=' ( (lv_initialization_2_0= ruleStructureInitialization ) )
            {
            // InternalIec.g:2509:2: ( (lv_derivedType_0_0= ruleDerivedType ) )
            // InternalIec.g:2510:1: (lv_derivedType_0_0= ruleDerivedType )
            {
            // InternalIec.g:2510:1: (lv_derivedType_0_0= ruleDerivedType )
            // InternalIec.g:2511:3: lv_derivedType_0_0= ruleDerivedType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getInitializedStructureAccess().getDerivedTypeDerivedTypeParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_25);
            lv_derivedType_0_0=ruleDerivedType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getInitializedStructureRule());
              	        }
                     		set(
                     			current, 
                     			"derivedType",
                      		lv_derivedType_0_0, 
                      		"com.bichler.iec.Iec.DerivedType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,66,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getInitializedStructureAccess().getColonEqualsSignKeyword_1());
                  
            }
            // InternalIec.g:2531:1: ( (lv_initialization_2_0= ruleStructureInitialization ) )
            // InternalIec.g:2532:1: (lv_initialization_2_0= ruleStructureInitialization )
            {
            // InternalIec.g:2532:1: (lv_initialization_2_0= ruleStructureInitialization )
            // InternalIec.g:2533:3: lv_initialization_2_0= ruleStructureInitialization
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getInitializedStructureAccess().getInitializationStructureInitializationParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_initialization_2_0=ruleStructureInitialization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getInitializedStructureRule());
              	        }
                     		set(
                     			current, 
                     			"initialization",
                      		lv_initialization_2_0, 
                      		"com.bichler.iec.Iec.StructureInitialization");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInitializedStructure"


    // $ANTLR start "entryRuleStructureInitialization"
    // InternalIec.g:2557:1: entryRuleStructureInitialization returns [EObject current=null] : iv_ruleStructureInitialization= ruleStructureInitialization EOF ;
    public final EObject entryRuleStructureInitialization() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructureInitialization = null;


        try {
            // InternalIec.g:2558:2: (iv_ruleStructureInitialization= ruleStructureInitialization EOF )
            // InternalIec.g:2559:2: iv_ruleStructureInitialization= ruleStructureInitialization EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructureInitializationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStructureInitialization=ruleStructureInitialization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructureInitialization; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructureInitialization"


    // $ANTLR start "ruleStructureInitialization"
    // InternalIec.g:2566:1: ruleStructureInitialization returns [EObject current=null] : (otherlv_0= '(' ( (lv_initialElements_1_0= ruleStructureElementInitialization ) ) (otherlv_2= ',' ( (lv_initialElements_3_0= ruleStructureElementInitialization ) ) )* otherlv_4= ')' ) ;
    public final EObject ruleStructureInitialization() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_initialElements_1_0 = null;

        EObject lv_initialElements_3_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:2569:28: ( (otherlv_0= '(' ( (lv_initialElements_1_0= ruleStructureElementInitialization ) ) (otherlv_2= ',' ( (lv_initialElements_3_0= ruleStructureElementInitialization ) ) )* otherlv_4= ')' ) )
            // InternalIec.g:2570:1: (otherlv_0= '(' ( (lv_initialElements_1_0= ruleStructureElementInitialization ) ) (otherlv_2= ',' ( (lv_initialElements_3_0= ruleStructureElementInitialization ) ) )* otherlv_4= ')' )
            {
            // InternalIec.g:2570:1: (otherlv_0= '(' ( (lv_initialElements_1_0= ruleStructureElementInitialization ) ) (otherlv_2= ',' ( (lv_initialElements_3_0= ruleStructureElementInitialization ) ) )* otherlv_4= ')' )
            // InternalIec.g:2570:3: otherlv_0= '(' ( (lv_initialElements_1_0= ruleStructureElementInitialization ) ) (otherlv_2= ',' ( (lv_initialElements_3_0= ruleStructureElementInitialization ) ) )* otherlv_4= ')'
            {
            otherlv_0=(Token)match(input,67,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getStructureInitializationAccess().getLeftParenthesisKeyword_0());
                  
            }
            // InternalIec.g:2574:1: ( (lv_initialElements_1_0= ruleStructureElementInitialization ) )
            // InternalIec.g:2575:1: (lv_initialElements_1_0= ruleStructureElementInitialization )
            {
            // InternalIec.g:2575:1: (lv_initialElements_1_0= ruleStructureElementInitialization )
            // InternalIec.g:2576:3: lv_initialElements_1_0= ruleStructureElementInitialization
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getStructureInitializationAccess().getInitialElementsStructureElementInitializationParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_26);
            lv_initialElements_1_0=ruleStructureElementInitialization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStructureInitializationRule());
              	        }
                     		add(
                     			current, 
                     			"initialElements",
                      		lv_initialElements_1_0, 
                      		"com.bichler.iec.Iec.StructureElementInitialization");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:2592:2: (otherlv_2= ',' ( (lv_initialElements_3_0= ruleStructureElementInitialization ) ) )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==71) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // InternalIec.g:2592:4: otherlv_2= ',' ( (lv_initialElements_3_0= ruleStructureElementInitialization ) )
            	    {
            	    otherlv_2=(Token)match(input,71,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getStructureInitializationAccess().getCommaKeyword_2_0());
            	          
            	    }
            	    // InternalIec.g:2596:1: ( (lv_initialElements_3_0= ruleStructureElementInitialization ) )
            	    // InternalIec.g:2597:1: (lv_initialElements_3_0= ruleStructureElementInitialization )
            	    {
            	    // InternalIec.g:2597:1: (lv_initialElements_3_0= ruleStructureElementInitialization )
            	    // InternalIec.g:2598:3: lv_initialElements_3_0= ruleStructureElementInitialization
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getStructureInitializationAccess().getInitialElementsStructureElementInitializationParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_26);
            	    lv_initialElements_3_0=ruleStructureElementInitialization();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getStructureInitializationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"initialElements",
            	              		lv_initialElements_3_0, 
            	              		"com.bichler.iec.Iec.StructureElementInitialization");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

            otherlv_4=(Token)match(input,68,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getStructureInitializationAccess().getRightParenthesisKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructureInitialization"


    // $ANTLR start "entryRuleStructureElementInitialization"
    // InternalIec.g:2626:1: entryRuleStructureElementInitialization returns [EObject current=null] : iv_ruleStructureElementInitialization= ruleStructureElementInitialization EOF ;
    public final EObject entryRuleStructureElementInitialization() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructureElementInitialization = null;


        try {
            // InternalIec.g:2627:2: (iv_ruleStructureElementInitialization= ruleStructureElementInitialization EOF )
            // InternalIec.g:2628:2: iv_ruleStructureElementInitialization= ruleStructureElementInitialization EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructureElementInitializationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStructureElementInitialization=ruleStructureElementInitialization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructureElementInitialization; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructureElementInitialization"


    // $ANTLR start "ruleStructureElementInitialization"
    // InternalIec.g:2635:1: ruleStructureElementInitialization returns [EObject current=null] : ( ( (lv_name_0_0= ruleIdentifier ) ) otherlv_1= ':=' ( (lv_value_2_0= ruleInitialElement ) ) ) ;
    public final EObject ruleStructureElementInitialization() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_value_2_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:2638:28: ( ( ( (lv_name_0_0= ruleIdentifier ) ) otherlv_1= ':=' ( (lv_value_2_0= ruleInitialElement ) ) ) )
            // InternalIec.g:2639:1: ( ( (lv_name_0_0= ruleIdentifier ) ) otherlv_1= ':=' ( (lv_value_2_0= ruleInitialElement ) ) )
            {
            // InternalIec.g:2639:1: ( ( (lv_name_0_0= ruleIdentifier ) ) otherlv_1= ':=' ( (lv_value_2_0= ruleInitialElement ) ) )
            // InternalIec.g:2639:2: ( (lv_name_0_0= ruleIdentifier ) ) otherlv_1= ':=' ( (lv_value_2_0= ruleInitialElement ) )
            {
            // InternalIec.g:2639:2: ( (lv_name_0_0= ruleIdentifier ) )
            // InternalIec.g:2640:1: (lv_name_0_0= ruleIdentifier )
            {
            // InternalIec.g:2640:1: (lv_name_0_0= ruleIdentifier )
            // InternalIec.g:2641:3: lv_name_0_0= ruleIdentifier
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getStructureElementInitializationAccess().getNameIdentifierParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_25);
            lv_name_0_0=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStructureElementInitializationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"com.bichler.iec.Iec.Identifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,66,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getStructureElementInitializationAccess().getColonEqualsSignKeyword_1());
                  
            }
            // InternalIec.g:2661:1: ( (lv_value_2_0= ruleInitialElement ) )
            // InternalIec.g:2662:1: (lv_value_2_0= ruleInitialElement )
            {
            // InternalIec.g:2662:1: (lv_value_2_0= ruleInitialElement )
            // InternalIec.g:2663:3: lv_value_2_0= ruleInitialElement
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getStructureElementInitializationAccess().getValueInitialElementParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleInitialElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStructureElementInitializationRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_2_0, 
                      		"com.bichler.iec.Iec.InitialElement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructureElementInitialization"


    // $ANTLR start "entryRuleStringDeclaration"
    // InternalIec.g:2687:1: entryRuleStringDeclaration returns [EObject current=null] : iv_ruleStringDeclaration= ruleStringDeclaration EOF ;
    public final EObject entryRuleStringDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringDeclaration = null;


        try {
            // InternalIec.g:2688:2: (iv_ruleStringDeclaration= ruleStringDeclaration EOF )
            // InternalIec.g:2689:2: iv_ruleStringDeclaration= ruleStringDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStringDeclaration=ruleStringDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringDeclaration"


    // $ANTLR start "ruleStringDeclaration"
    // InternalIec.g:2696:1: ruleStringDeclaration returns [EObject current=null] : ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' ( ( (lv_string_2_0= 'STRING' ) ) | otherlv_3= 'WSTRING' )? (otherlv_4= '[' ( (lv_size_5_0= ruleInteger ) ) otherlv_6= ']' ) (otherlv_7= ':=' ( (lv_initialValue_8_0= ruleCharacterString ) ) )? ) ;
    public final EObject ruleStringDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_string_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_derivedType_0_0 = null;

        AntlrDatatypeRuleToken lv_size_5_0 = null;

        EObject lv_initialValue_8_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:2699:28: ( ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' ( ( (lv_string_2_0= 'STRING' ) ) | otherlv_3= 'WSTRING' )? (otherlv_4= '[' ( (lv_size_5_0= ruleInteger ) ) otherlv_6= ']' ) (otherlv_7= ':=' ( (lv_initialValue_8_0= ruleCharacterString ) ) )? ) )
            // InternalIec.g:2700:1: ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' ( ( (lv_string_2_0= 'STRING' ) ) | otherlv_3= 'WSTRING' )? (otherlv_4= '[' ( (lv_size_5_0= ruleInteger ) ) otherlv_6= ']' ) (otherlv_7= ':=' ( (lv_initialValue_8_0= ruleCharacterString ) ) )? )
            {
            // InternalIec.g:2700:1: ( ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' ( ( (lv_string_2_0= 'STRING' ) ) | otherlv_3= 'WSTRING' )? (otherlv_4= '[' ( (lv_size_5_0= ruleInteger ) ) otherlv_6= ']' ) (otherlv_7= ':=' ( (lv_initialValue_8_0= ruleCharacterString ) ) )? )
            // InternalIec.g:2700:2: ( (lv_derivedType_0_0= ruleDerivedType ) ) otherlv_1= ':' ( ( (lv_string_2_0= 'STRING' ) ) | otherlv_3= 'WSTRING' )? (otherlv_4= '[' ( (lv_size_5_0= ruleInteger ) ) otherlv_6= ']' ) (otherlv_7= ':=' ( (lv_initialValue_8_0= ruleCharacterString ) ) )?
            {
            // InternalIec.g:2700:2: ( (lv_derivedType_0_0= ruleDerivedType ) )
            // InternalIec.g:2701:1: (lv_derivedType_0_0= ruleDerivedType )
            {
            // InternalIec.g:2701:1: (lv_derivedType_0_0= ruleDerivedType )
            // InternalIec.g:2702:3: lv_derivedType_0_0= ruleDerivedType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getStringDeclarationAccess().getDerivedTypeDerivedTypeParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_5);
            lv_derivedType_0_0=ruleDerivedType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStringDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"derivedType",
                      		lv_derivedType_0_0, 
                      		"com.bichler.iec.Iec.DerivedType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,64,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getStringDeclarationAccess().getColonKeyword_1());
                  
            }
            // InternalIec.g:2722:1: ( ( (lv_string_2_0= 'STRING' ) ) | otherlv_3= 'WSTRING' )?
            int alt33=3;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==32) ) {
                alt33=1;
            }
            else if ( (LA33_0==30) ) {
                alt33=2;
            }
            switch (alt33) {
                case 1 :
                    // InternalIec.g:2722:2: ( (lv_string_2_0= 'STRING' ) )
                    {
                    // InternalIec.g:2722:2: ( (lv_string_2_0= 'STRING' ) )
                    // InternalIec.g:2723:1: (lv_string_2_0= 'STRING' )
                    {
                    // InternalIec.g:2723:1: (lv_string_2_0= 'STRING' )
                    // InternalIec.g:2724:3: lv_string_2_0= 'STRING'
                    {
                    lv_string_2_0=(Token)match(input,32,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_string_2_0, grammarAccess.getStringDeclarationAccess().getStringSTRINGKeyword_2_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStringDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "string", true, "STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIec.g:2738:7: otherlv_3= 'WSTRING'
                    {
                    otherlv_3=(Token)match(input,30,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getStringDeclarationAccess().getWSTRINGKeyword_2_1());
                          
                    }

                    }
                    break;

            }

            // InternalIec.g:2742:3: (otherlv_4= '[' ( (lv_size_5_0= ruleInteger ) ) otherlv_6= ']' )
            // InternalIec.g:2742:5: otherlv_4= '[' ( (lv_size_5_0= ruleInteger ) ) otherlv_6= ']'
            {
            otherlv_4=(Token)match(input,70,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getStringDeclarationAccess().getLeftSquareBracketKeyword_3_0());
                  
            }
            // InternalIec.g:2746:1: ( (lv_size_5_0= ruleInteger ) )
            // InternalIec.g:2747:1: (lv_size_5_0= ruleInteger )
            {
            // InternalIec.g:2747:1: (lv_size_5_0= ruleInteger )
            // InternalIec.g:2748:3: lv_size_5_0= ruleInteger
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getStringDeclarationAccess().getSizeIntegerParserRuleCall_3_1_0()); 
              	    
            }
            pushFollow(FOLLOW_28);
            lv_size_5_0=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStringDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"size",
                      		lv_size_5_0, 
                      		"com.bichler.iec.Iec.Integer");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_6=(Token)match(input,72,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getStringDeclarationAccess().getRightSquareBracketKeyword_3_2());
                  
            }

            }

            // InternalIec.g:2768:2: (otherlv_7= ':=' ( (lv_initialValue_8_0= ruleCharacterString ) ) )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==66) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalIec.g:2768:4: otherlv_7= ':=' ( (lv_initialValue_8_0= ruleCharacterString ) )
                    {
                    otherlv_7=(Token)match(input,66,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getStringDeclarationAccess().getColonEqualsSignKeyword_4_0());
                          
                    }
                    // InternalIec.g:2772:1: ( (lv_initialValue_8_0= ruleCharacterString ) )
                    // InternalIec.g:2773:1: (lv_initialValue_8_0= ruleCharacterString )
                    {
                    // InternalIec.g:2773:1: (lv_initialValue_8_0= ruleCharacterString )
                    // InternalIec.g:2774:3: lv_initialValue_8_0= ruleCharacterString
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getStringDeclarationAccess().getInitialValueCharacterStringParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_initialValue_8_0=ruleCharacterString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getStringDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"initialValue",
                              		lv_initialValue_8_0, 
                              		"com.bichler.iec.Iec.CharacterString");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringDeclaration"


    // $ANTLR start "entryRuleVariable"
    // InternalIec.g:2798:1: entryRuleVariable returns [EObject current=null] : iv_ruleVariable= ruleVariable EOF ;
    public final EObject entryRuleVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariable = null;


        try {
            // InternalIec.g:2799:2: (iv_ruleVariable= ruleVariable EOF )
            // InternalIec.g:2800:2: iv_ruleVariable= ruleVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVariable=ruleVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariable"


    // $ANTLR start "ruleVariable"
    // InternalIec.g:2807:1: ruleVariable returns [EObject current=null] : ( (lv_name_0_0= ruleIdentifier ) ) ;
    public final EObject ruleVariable() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:2810:28: ( ( (lv_name_0_0= ruleIdentifier ) ) )
            // InternalIec.g:2811:1: ( (lv_name_0_0= ruleIdentifier ) )
            {
            // InternalIec.g:2811:1: ( (lv_name_0_0= ruleIdentifier ) )
            // InternalIec.g:2812:1: (lv_name_0_0= ruleIdentifier )
            {
            // InternalIec.g:2812:1: (lv_name_0_0= ruleIdentifier )
            // InternalIec.g:2813:3: lv_name_0_0= ruleIdentifier
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableAccess().getNameIdentifierParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"com.bichler.iec.Iec.Identifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariable"


    // $ANTLR start "entryRuleVariableAccess"
    // InternalIec.g:2837:1: entryRuleVariableAccess returns [EObject current=null] : iv_ruleVariableAccess= ruleVariableAccess EOF ;
    public final EObject entryRuleVariableAccess() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableAccess = null;


        try {
            // InternalIec.g:2838:2: (iv_ruleVariableAccess= ruleVariableAccess EOF )
            // InternalIec.g:2839:2: iv_ruleVariableAccess= ruleVariableAccess EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableAccessRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVariableAccess=ruleVariableAccess();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableAccess; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableAccess"


    // $ANTLR start "ruleVariableAccess"
    // InternalIec.g:2846:1: ruleVariableAccess returns [EObject current=null] : (this_DirectVariable_0= ruleDirectVariable | this_SymbolicVariableAccess_1= ruleSymbolicVariableAccess ) ;
    public final EObject ruleVariableAccess() throws RecognitionException {
        EObject current = null;

        EObject this_DirectVariable_0 = null;

        EObject this_SymbolicVariableAccess_1 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:2849:28: ( (this_DirectVariable_0= ruleDirectVariable | this_SymbolicVariableAccess_1= ruleSymbolicVariableAccess ) )
            // InternalIec.g:2850:1: (this_DirectVariable_0= ruleDirectVariable | this_SymbolicVariableAccess_1= ruleSymbolicVariableAccess )
            {
            // InternalIec.g:2850:1: (this_DirectVariable_0= ruleDirectVariable | this_SymbolicVariableAccess_1= ruleSymbolicVariableAccess )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==RULE_DIRECT_VARIABLE_ID) ) {
                alt35=1;
            }
            else if ( ((LA35_0>=RULE_LETTER && LA35_0<=RULE_ID)) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalIec.g:2851:5: this_DirectVariable_0= ruleDirectVariable
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableAccessAccess().getDirectVariableParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DirectVariable_0=ruleDirectVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_DirectVariable_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:2861:5: this_SymbolicVariableAccess_1= ruleSymbolicVariableAccess
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableAccessAccess().getSymbolicVariableAccessParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SymbolicVariableAccess_1=ruleSymbolicVariableAccess();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SymbolicVariableAccess_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableAccess"


    // $ANTLR start "entryRuleDirectVariable"
    // InternalIec.g:2877:1: entryRuleDirectVariable returns [EObject current=null] : iv_ruleDirectVariable= ruleDirectVariable EOF ;
    public final EObject entryRuleDirectVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDirectVariable = null;


        try {
            // InternalIec.g:2878:2: (iv_ruleDirectVariable= ruleDirectVariable EOF )
            // InternalIec.g:2879:2: iv_ruleDirectVariable= ruleDirectVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDirectVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDirectVariable=ruleDirectVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDirectVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDirectVariable"


    // $ANTLR start "ruleDirectVariable"
    // InternalIec.g:2886:1: ruleDirectVariable returns [EObject current=null] : ( (lv_name_0_0= RULE_DIRECT_VARIABLE_ID ) ) ;
    public final EObject ruleDirectVariable() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;

         enterRule(); 
            
        try {
            // InternalIec.g:2889:28: ( ( (lv_name_0_0= RULE_DIRECT_VARIABLE_ID ) ) )
            // InternalIec.g:2890:1: ( (lv_name_0_0= RULE_DIRECT_VARIABLE_ID ) )
            {
            // InternalIec.g:2890:1: ( (lv_name_0_0= RULE_DIRECT_VARIABLE_ID ) )
            // InternalIec.g:2891:1: (lv_name_0_0= RULE_DIRECT_VARIABLE_ID )
            {
            // InternalIec.g:2891:1: (lv_name_0_0= RULE_DIRECT_VARIABLE_ID )
            // InternalIec.g:2892:3: lv_name_0_0= RULE_DIRECT_VARIABLE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_DIRECT_VARIABLE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_0_0, grammarAccess.getDirectVariableAccess().getNameDIRECT_VARIABLE_IDTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getDirectVariableRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"com.bichler.iec.Iec.DIRECT_VARIABLE_ID");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDirectVariable"


    // $ANTLR start "entryRuleSymbolicVariableAccess"
    // InternalIec.g:2916:1: entryRuleSymbolicVariableAccess returns [EObject current=null] : iv_ruleSymbolicVariableAccess= ruleSymbolicVariableAccess EOF ;
    public final EObject entryRuleSymbolicVariableAccess() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSymbolicVariableAccess = null;


        try {
            // InternalIec.g:2917:2: (iv_ruleSymbolicVariableAccess= ruleSymbolicVariableAccess EOF )
            // InternalIec.g:2918:2: iv_ruleSymbolicVariableAccess= ruleSymbolicVariableAccess EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSymbolicVariableAccessRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSymbolicVariableAccess=ruleSymbolicVariableAccess();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSymbolicVariableAccess; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSymbolicVariableAccess"


    // $ANTLR start "ruleSymbolicVariableAccess"
    // InternalIec.g:2925:1: ruleSymbolicVariableAccess returns [EObject current=null] : (this_NamedVariableAccess_0= ruleNamedVariableAccess | this_MultiElementVariable_1= ruleMultiElementVariable ) ;
    public final EObject ruleSymbolicVariableAccess() throws RecognitionException {
        EObject current = null;

        EObject this_NamedVariableAccess_0 = null;

        EObject this_MultiElementVariable_1 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:2928:28: ( (this_NamedVariableAccess_0= ruleNamedVariableAccess | this_MultiElementVariable_1= ruleMultiElementVariable ) )
            // InternalIec.g:2929:1: (this_NamedVariableAccess_0= ruleNamedVariableAccess | this_MultiElementVariable_1= ruleMultiElementVariable )
            {
            // InternalIec.g:2929:1: (this_NamedVariableAccess_0= ruleNamedVariableAccess | this_MultiElementVariable_1= ruleMultiElementVariable )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==RULE_LETTER) ) {
                int LA36_1 = input.LA(2);

                if ( (LA36_1==RULE_FIELD_SELECTOR||LA36_1==70) ) {
                    alt36=2;
                }
                else if ( (LA36_1==EOF||LA36_1==RULE_EOL||(LA36_1>=RULE_LETTER && LA36_1<=RULE_ID)||LA36_1==68||(LA36_1>=71 && LA36_1<=75)||(LA36_1>=79 && LA36_1<=92)||LA36_1==96||(LA36_1>=105 && LA36_1<=110)||LA36_1==112||LA36_1==119||LA36_1==123) ) {
                    alt36=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA36_0==RULE_ID) ) {
                int LA36_2 = input.LA(2);

                if ( (LA36_2==RULE_FIELD_SELECTOR||LA36_2==70) ) {
                    alt36=2;
                }
                else if ( (LA36_2==EOF||LA36_2==RULE_EOL||(LA36_2>=RULE_LETTER && LA36_2<=RULE_ID)||LA36_2==68||(LA36_2>=71 && LA36_2<=75)||(LA36_2>=79 && LA36_2<=92)||LA36_2==96||(LA36_2>=105 && LA36_2<=110)||LA36_2==112||LA36_2==119||LA36_2==123) ) {
                    alt36=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }
            switch (alt36) {
                case 1 :
                    // InternalIec.g:2930:5: this_NamedVariableAccess_0= ruleNamedVariableAccess
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSymbolicVariableAccessAccess().getNamedVariableAccessParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_NamedVariableAccess_0=ruleNamedVariableAccess();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_NamedVariableAccess_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:2940:5: this_MultiElementVariable_1= ruleMultiElementVariable
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSymbolicVariableAccessAccess().getMultiElementVariableParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_MultiElementVariable_1=ruleMultiElementVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_MultiElementVariable_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSymbolicVariableAccess"


    // $ANTLR start "entryRuleNamedVariableAccess"
    // InternalIec.g:2956:1: entryRuleNamedVariableAccess returns [EObject current=null] : iv_ruleNamedVariableAccess= ruleNamedVariableAccess EOF ;
    public final EObject entryRuleNamedVariableAccess() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedVariableAccess = null;


        try {
            // InternalIec.g:2957:2: (iv_ruleNamedVariableAccess= ruleNamedVariableAccess EOF )
            // InternalIec.g:2958:2: iv_ruleNamedVariableAccess= ruleNamedVariableAccess EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedVariableAccessRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedVariableAccess=ruleNamedVariableAccess();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedVariableAccess; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamedVariableAccess"


    // $ANTLR start "ruleNamedVariableAccess"
    // InternalIec.g:2965:1: ruleNamedVariableAccess returns [EObject current=null] : ( ( ruleIdentifier ) ) ;
    public final EObject ruleNamedVariableAccess() throws RecognitionException {
        EObject current = null;

         enterRule(); 
            
        try {
            // InternalIec.g:2968:28: ( ( ( ruleIdentifier ) ) )
            // InternalIec.g:2969:1: ( ( ruleIdentifier ) )
            {
            // InternalIec.g:2969:1: ( ( ruleIdentifier ) )
            // InternalIec.g:2970:1: ( ruleIdentifier )
            {
            // InternalIec.g:2970:1: ( ruleIdentifier )
            // InternalIec.g:2971:3: ruleIdentifier
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getNamedVariableAccessRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getNamedVariableAccessAccess().getNamedVariableVariableCrossReference_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedVariableAccess"


    // $ANTLR start "entryRuleMultiElementVariable"
    // InternalIec.g:2992:1: entryRuleMultiElementVariable returns [EObject current=null] : iv_ruleMultiElementVariable= ruleMultiElementVariable EOF ;
    public final EObject entryRuleMultiElementVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiElementVariable = null;


        try {
            // InternalIec.g:2993:2: (iv_ruleMultiElementVariable= ruleMultiElementVariable EOF )
            // InternalIec.g:2994:2: iv_ruleMultiElementVariable= ruleMultiElementVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiElementVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiElementVariable=ruleMultiElementVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiElementVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiElementVariable"


    // $ANTLR start "ruleMultiElementVariable"
    // InternalIec.g:3001:1: ruleMultiElementVariable returns [EObject current=null] : (this_ArrayVariable_0= ruleArrayVariable | this_StructuredVariable_1= ruleStructuredVariable ) ;
    public final EObject ruleMultiElementVariable() throws RecognitionException {
        EObject current = null;

        EObject this_ArrayVariable_0 = null;

        EObject this_StructuredVariable_1 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:3004:28: ( (this_ArrayVariable_0= ruleArrayVariable | this_StructuredVariable_1= ruleStructuredVariable ) )
            // InternalIec.g:3005:1: (this_ArrayVariable_0= ruleArrayVariable | this_StructuredVariable_1= ruleStructuredVariable )
            {
            // InternalIec.g:3005:1: (this_ArrayVariable_0= ruleArrayVariable | this_StructuredVariable_1= ruleStructuredVariable )
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==RULE_LETTER) ) {
                int LA37_1 = input.LA(2);

                if ( (LA37_1==RULE_FIELD_SELECTOR) ) {
                    alt37=2;
                }
                else if ( (LA37_1==70) ) {
                    alt37=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA37_0==RULE_ID) ) {
                int LA37_2 = input.LA(2);

                if ( (LA37_2==RULE_FIELD_SELECTOR) ) {
                    alt37=2;
                }
                else if ( (LA37_2==70) ) {
                    alt37=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }
            switch (alt37) {
                case 1 :
                    // InternalIec.g:3006:5: this_ArrayVariable_0= ruleArrayVariable
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getMultiElementVariableAccess().getArrayVariableParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayVariable_0=ruleArrayVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ArrayVariable_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:3016:5: this_StructuredVariable_1= ruleStructuredVariable
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getMultiElementVariableAccess().getStructuredVariableParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_StructuredVariable_1=ruleStructuredVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StructuredVariable_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiElementVariable"


    // $ANTLR start "entryRuleArrayVariable"
    // InternalIec.g:3032:1: entryRuleArrayVariable returns [EObject current=null] : iv_ruleArrayVariable= ruleArrayVariable EOF ;
    public final EObject entryRuleArrayVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayVariable = null;


        try {
            // InternalIec.g:3033:2: (iv_ruleArrayVariable= ruleArrayVariable EOF )
            // InternalIec.g:3034:2: iv_ruleArrayVariable= ruleArrayVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayVariable=ruleArrayVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayVariable"


    // $ANTLR start "ruleArrayVariable"
    // InternalIec.g:3041:1: ruleArrayVariable returns [EObject current=null] : ( ( ( ruleIdentifier ) ) otherlv_1= '[' ( (lv_subscripts_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_subscripts_4_0= ruleExpression ) ) )* otherlv_5= ']' ) ;
    public final EObject ruleArrayVariable() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_subscripts_2_0 = null;

        EObject lv_subscripts_4_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:3044:28: ( ( ( ( ruleIdentifier ) ) otherlv_1= '[' ( (lv_subscripts_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_subscripts_4_0= ruleExpression ) ) )* otherlv_5= ']' ) )
            // InternalIec.g:3045:1: ( ( ( ruleIdentifier ) ) otherlv_1= '[' ( (lv_subscripts_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_subscripts_4_0= ruleExpression ) ) )* otherlv_5= ']' )
            {
            // InternalIec.g:3045:1: ( ( ( ruleIdentifier ) ) otherlv_1= '[' ( (lv_subscripts_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_subscripts_4_0= ruleExpression ) ) )* otherlv_5= ']' )
            // InternalIec.g:3045:2: ( ( ruleIdentifier ) ) otherlv_1= '[' ( (lv_subscripts_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_subscripts_4_0= ruleExpression ) ) )* otherlv_5= ']'
            {
            // InternalIec.g:3045:2: ( ( ruleIdentifier ) )
            // InternalIec.g:3046:1: ( ruleIdentifier )
            {
            // InternalIec.g:3046:1: ( ruleIdentifier )
            // InternalIec.g:3047:3: ruleIdentifier
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getArrayVariableRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArrayVariableAccess().getSubscriptedVariableVariableCrossReference_0_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,70,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getArrayVariableAccess().getLeftSquareBracketKeyword_1());
                  
            }
            // InternalIec.g:3064:1: ( (lv_subscripts_2_0= ruleExpression ) )
            // InternalIec.g:3065:1: (lv_subscripts_2_0= ruleExpression )
            {
            // InternalIec.g:3065:1: (lv_subscripts_2_0= ruleExpression )
            // InternalIec.g:3066:3: lv_subscripts_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArrayVariableAccess().getSubscriptsExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_17);
            lv_subscripts_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArrayVariableRule());
              	        }
                     		add(
                     			current, 
                     			"subscripts",
                      		lv_subscripts_2_0, 
                      		"com.bichler.iec.Iec.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:3082:2: (otherlv_3= ',' ( (lv_subscripts_4_0= ruleExpression ) ) )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==71) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // InternalIec.g:3082:4: otherlv_3= ',' ( (lv_subscripts_4_0= ruleExpression ) )
            	    {
            	    otherlv_3=(Token)match(input,71,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getArrayVariableAccess().getCommaKeyword_3_0());
            	          
            	    }
            	    // InternalIec.g:3086:1: ( (lv_subscripts_4_0= ruleExpression ) )
            	    // InternalIec.g:3087:1: (lv_subscripts_4_0= ruleExpression )
            	    {
            	    // InternalIec.g:3087:1: (lv_subscripts_4_0= ruleExpression )
            	    // InternalIec.g:3088:3: lv_subscripts_4_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArrayVariableAccess().getSubscriptsExpressionParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_17);
            	    lv_subscripts_4_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArrayVariableRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"subscripts",
            	              		lv_subscripts_4_0, 
            	              		"com.bichler.iec.Iec.Expression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

            otherlv_5=(Token)match(input,72,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getArrayVariableAccess().getRightSquareBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayVariable"


    // $ANTLR start "entryRuleStructuredVariable"
    // InternalIec.g:3116:1: entryRuleStructuredVariable returns [EObject current=null] : iv_ruleStructuredVariable= ruleStructuredVariable EOF ;
    public final EObject entryRuleStructuredVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructuredVariable = null;


        try {
            // InternalIec.g:3117:2: (iv_ruleStructuredVariable= ruleStructuredVariable EOF )
            // InternalIec.g:3118:2: iv_ruleStructuredVariable= ruleStructuredVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructuredVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStructuredVariable=ruleStructuredVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructuredVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructuredVariable"


    // $ANTLR start "ruleStructuredVariable"
    // InternalIec.g:3125:1: ruleStructuredVariable returns [EObject current=null] : ( ( ( ruleIdentifier ) ) ( (lv_fieldSelector_1_0= RULE_FIELD_SELECTOR ) ) ) ;
    public final EObject ruleStructuredVariable() throws RecognitionException {
        EObject current = null;

        Token lv_fieldSelector_1_0=null;

         enterRule(); 
            
        try {
            // InternalIec.g:3128:28: ( ( ( ( ruleIdentifier ) ) ( (lv_fieldSelector_1_0= RULE_FIELD_SELECTOR ) ) ) )
            // InternalIec.g:3129:1: ( ( ( ruleIdentifier ) ) ( (lv_fieldSelector_1_0= RULE_FIELD_SELECTOR ) ) )
            {
            // InternalIec.g:3129:1: ( ( ( ruleIdentifier ) ) ( (lv_fieldSelector_1_0= RULE_FIELD_SELECTOR ) ) )
            // InternalIec.g:3129:2: ( ( ruleIdentifier ) ) ( (lv_fieldSelector_1_0= RULE_FIELD_SELECTOR ) )
            {
            // InternalIec.g:3129:2: ( ( ruleIdentifier ) )
            // InternalIec.g:3130:1: ( ruleIdentifier )
            {
            // InternalIec.g:3130:1: ( ruleIdentifier )
            // InternalIec.g:3131:3: ruleIdentifier
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getStructuredVariableRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getStructuredVariableAccess().getRecordVariableVariableCrossReference_0_0()); 
              	    
            }
            pushFollow(FOLLOW_31);
            ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:3144:2: ( (lv_fieldSelector_1_0= RULE_FIELD_SELECTOR ) )
            // InternalIec.g:3145:1: (lv_fieldSelector_1_0= RULE_FIELD_SELECTOR )
            {
            // InternalIec.g:3145:1: (lv_fieldSelector_1_0= RULE_FIELD_SELECTOR )
            // InternalIec.g:3146:3: lv_fieldSelector_1_0= RULE_FIELD_SELECTOR
            {
            lv_fieldSelector_1_0=(Token)match(input,RULE_FIELD_SELECTOR,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_fieldSelector_1_0, grammarAccess.getStructuredVariableAccess().getFieldSelectorFIELD_SELECTORTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getStructuredVariableRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"fieldSelector",
                      		lv_fieldSelector_1_0, 
                      		"com.bichler.iec.Iec.FIELD_SELECTOR");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructuredVariable"


    // $ANTLR start "entryRuleExpression"
    // InternalIec.g:3170:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalIec.g:3171:2: (iv_ruleExpression= ruleExpression EOF )
            // InternalIec.g:3172:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalIec.g:3179:1: ruleExpression returns [EObject current=null] : this_OrExpression_0= ruleOrExpression ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_OrExpression_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:3182:28: (this_OrExpression_0= ruleOrExpression )
            // InternalIec.g:3184:5: this_OrExpression_0= ruleOrExpression
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExpressionAccess().getOrExpressionParserRuleCall()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_OrExpression_0=ruleOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_OrExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleOrExpression"
    // InternalIec.g:3200:1: entryRuleOrExpression returns [EObject current=null] : iv_ruleOrExpression= ruleOrExpression EOF ;
    public final EObject entryRuleOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrExpression = null;


        try {
            // InternalIec.g:3201:2: (iv_ruleOrExpression= ruleOrExpression EOF )
            // InternalIec.g:3202:2: iv_ruleOrExpression= ruleOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrExpression=ruleOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrExpression"


    // $ANTLR start "ruleOrExpression"
    // InternalIec.g:3209:1: ruleOrExpression returns [EObject current=null] : (this_XorExpression_0= ruleXorExpression ( () ( (lv_operator_2_0= 'OR' ) ) ( (lv_right_3_0= ruleXorExpression ) ) )* ) ;
    public final EObject ruleOrExpression() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_0=null;
        EObject this_XorExpression_0 = null;

        EObject lv_right_3_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:3212:28: ( (this_XorExpression_0= ruleXorExpression ( () ( (lv_operator_2_0= 'OR' ) ) ( (lv_right_3_0= ruleXorExpression ) ) )* ) )
            // InternalIec.g:3213:1: (this_XorExpression_0= ruleXorExpression ( () ( (lv_operator_2_0= 'OR' ) ) ( (lv_right_3_0= ruleXorExpression ) ) )* )
            {
            // InternalIec.g:3213:1: (this_XorExpression_0= ruleXorExpression ( () ( (lv_operator_2_0= 'OR' ) ) ( (lv_right_3_0= ruleXorExpression ) ) )* )
            // InternalIec.g:3214:5: this_XorExpression_0= ruleXorExpression ( () ( (lv_operator_2_0= 'OR' ) ) ( (lv_right_3_0= ruleXorExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getOrExpressionAccess().getXorExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_32);
            this_XorExpression_0=ruleXorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XorExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalIec.g:3222:1: ( () ( (lv_operator_2_0= 'OR' ) ) ( (lv_right_3_0= ruleXorExpression ) ) )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==79) ) {
                    alt39=1;
                }


                switch (alt39) {
            	case 1 :
            	    // InternalIec.g:3222:2: () ( (lv_operator_2_0= 'OR' ) ) ( (lv_right_3_0= ruleXorExpression ) )
            	    {
            	    // InternalIec.g:3222:2: ()
            	    // InternalIec.g:3223:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getOrExpressionAccess().getBinaryExpressionLeftAction_1_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalIec.g:3228:2: ( (lv_operator_2_0= 'OR' ) )
            	    // InternalIec.g:3229:1: (lv_operator_2_0= 'OR' )
            	    {
            	    // InternalIec.g:3229:1: (lv_operator_2_0= 'OR' )
            	    // InternalIec.g:3230:3: lv_operator_2_0= 'OR'
            	    {
            	    lv_operator_2_0=(Token)match(input,79,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              newLeafNode(lv_operator_2_0, grammarAccess.getOrExpressionAccess().getOperatorORKeyword_1_1_0());
            	          
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getOrExpressionRule());
            	      	        }
            	             		setWithLastConsumed(current, "operator", lv_operator_2_0, "OR");
            	      	    
            	    }

            	    }


            	    }

            	    // InternalIec.g:3243:2: ( (lv_right_3_0= ruleXorExpression ) )
            	    // InternalIec.g:3244:1: (lv_right_3_0= ruleXorExpression )
            	    {
            	    // InternalIec.g:3244:1: (lv_right_3_0= ruleXorExpression )
            	    // InternalIec.g:3245:3: lv_right_3_0= ruleXorExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getOrExpressionAccess().getRightXorExpressionParserRuleCall_1_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_32);
            	    lv_right_3_0=ruleXorExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"right",
            	              		lv_right_3_0, 
            	              		"com.bichler.iec.Iec.XorExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrExpression"


    // $ANTLR start "entryRuleXorExpression"
    // InternalIec.g:3269:1: entryRuleXorExpression returns [EObject current=null] : iv_ruleXorExpression= ruleXorExpression EOF ;
    public final EObject entryRuleXorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXorExpression = null;


        try {
            // InternalIec.g:3270:2: (iv_ruleXorExpression= ruleXorExpression EOF )
            // InternalIec.g:3271:2: iv_ruleXorExpression= ruleXorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXorExpression=ruleXorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXorExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXorExpression"


    // $ANTLR start "ruleXorExpression"
    // InternalIec.g:3278:1: ruleXorExpression returns [EObject current=null] : (this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= 'XOR' ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* ) ;
    public final EObject ruleXorExpression() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_0=null;
        EObject this_AndExpression_0 = null;

        EObject lv_right_3_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:3281:28: ( (this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= 'XOR' ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* ) )
            // InternalIec.g:3282:1: (this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= 'XOR' ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* )
            {
            // InternalIec.g:3282:1: (this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= 'XOR' ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* )
            // InternalIec.g:3283:5: this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= 'XOR' ) ) ( (lv_right_3_0= ruleAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXorExpressionAccess().getAndExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_33);
            this_AndExpression_0=ruleAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_AndExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalIec.g:3291:1: ( () ( (lv_operator_2_0= 'XOR' ) ) ( (lv_right_3_0= ruleAndExpression ) ) )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==80) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // InternalIec.g:3291:2: () ( (lv_operator_2_0= 'XOR' ) ) ( (lv_right_3_0= ruleAndExpression ) )
            	    {
            	    // InternalIec.g:3291:2: ()
            	    // InternalIec.g:3292:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXorExpressionAccess().getBinaryExpressionLeftAction_1_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalIec.g:3297:2: ( (lv_operator_2_0= 'XOR' ) )
            	    // InternalIec.g:3298:1: (lv_operator_2_0= 'XOR' )
            	    {
            	    // InternalIec.g:3298:1: (lv_operator_2_0= 'XOR' )
            	    // InternalIec.g:3299:3: lv_operator_2_0= 'XOR'
            	    {
            	    lv_operator_2_0=(Token)match(input,80,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              newLeafNode(lv_operator_2_0, grammarAccess.getXorExpressionAccess().getOperatorXORKeyword_1_1_0());
            	          
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXorExpressionRule());
            	      	        }
            	             		setWithLastConsumed(current, "operator", lv_operator_2_0, "XOR");
            	      	    
            	    }

            	    }


            	    }

            	    // InternalIec.g:3312:2: ( (lv_right_3_0= ruleAndExpression ) )
            	    // InternalIec.g:3313:1: (lv_right_3_0= ruleAndExpression )
            	    {
            	    // InternalIec.g:3313:1: (lv_right_3_0= ruleAndExpression )
            	    // InternalIec.g:3314:3: lv_right_3_0= ruleAndExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXorExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_33);
            	    lv_right_3_0=ruleAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXorExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"right",
            	              		lv_right_3_0, 
            	              		"com.bichler.iec.Iec.AndExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXorExpression"


    // $ANTLR start "entryRuleAndExpression"
    // InternalIec.g:3338:1: entryRuleAndExpression returns [EObject current=null] : iv_ruleAndExpression= ruleAndExpression EOF ;
    public final EObject entryRuleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAndExpression = null;


        try {
            // InternalIec.g:3339:2: (iv_ruleAndExpression= ruleAndExpression EOF )
            // InternalIec.g:3340:2: iv_ruleAndExpression= ruleAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAndExpression=ruleAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAndExpression"


    // $ANTLR start "ruleAndExpression"
    // InternalIec.g:3347:1: ruleAndExpression returns [EObject current=null] : (this_Comparison_0= ruleComparison ( () ( ( (lv_operator_2_1= '&' | lv_operator_2_2= 'AND' ) ) ) ( (lv_right_3_0= ruleComparison ) ) )* ) ;
    public final EObject ruleAndExpression() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_1=null;
        Token lv_operator_2_2=null;
        EObject this_Comparison_0 = null;

        EObject lv_right_3_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:3350:28: ( (this_Comparison_0= ruleComparison ( () ( ( (lv_operator_2_1= '&' | lv_operator_2_2= 'AND' ) ) ) ( (lv_right_3_0= ruleComparison ) ) )* ) )
            // InternalIec.g:3351:1: (this_Comparison_0= ruleComparison ( () ( ( (lv_operator_2_1= '&' | lv_operator_2_2= 'AND' ) ) ) ( (lv_right_3_0= ruleComparison ) ) )* )
            {
            // InternalIec.g:3351:1: (this_Comparison_0= ruleComparison ( () ( ( (lv_operator_2_1= '&' | lv_operator_2_2= 'AND' ) ) ) ( (lv_right_3_0= ruleComparison ) ) )* )
            // InternalIec.g:3352:5: this_Comparison_0= ruleComparison ( () ( ( (lv_operator_2_1= '&' | lv_operator_2_2= 'AND' ) ) ) ( (lv_right_3_0= ruleComparison ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAndExpressionAccess().getComparisonParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_34);
            this_Comparison_0=ruleComparison();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_Comparison_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalIec.g:3360:1: ( () ( ( (lv_operator_2_1= '&' | lv_operator_2_2= 'AND' ) ) ) ( (lv_right_3_0= ruleComparison ) ) )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( ((LA42_0>=81 && LA42_0<=82)) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalIec.g:3360:2: () ( ( (lv_operator_2_1= '&' | lv_operator_2_2= 'AND' ) ) ) ( (lv_right_3_0= ruleComparison ) )
            	    {
            	    // InternalIec.g:3360:2: ()
            	    // InternalIec.g:3361:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getAndExpressionAccess().getBinaryExpressionLeftAction_1_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalIec.g:3366:2: ( ( (lv_operator_2_1= '&' | lv_operator_2_2= 'AND' ) ) )
            	    // InternalIec.g:3367:1: ( (lv_operator_2_1= '&' | lv_operator_2_2= 'AND' ) )
            	    {
            	    // InternalIec.g:3367:1: ( (lv_operator_2_1= '&' | lv_operator_2_2= 'AND' ) )
            	    // InternalIec.g:3368:1: (lv_operator_2_1= '&' | lv_operator_2_2= 'AND' )
            	    {
            	    // InternalIec.g:3368:1: (lv_operator_2_1= '&' | lv_operator_2_2= 'AND' )
            	    int alt41=2;
            	    int LA41_0 = input.LA(1);

            	    if ( (LA41_0==81) ) {
            	        alt41=1;
            	    }
            	    else if ( (LA41_0==82) ) {
            	        alt41=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 41, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt41) {
            	        case 1 :
            	            // InternalIec.g:3369:3: lv_operator_2_1= '&'
            	            {
            	            lv_operator_2_1=(Token)match(input,81,FOLLOW_30); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_operator_2_1, grammarAccess.getAndExpressionAccess().getOperatorAmpersandKeyword_1_1_0_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getAndExpressionRule());
            	              	        }
            	                     		setWithLastConsumed(current, "operator", lv_operator_2_1, null);
            	              	    
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalIec.g:3381:8: lv_operator_2_2= 'AND'
            	            {
            	            lv_operator_2_2=(Token)match(input,82,FOLLOW_30); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_operator_2_2, grammarAccess.getAndExpressionAccess().getOperatorANDKeyword_1_1_0_1());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getAndExpressionRule());
            	              	        }
            	                     		setWithLastConsumed(current, "operator", lv_operator_2_2, null);
            	              	    
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalIec.g:3396:2: ( (lv_right_3_0= ruleComparison ) )
            	    // InternalIec.g:3397:1: (lv_right_3_0= ruleComparison )
            	    {
            	    // InternalIec.g:3397:1: (lv_right_3_0= ruleComparison )
            	    // InternalIec.g:3398:3: lv_right_3_0= ruleComparison
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAndExpressionAccess().getRightComparisonParserRuleCall_1_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_34);
            	    lv_right_3_0=ruleComparison();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"right",
            	              		lv_right_3_0, 
            	              		"com.bichler.iec.Iec.Comparison");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAndExpression"


    // $ANTLR start "entryRuleComparison"
    // InternalIec.g:3422:1: entryRuleComparison returns [EObject current=null] : iv_ruleComparison= ruleComparison EOF ;
    public final EObject entryRuleComparison() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComparison = null;


        try {
            // InternalIec.g:3423:2: (iv_ruleComparison= ruleComparison EOF )
            // InternalIec.g:3424:2: iv_ruleComparison= ruleComparison EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComparisonRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComparison=ruleComparison();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComparison; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalIec.g:3431:1: ruleComparison returns [EObject current=null] : (this_AddExpression_0= ruleAddExpression ( () ( ( (lv_operator_2_1= '=' | lv_operator_2_2= '<>' | lv_operator_2_3= '<' | lv_operator_2_4= '>' | lv_operator_2_5= '<=' | lv_operator_2_6= '>=' ) ) ) ( (lv_right_3_0= ruleAddExpression ) ) )* ) ;
    public final EObject ruleComparison() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_1=null;
        Token lv_operator_2_2=null;
        Token lv_operator_2_3=null;
        Token lv_operator_2_4=null;
        Token lv_operator_2_5=null;
        Token lv_operator_2_6=null;
        EObject this_AddExpression_0 = null;

        EObject lv_right_3_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:3434:28: ( (this_AddExpression_0= ruleAddExpression ( () ( ( (lv_operator_2_1= '=' | lv_operator_2_2= '<>' | lv_operator_2_3= '<' | lv_operator_2_4= '>' | lv_operator_2_5= '<=' | lv_operator_2_6= '>=' ) ) ) ( (lv_right_3_0= ruleAddExpression ) ) )* ) )
            // InternalIec.g:3435:1: (this_AddExpression_0= ruleAddExpression ( () ( ( (lv_operator_2_1= '=' | lv_operator_2_2= '<>' | lv_operator_2_3= '<' | lv_operator_2_4= '>' | lv_operator_2_5= '<=' | lv_operator_2_6= '>=' ) ) ) ( (lv_right_3_0= ruleAddExpression ) ) )* )
            {
            // InternalIec.g:3435:1: (this_AddExpression_0= ruleAddExpression ( () ( ( (lv_operator_2_1= '=' | lv_operator_2_2= '<>' | lv_operator_2_3= '<' | lv_operator_2_4= '>' | lv_operator_2_5= '<=' | lv_operator_2_6= '>=' ) ) ) ( (lv_right_3_0= ruleAddExpression ) ) )* )
            // InternalIec.g:3436:5: this_AddExpression_0= ruleAddExpression ( () ( ( (lv_operator_2_1= '=' | lv_operator_2_2= '<>' | lv_operator_2_3= '<' | lv_operator_2_4= '>' | lv_operator_2_5= '<=' | lv_operator_2_6= '>=' ) ) ) ( (lv_right_3_0= ruleAddExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getComparisonAccess().getAddExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_35);
            this_AddExpression_0=ruleAddExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_AddExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalIec.g:3444:1: ( () ( ( (lv_operator_2_1= '=' | lv_operator_2_2= '<>' | lv_operator_2_3= '<' | lv_operator_2_4= '>' | lv_operator_2_5= '<=' | lv_operator_2_6= '>=' ) ) ) ( (lv_right_3_0= ruleAddExpression ) ) )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( ((LA44_0>=83 && LA44_0<=88)) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // InternalIec.g:3444:2: () ( ( (lv_operator_2_1= '=' | lv_operator_2_2= '<>' | lv_operator_2_3= '<' | lv_operator_2_4= '>' | lv_operator_2_5= '<=' | lv_operator_2_6= '>=' ) ) ) ( (lv_right_3_0= ruleAddExpression ) )
            	    {
            	    // InternalIec.g:3444:2: ()
            	    // InternalIec.g:3445:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getComparisonAccess().getBinaryExpressionLeftAction_1_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalIec.g:3450:2: ( ( (lv_operator_2_1= '=' | lv_operator_2_2= '<>' | lv_operator_2_3= '<' | lv_operator_2_4= '>' | lv_operator_2_5= '<=' | lv_operator_2_6= '>=' ) ) )
            	    // InternalIec.g:3451:1: ( (lv_operator_2_1= '=' | lv_operator_2_2= '<>' | lv_operator_2_3= '<' | lv_operator_2_4= '>' | lv_operator_2_5= '<=' | lv_operator_2_6= '>=' ) )
            	    {
            	    // InternalIec.g:3451:1: ( (lv_operator_2_1= '=' | lv_operator_2_2= '<>' | lv_operator_2_3= '<' | lv_operator_2_4= '>' | lv_operator_2_5= '<=' | lv_operator_2_6= '>=' ) )
            	    // InternalIec.g:3452:1: (lv_operator_2_1= '=' | lv_operator_2_2= '<>' | lv_operator_2_3= '<' | lv_operator_2_4= '>' | lv_operator_2_5= '<=' | lv_operator_2_6= '>=' )
            	    {
            	    // InternalIec.g:3452:1: (lv_operator_2_1= '=' | lv_operator_2_2= '<>' | lv_operator_2_3= '<' | lv_operator_2_4= '>' | lv_operator_2_5= '<=' | lv_operator_2_6= '>=' )
            	    int alt43=6;
            	    switch ( input.LA(1) ) {
            	    case 83:
            	        {
            	        alt43=1;
            	        }
            	        break;
            	    case 84:
            	        {
            	        alt43=2;
            	        }
            	        break;
            	    case 85:
            	        {
            	        alt43=3;
            	        }
            	        break;
            	    case 86:
            	        {
            	        alt43=4;
            	        }
            	        break;
            	    case 87:
            	        {
            	        alt43=5;
            	        }
            	        break;
            	    case 88:
            	        {
            	        alt43=6;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 43, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt43) {
            	        case 1 :
            	            // InternalIec.g:3453:3: lv_operator_2_1= '='
            	            {
            	            lv_operator_2_1=(Token)match(input,83,FOLLOW_30); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_operator_2_1, grammarAccess.getComparisonAccess().getOperatorEqualsSignKeyword_1_1_0_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getComparisonRule());
            	              	        }
            	                     		setWithLastConsumed(current, "operator", lv_operator_2_1, null);
            	              	    
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalIec.g:3465:8: lv_operator_2_2= '<>'
            	            {
            	            lv_operator_2_2=(Token)match(input,84,FOLLOW_30); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_operator_2_2, grammarAccess.getComparisonAccess().getOperatorLessThanSignGreaterThanSignKeyword_1_1_0_1());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getComparisonRule());
            	              	        }
            	                     		setWithLastConsumed(current, "operator", lv_operator_2_2, null);
            	              	    
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalIec.g:3477:8: lv_operator_2_3= '<'
            	            {
            	            lv_operator_2_3=(Token)match(input,85,FOLLOW_30); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_operator_2_3, grammarAccess.getComparisonAccess().getOperatorLessThanSignKeyword_1_1_0_2());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getComparisonRule());
            	              	        }
            	                     		setWithLastConsumed(current, "operator", lv_operator_2_3, null);
            	              	    
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // InternalIec.g:3489:8: lv_operator_2_4= '>'
            	            {
            	            lv_operator_2_4=(Token)match(input,86,FOLLOW_30); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_operator_2_4, grammarAccess.getComparisonAccess().getOperatorGreaterThanSignKeyword_1_1_0_3());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getComparisonRule());
            	              	        }
            	                     		setWithLastConsumed(current, "operator", lv_operator_2_4, null);
            	              	    
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // InternalIec.g:3501:8: lv_operator_2_5= '<='
            	            {
            	            lv_operator_2_5=(Token)match(input,87,FOLLOW_30); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_operator_2_5, grammarAccess.getComparisonAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_0_4());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getComparisonRule());
            	              	        }
            	                     		setWithLastConsumed(current, "operator", lv_operator_2_5, null);
            	              	    
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // InternalIec.g:3513:8: lv_operator_2_6= '>='
            	            {
            	            lv_operator_2_6=(Token)match(input,88,FOLLOW_30); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_operator_2_6, grammarAccess.getComparisonAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_0_5());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getComparisonRule());
            	              	        }
            	                     		setWithLastConsumed(current, "operator", lv_operator_2_6, null);
            	              	    
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalIec.g:3528:2: ( (lv_right_3_0= ruleAddExpression ) )
            	    // InternalIec.g:3529:1: (lv_right_3_0= ruleAddExpression )
            	    {
            	    // InternalIec.g:3529:1: (lv_right_3_0= ruleAddExpression )
            	    // InternalIec.g:3530:3: lv_right_3_0= ruleAddExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getComparisonAccess().getRightAddExpressionParserRuleCall_1_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_right_3_0=ruleAddExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getComparisonRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"right",
            	              		lv_right_3_0, 
            	              		"com.bichler.iec.Iec.AddExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRuleAddExpression"
    // InternalIec.g:3554:1: entryRuleAddExpression returns [EObject current=null] : iv_ruleAddExpression= ruleAddExpression EOF ;
    public final EObject entryRuleAddExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAddExpression = null;


        try {
            // InternalIec.g:3555:2: (iv_ruleAddExpression= ruleAddExpression EOF )
            // InternalIec.g:3556:2: iv_ruleAddExpression= ruleAddExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAddExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAddExpression=ruleAddExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAddExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAddExpression"


    // $ANTLR start "ruleAddExpression"
    // InternalIec.g:3563:1: ruleAddExpression returns [EObject current=null] : (this_Term_0= ruleTerm ( () ( ( (lv_operator_2_1= '-' | lv_operator_2_2= '+' ) ) ) ( (lv_right_3_0= ruleTerm ) ) )* ) ;
    public final EObject ruleAddExpression() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_1=null;
        Token lv_operator_2_2=null;
        EObject this_Term_0 = null;

        EObject lv_right_3_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:3566:28: ( (this_Term_0= ruleTerm ( () ( ( (lv_operator_2_1= '-' | lv_operator_2_2= '+' ) ) ) ( (lv_right_3_0= ruleTerm ) ) )* ) )
            // InternalIec.g:3567:1: (this_Term_0= ruleTerm ( () ( ( (lv_operator_2_1= '-' | lv_operator_2_2= '+' ) ) ) ( (lv_right_3_0= ruleTerm ) ) )* )
            {
            // InternalIec.g:3567:1: (this_Term_0= ruleTerm ( () ( ( (lv_operator_2_1= '-' | lv_operator_2_2= '+' ) ) ) ( (lv_right_3_0= ruleTerm ) ) )* )
            // InternalIec.g:3568:5: this_Term_0= ruleTerm ( () ( ( (lv_operator_2_1= '-' | lv_operator_2_2= '+' ) ) ) ( (lv_right_3_0= ruleTerm ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAddExpressionAccess().getTermParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_36);
            this_Term_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_Term_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalIec.g:3576:1: ( () ( ( (lv_operator_2_1= '-' | lv_operator_2_2= '+' ) ) ) ( (lv_right_3_0= ruleTerm ) ) )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( ((LA46_0>=74 && LA46_0<=75)) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // InternalIec.g:3576:2: () ( ( (lv_operator_2_1= '-' | lv_operator_2_2= '+' ) ) ) ( (lv_right_3_0= ruleTerm ) )
            	    {
            	    // InternalIec.g:3576:2: ()
            	    // InternalIec.g:3577:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getAddExpressionAccess().getBinaryExpressionLeftAction_1_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalIec.g:3582:2: ( ( (lv_operator_2_1= '-' | lv_operator_2_2= '+' ) ) )
            	    // InternalIec.g:3583:1: ( (lv_operator_2_1= '-' | lv_operator_2_2= '+' ) )
            	    {
            	    // InternalIec.g:3583:1: ( (lv_operator_2_1= '-' | lv_operator_2_2= '+' ) )
            	    // InternalIec.g:3584:1: (lv_operator_2_1= '-' | lv_operator_2_2= '+' )
            	    {
            	    // InternalIec.g:3584:1: (lv_operator_2_1= '-' | lv_operator_2_2= '+' )
            	    int alt45=2;
            	    int LA45_0 = input.LA(1);

            	    if ( (LA45_0==75) ) {
            	        alt45=1;
            	    }
            	    else if ( (LA45_0==74) ) {
            	        alt45=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 45, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt45) {
            	        case 1 :
            	            // InternalIec.g:3585:3: lv_operator_2_1= '-'
            	            {
            	            lv_operator_2_1=(Token)match(input,75,FOLLOW_30); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_operator_2_1, grammarAccess.getAddExpressionAccess().getOperatorHyphenMinusKeyword_1_1_0_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getAddExpressionRule());
            	              	        }
            	                     		setWithLastConsumed(current, "operator", lv_operator_2_1, null);
            	              	    
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalIec.g:3597:8: lv_operator_2_2= '+'
            	            {
            	            lv_operator_2_2=(Token)match(input,74,FOLLOW_30); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_operator_2_2, grammarAccess.getAddExpressionAccess().getOperatorPlusSignKeyword_1_1_0_1());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getAddExpressionRule());
            	              	        }
            	                     		setWithLastConsumed(current, "operator", lv_operator_2_2, null);
            	              	    
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalIec.g:3612:2: ( (lv_right_3_0= ruleTerm ) )
            	    // InternalIec.g:3613:1: (lv_right_3_0= ruleTerm )
            	    {
            	    // InternalIec.g:3613:1: (lv_right_3_0= ruleTerm )
            	    // InternalIec.g:3614:3: lv_right_3_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAddExpressionAccess().getRightTermParserRuleCall_1_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_36);
            	    lv_right_3_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAddExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"right",
            	              		lv_right_3_0, 
            	              		"com.bichler.iec.Iec.Term");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddExpression"


    // $ANTLR start "entryRuleTerm"
    // InternalIec.g:3638:1: entryRuleTerm returns [EObject current=null] : iv_ruleTerm= ruleTerm EOF ;
    public final EObject entryRuleTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTerm = null;


        try {
            // InternalIec.g:3639:2: (iv_ruleTerm= ruleTerm EOF )
            // InternalIec.g:3640:2: iv_ruleTerm= ruleTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTerm=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTerm"


    // $ANTLR start "ruleTerm"
    // InternalIec.g:3647:1: ruleTerm returns [EObject current=null] : (this_PowerExpression_0= rulePowerExpression ( () ( ( (lv_operator_2_1= '*' | lv_operator_2_2= '/' | lv_operator_2_3= 'MOD' ) ) ) ( (lv_right_3_0= rulePowerExpression ) ) )* ) ;
    public final EObject ruleTerm() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_1=null;
        Token lv_operator_2_2=null;
        Token lv_operator_2_3=null;
        EObject this_PowerExpression_0 = null;

        EObject lv_right_3_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:3650:28: ( (this_PowerExpression_0= rulePowerExpression ( () ( ( (lv_operator_2_1= '*' | lv_operator_2_2= '/' | lv_operator_2_3= 'MOD' ) ) ) ( (lv_right_3_0= rulePowerExpression ) ) )* ) )
            // InternalIec.g:3651:1: (this_PowerExpression_0= rulePowerExpression ( () ( ( (lv_operator_2_1= '*' | lv_operator_2_2= '/' | lv_operator_2_3= 'MOD' ) ) ) ( (lv_right_3_0= rulePowerExpression ) ) )* )
            {
            // InternalIec.g:3651:1: (this_PowerExpression_0= rulePowerExpression ( () ( ( (lv_operator_2_1= '*' | lv_operator_2_2= '/' | lv_operator_2_3= 'MOD' ) ) ) ( (lv_right_3_0= rulePowerExpression ) ) )* )
            // InternalIec.g:3652:5: this_PowerExpression_0= rulePowerExpression ( () ( ( (lv_operator_2_1= '*' | lv_operator_2_2= '/' | lv_operator_2_3= 'MOD' ) ) ) ( (lv_right_3_0= rulePowerExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getTermAccess().getPowerExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_37);
            this_PowerExpression_0=rulePowerExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_PowerExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalIec.g:3660:1: ( () ( ( (lv_operator_2_1= '*' | lv_operator_2_2= '/' | lv_operator_2_3= 'MOD' ) ) ) ( (lv_right_3_0= rulePowerExpression ) ) )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( ((LA48_0>=89 && LA48_0<=91)) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // InternalIec.g:3660:2: () ( ( (lv_operator_2_1= '*' | lv_operator_2_2= '/' | lv_operator_2_3= 'MOD' ) ) ) ( (lv_right_3_0= rulePowerExpression ) )
            	    {
            	    // InternalIec.g:3660:2: ()
            	    // InternalIec.g:3661:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getTermAccess().getBinaryExpressionLeftAction_1_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalIec.g:3666:2: ( ( (lv_operator_2_1= '*' | lv_operator_2_2= '/' | lv_operator_2_3= 'MOD' ) ) )
            	    // InternalIec.g:3667:1: ( (lv_operator_2_1= '*' | lv_operator_2_2= '/' | lv_operator_2_3= 'MOD' ) )
            	    {
            	    // InternalIec.g:3667:1: ( (lv_operator_2_1= '*' | lv_operator_2_2= '/' | lv_operator_2_3= 'MOD' ) )
            	    // InternalIec.g:3668:1: (lv_operator_2_1= '*' | lv_operator_2_2= '/' | lv_operator_2_3= 'MOD' )
            	    {
            	    // InternalIec.g:3668:1: (lv_operator_2_1= '*' | lv_operator_2_2= '/' | lv_operator_2_3= 'MOD' )
            	    int alt47=3;
            	    switch ( input.LA(1) ) {
            	    case 89:
            	        {
            	        alt47=1;
            	        }
            	        break;
            	    case 90:
            	        {
            	        alt47=2;
            	        }
            	        break;
            	    case 91:
            	        {
            	        alt47=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 47, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt47) {
            	        case 1 :
            	            // InternalIec.g:3669:3: lv_operator_2_1= '*'
            	            {
            	            lv_operator_2_1=(Token)match(input,89,FOLLOW_30); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_operator_2_1, grammarAccess.getTermAccess().getOperatorAsteriskKeyword_1_1_0_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getTermRule());
            	              	        }
            	                     		setWithLastConsumed(current, "operator", lv_operator_2_1, null);
            	              	    
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalIec.g:3681:8: lv_operator_2_2= '/'
            	            {
            	            lv_operator_2_2=(Token)match(input,90,FOLLOW_30); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_operator_2_2, grammarAccess.getTermAccess().getOperatorSolidusKeyword_1_1_0_1());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getTermRule());
            	              	        }
            	                     		setWithLastConsumed(current, "operator", lv_operator_2_2, null);
            	              	    
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalIec.g:3693:8: lv_operator_2_3= 'MOD'
            	            {
            	            lv_operator_2_3=(Token)match(input,91,FOLLOW_30); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_operator_2_3, grammarAccess.getTermAccess().getOperatorMODKeyword_1_1_0_2());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getTermRule());
            	              	        }
            	                     		setWithLastConsumed(current, "operator", lv_operator_2_3, null);
            	              	    
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalIec.g:3708:2: ( (lv_right_3_0= rulePowerExpression ) )
            	    // InternalIec.g:3709:1: (lv_right_3_0= rulePowerExpression )
            	    {
            	    // InternalIec.g:3709:1: (lv_right_3_0= rulePowerExpression )
            	    // InternalIec.g:3710:3: lv_right_3_0= rulePowerExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTermAccess().getRightPowerExpressionParserRuleCall_1_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_right_3_0=rulePowerExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTermRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"right",
            	              		lv_right_3_0, 
            	              		"com.bichler.iec.Iec.PowerExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTerm"


    // $ANTLR start "entryRulePowerExpression"
    // InternalIec.g:3734:1: entryRulePowerExpression returns [EObject current=null] : iv_rulePowerExpression= rulePowerExpression EOF ;
    public final EObject entryRulePowerExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePowerExpression = null;


        try {
            // InternalIec.g:3735:2: (iv_rulePowerExpression= rulePowerExpression EOF )
            // InternalIec.g:3736:2: iv_rulePowerExpression= rulePowerExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPowerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePowerExpression=rulePowerExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePowerExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePowerExpression"


    // $ANTLR start "rulePowerExpression"
    // InternalIec.g:3743:1: rulePowerExpression returns [EObject current=null] : (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= '**' ) ) ( (lv_right_3_0= ruleUnaryExpression ) ) )* ) ;
    public final EObject rulePowerExpression() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_0=null;
        EObject this_UnaryExpression_0 = null;

        EObject lv_right_3_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:3746:28: ( (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= '**' ) ) ( (lv_right_3_0= ruleUnaryExpression ) ) )* ) )
            // InternalIec.g:3747:1: (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= '**' ) ) ( (lv_right_3_0= ruleUnaryExpression ) ) )* )
            {
            // InternalIec.g:3747:1: (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= '**' ) ) ( (lv_right_3_0= ruleUnaryExpression ) ) )* )
            // InternalIec.g:3748:5: this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= '**' ) ) ( (lv_right_3_0= ruleUnaryExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getPowerExpressionAccess().getUnaryExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_38);
            this_UnaryExpression_0=ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_UnaryExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalIec.g:3756:1: ( () ( (lv_operator_2_0= '**' ) ) ( (lv_right_3_0= ruleUnaryExpression ) ) )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==92) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalIec.g:3756:2: () ( (lv_operator_2_0= '**' ) ) ( (lv_right_3_0= ruleUnaryExpression ) )
            	    {
            	    // InternalIec.g:3756:2: ()
            	    // InternalIec.g:3757:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getPowerExpressionAccess().getBinaryExpressionLeftAction_1_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalIec.g:3762:2: ( (lv_operator_2_0= '**' ) )
            	    // InternalIec.g:3763:1: (lv_operator_2_0= '**' )
            	    {
            	    // InternalIec.g:3763:1: (lv_operator_2_0= '**' )
            	    // InternalIec.g:3764:3: lv_operator_2_0= '**'
            	    {
            	    lv_operator_2_0=(Token)match(input,92,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              newLeafNode(lv_operator_2_0, grammarAccess.getPowerExpressionAccess().getOperatorAsteriskAsteriskKeyword_1_1_0());
            	          
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getPowerExpressionRule());
            	      	        }
            	             		setWithLastConsumed(current, "operator", lv_operator_2_0, "**");
            	      	    
            	    }

            	    }


            	    }

            	    // InternalIec.g:3777:2: ( (lv_right_3_0= ruleUnaryExpression ) )
            	    // InternalIec.g:3778:1: (lv_right_3_0= ruleUnaryExpression )
            	    {
            	    // InternalIec.g:3778:1: (lv_right_3_0= ruleUnaryExpression )
            	    // InternalIec.g:3779:3: lv_right_3_0= ruleUnaryExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPowerExpressionAccess().getRightUnaryExpressionParserRuleCall_1_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_right_3_0=ruleUnaryExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPowerExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"right",
            	              		lv_right_3_0, 
            	              		"com.bichler.iec.Iec.UnaryExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePowerExpression"


    // $ANTLR start "entryRuleUnaryExpression"
    // InternalIec.g:3803:1: entryRuleUnaryExpression returns [EObject current=null] : iv_ruleUnaryExpression= ruleUnaryExpression EOF ;
    public final EObject entryRuleUnaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryExpression = null;


        try {
            // InternalIec.g:3804:2: (iv_ruleUnaryExpression= ruleUnaryExpression EOF )
            // InternalIec.g:3805:2: iv_ruleUnaryExpression= ruleUnaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryExpression=ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryExpression"


    // $ANTLR start "ruleUnaryExpression"
    // InternalIec.g:3812:1: ruleUnaryExpression returns [EObject current=null] : ( ( () ( ( (lv_operator_1_1= 'NOT' | lv_operator_1_2= '-' ) ) ) ( (lv_expression_2_0= ruleUnaryExpression ) ) ) | ( ( rulePrimaryExpression )=>this_PrimaryExpression_3= rulePrimaryExpression ) ) ;
    public final EObject ruleUnaryExpression() throws RecognitionException {
        EObject current = null;

        Token lv_operator_1_1=null;
        Token lv_operator_1_2=null;
        EObject lv_expression_2_0 = null;

        EObject this_PrimaryExpression_3 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:3815:28: ( ( ( () ( ( (lv_operator_1_1= 'NOT' | lv_operator_1_2= '-' ) ) ) ( (lv_expression_2_0= ruleUnaryExpression ) ) ) | ( ( rulePrimaryExpression )=>this_PrimaryExpression_3= rulePrimaryExpression ) ) )
            // InternalIec.g:3816:1: ( ( () ( ( (lv_operator_1_1= 'NOT' | lv_operator_1_2= '-' ) ) ) ( (lv_expression_2_0= ruleUnaryExpression ) ) ) | ( ( rulePrimaryExpression )=>this_PrimaryExpression_3= rulePrimaryExpression ) )
            {
            // InternalIec.g:3816:1: ( ( () ( ( (lv_operator_1_1= 'NOT' | lv_operator_1_2= '-' ) ) ) ( (lv_expression_2_0= ruleUnaryExpression ) ) ) | ( ( rulePrimaryExpression )=>this_PrimaryExpression_3= rulePrimaryExpression ) )
            int alt51=2;
            alt51 = dfa51.predict(input);
            switch (alt51) {
                case 1 :
                    // InternalIec.g:3816:2: ( () ( ( (lv_operator_1_1= 'NOT' | lv_operator_1_2= '-' ) ) ) ( (lv_expression_2_0= ruleUnaryExpression ) ) )
                    {
                    // InternalIec.g:3816:2: ( () ( ( (lv_operator_1_1= 'NOT' | lv_operator_1_2= '-' ) ) ) ( (lv_expression_2_0= ruleUnaryExpression ) ) )
                    // InternalIec.g:3816:3: () ( ( (lv_operator_1_1= 'NOT' | lv_operator_1_2= '-' ) ) ) ( (lv_expression_2_0= ruleUnaryExpression ) )
                    {
                    // InternalIec.g:3816:3: ()
                    // InternalIec.g:3817:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalIec.g:3822:2: ( ( (lv_operator_1_1= 'NOT' | lv_operator_1_2= '-' ) ) )
                    // InternalIec.g:3823:1: ( (lv_operator_1_1= 'NOT' | lv_operator_1_2= '-' ) )
                    {
                    // InternalIec.g:3823:1: ( (lv_operator_1_1= 'NOT' | lv_operator_1_2= '-' ) )
                    // InternalIec.g:3824:1: (lv_operator_1_1= 'NOT' | lv_operator_1_2= '-' )
                    {
                    // InternalIec.g:3824:1: (lv_operator_1_1= 'NOT' | lv_operator_1_2= '-' )
                    int alt50=2;
                    int LA50_0 = input.LA(1);

                    if ( (LA50_0==93) ) {
                        alt50=1;
                    }
                    else if ( (LA50_0==75) ) {
                        alt50=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 50, 0, input);

                        throw nvae;
                    }
                    switch (alt50) {
                        case 1 :
                            // InternalIec.g:3825:3: lv_operator_1_1= 'NOT'
                            {
                            lv_operator_1_1=(Token)match(input,93,FOLLOW_30); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_operator_1_1, grammarAccess.getUnaryExpressionAccess().getOperatorNOTKeyword_0_1_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              	        }
                                     		setWithLastConsumed(current, "operator", lv_operator_1_1, null);
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // InternalIec.g:3837:8: lv_operator_1_2= '-'
                            {
                            lv_operator_1_2=(Token)match(input,75,FOLLOW_30); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_operator_1_2, grammarAccess.getUnaryExpressionAccess().getOperatorHyphenMinusKeyword_0_1_0_1());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              	        }
                                     		setWithLastConsumed(current, "operator", lv_operator_1_2, null);
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalIec.g:3852:2: ( (lv_expression_2_0= ruleUnaryExpression ) )
                    // InternalIec.g:3853:1: (lv_expression_2_0= ruleUnaryExpression )
                    {
                    // InternalIec.g:3853:1: (lv_expression_2_0= ruleUnaryExpression )
                    // InternalIec.g:3854:3: lv_expression_2_0= ruleUnaryExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExpressionUnaryExpressionParserRuleCall_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=ruleUnaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"com.bichler.iec.Iec.UnaryExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIec.g:3871:6: ( ( rulePrimaryExpression )=>this_PrimaryExpression_3= rulePrimaryExpression )
                    {
                    // InternalIec.g:3871:6: ( ( rulePrimaryExpression )=>this_PrimaryExpression_3= rulePrimaryExpression )
                    // InternalIec.g:3871:7: ( rulePrimaryExpression )=>this_PrimaryExpression_3= rulePrimaryExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PrimaryExpression_3=rulePrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_PrimaryExpression_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryExpression"


    // $ANTLR start "entryRulePrimaryExpression"
    // InternalIec.g:3888:1: entryRulePrimaryExpression returns [EObject current=null] : iv_rulePrimaryExpression= rulePrimaryExpression EOF ;
    public final EObject entryRulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpression = null;


        try {
            // InternalIec.g:3889:2: (iv_rulePrimaryExpression= rulePrimaryExpression EOF )
            // InternalIec.g:3890:2: iv_rulePrimaryExpression= rulePrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryExpression=rulePrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryExpression"


    // $ANTLR start "rulePrimaryExpression"
    // InternalIec.g:3897:1: rulePrimaryExpression returns [EObject current=null] : (this_Constant_0= ruleConstant | ( (lv_variable_1_0= ruleVariableAccess ) ) | this_ParenthesesExpression_2= ruleParenthesesExpression | ( ( ( ruleIdentifier ) ) ( (lv_openbr_4_0= '(' ) ) ( (lv_paramassignment_5_0= ruleParamAssignment ) ) (otherlv_6= ',' ( (lv_paramassignment_7_0= ruleParamAssignment ) ) )* ( (lv_closebr_8_0= ')' ) ) ) ) ;
    public final EObject rulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        Token lv_openbr_4_0=null;
        Token otherlv_6=null;
        Token lv_closebr_8_0=null;
        EObject this_Constant_0 = null;

        EObject lv_variable_1_0 = null;

        EObject this_ParenthesesExpression_2 = null;

        EObject lv_paramassignment_5_0 = null;

        EObject lv_paramassignment_7_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:3900:28: ( (this_Constant_0= ruleConstant | ( (lv_variable_1_0= ruleVariableAccess ) ) | this_ParenthesesExpression_2= ruleParenthesesExpression | ( ( ( ruleIdentifier ) ) ( (lv_openbr_4_0= '(' ) ) ( (lv_paramassignment_5_0= ruleParamAssignment ) ) (otherlv_6= ',' ( (lv_paramassignment_7_0= ruleParamAssignment ) ) )* ( (lv_closebr_8_0= ')' ) ) ) ) )
            // InternalIec.g:3901:1: (this_Constant_0= ruleConstant | ( (lv_variable_1_0= ruleVariableAccess ) ) | this_ParenthesesExpression_2= ruleParenthesesExpression | ( ( ( ruleIdentifier ) ) ( (lv_openbr_4_0= '(' ) ) ( (lv_paramassignment_5_0= ruleParamAssignment ) ) (otherlv_6= ',' ( (lv_paramassignment_7_0= ruleParamAssignment ) ) )* ( (lv_closebr_8_0= ')' ) ) ) )
            {
            // InternalIec.g:3901:1: (this_Constant_0= ruleConstant | ( (lv_variable_1_0= ruleVariableAccess ) ) | this_ParenthesesExpression_2= ruleParenthesesExpression | ( ( ( ruleIdentifier ) ) ( (lv_openbr_4_0= '(' ) ) ( (lv_paramassignment_5_0= ruleParamAssignment ) ) (otherlv_6= ',' ( (lv_paramassignment_7_0= ruleParamAssignment ) ) )* ( (lv_closebr_8_0= ')' ) ) ) )
            int alt53=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case RULE_BINT:
            case RULE_OINT:
            case RULE_HINT:
            case RULE_FIXED_POINT:
            case RULE_SINGLE_BYTE_STRING:
            case RULE_DOUBLE_BYTE_STRING:
            case RULE_DIGIT:
            case 33:
            case 34:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 74:
            case 75:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
                {
                alt53=1;
                }
                break;
            case RULE_DIRECT_VARIABLE_ID:
                {
                alt53=2;
                }
                break;
            case RULE_LETTER:
                {
                int LA53_3 = input.LA(2);

                if ( (LA53_3==EOF||LA53_3==RULE_EOL||LA53_3==RULE_FIELD_SELECTOR||LA53_3==68||(LA53_3>=70 && LA53_3<=75)||(LA53_3>=79 && LA53_3<=92)||LA53_3==112) ) {
                    alt53=2;
                }
                else if ( (LA53_3==67) ) {
                    alt53=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA53_4 = input.LA(2);

                if ( (LA53_4==EOF||LA53_4==RULE_EOL||LA53_4==RULE_FIELD_SELECTOR||LA53_4==68||(LA53_4>=70 && LA53_4<=75)||(LA53_4>=79 && LA53_4<=92)||LA53_4==112) ) {
                    alt53=2;
                }
                else if ( (LA53_4==67) ) {
                    alt53=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 4, input);

                    throw nvae;
                }
                }
                break;
            case 67:
                {
                alt53=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }

            switch (alt53) {
                case 1 :
                    // InternalIec.g:3902:5: this_Constant_0= ruleConstant
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstantParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Constant_0=ruleConstant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Constant_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:3911:6: ( (lv_variable_1_0= ruleVariableAccess ) )
                    {
                    // InternalIec.g:3911:6: ( (lv_variable_1_0= ruleVariableAccess ) )
                    // InternalIec.g:3912:1: (lv_variable_1_0= ruleVariableAccess )
                    {
                    // InternalIec.g:3912:1: (lv_variable_1_0= ruleVariableAccess )
                    // InternalIec.g:3913:3: lv_variable_1_0= ruleVariableAccess
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getVariableVariableAccessParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_variable_1_0=ruleVariableAccess();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"variable",
                              		lv_variable_1_0, 
                              		"com.bichler.iec.Iec.VariableAccess");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalIec.g:3931:5: this_ParenthesesExpression_2= ruleParenthesesExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParenthesesExpressionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParenthesesExpression_2=ruleParenthesesExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ParenthesesExpression_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalIec.g:3940:6: ( ( ( ruleIdentifier ) ) ( (lv_openbr_4_0= '(' ) ) ( (lv_paramassignment_5_0= ruleParamAssignment ) ) (otherlv_6= ',' ( (lv_paramassignment_7_0= ruleParamAssignment ) ) )* ( (lv_closebr_8_0= ')' ) ) )
                    {
                    // InternalIec.g:3940:6: ( ( ( ruleIdentifier ) ) ( (lv_openbr_4_0= '(' ) ) ( (lv_paramassignment_5_0= ruleParamAssignment ) ) (otherlv_6= ',' ( (lv_paramassignment_7_0= ruleParamAssignment ) ) )* ( (lv_closebr_8_0= ')' ) ) )
                    // InternalIec.g:3940:7: ( ( ruleIdentifier ) ) ( (lv_openbr_4_0= '(' ) ) ( (lv_paramassignment_5_0= ruleParamAssignment ) ) (otherlv_6= ',' ( (lv_paramassignment_7_0= ruleParamAssignment ) ) )* ( (lv_closebr_8_0= ')' ) )
                    {
                    // InternalIec.g:3940:7: ( ( ruleIdentifier ) )
                    // InternalIec.g:3941:1: ( ruleIdentifier )
                    {
                    // InternalIec.g:3941:1: ( ruleIdentifier )
                    // InternalIec.g:3942:3: ruleIdentifier
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getFbnameFunctionDeclarationCrossReference_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_11);
                    ruleIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalIec.g:3955:2: ( (lv_openbr_4_0= '(' ) )
                    // InternalIec.g:3956:1: (lv_openbr_4_0= '(' )
                    {
                    // InternalIec.g:3956:1: (lv_openbr_4_0= '(' )
                    // InternalIec.g:3957:3: lv_openbr_4_0= '('
                    {
                    lv_openbr_4_0=(Token)match(input,67,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_openbr_4_0, grammarAccess.getPrimaryExpressionAccess().getOpenbrLeftParenthesisKeyword_3_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "openbr", lv_openbr_4_0, "(");
                      	    
                    }

                    }


                    }

                    // InternalIec.g:3970:2: ( (lv_paramassignment_5_0= ruleParamAssignment ) )
                    // InternalIec.g:3971:1: (lv_paramassignment_5_0= ruleParamAssignment )
                    {
                    // InternalIec.g:3971:1: (lv_paramassignment_5_0= ruleParamAssignment )
                    // InternalIec.g:3972:3: lv_paramassignment_5_0= ruleParamAssignment
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParamassignmentParamAssignmentParserRuleCall_3_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_26);
                    lv_paramassignment_5_0=ruleParamAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"paramassignment",
                              		lv_paramassignment_5_0, 
                              		"com.bichler.iec.Iec.ParamAssignment");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalIec.g:3988:2: (otherlv_6= ',' ( (lv_paramassignment_7_0= ruleParamAssignment ) ) )*
                    loop52:
                    do {
                        int alt52=2;
                        int LA52_0 = input.LA(1);

                        if ( (LA52_0==71) ) {
                            alt52=1;
                        }


                        switch (alt52) {
                    	case 1 :
                    	    // InternalIec.g:3988:4: otherlv_6= ',' ( (lv_paramassignment_7_0= ruleParamAssignment ) )
                    	    {
                    	    otherlv_6=(Token)match(input,71,FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_3_3_0());
                    	          
                    	    }
                    	    // InternalIec.g:3992:1: ( (lv_paramassignment_7_0= ruleParamAssignment ) )
                    	    // InternalIec.g:3993:1: (lv_paramassignment_7_0= ruleParamAssignment )
                    	    {
                    	    // InternalIec.g:3993:1: (lv_paramassignment_7_0= ruleParamAssignment )
                    	    // InternalIec.g:3994:3: lv_paramassignment_7_0= ruleParamAssignment
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParamassignmentParamAssignmentParserRuleCall_3_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_26);
                    	    lv_paramassignment_7_0=ruleParamAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"paramassignment",
                    	              		lv_paramassignment_7_0, 
                    	              		"com.bichler.iec.Iec.ParamAssignment");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop52;
                        }
                    } while (true);

                    // InternalIec.g:4010:4: ( (lv_closebr_8_0= ')' ) )
                    // InternalIec.g:4011:1: (lv_closebr_8_0= ')' )
                    {
                    // InternalIec.g:4011:1: (lv_closebr_8_0= ')' )
                    // InternalIec.g:4012:3: lv_closebr_8_0= ')'
                    {
                    lv_closebr_8_0=(Token)match(input,68,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_closebr_8_0, grammarAccess.getPrimaryExpressionAccess().getClosebrRightParenthesisKeyword_3_4_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "closebr", lv_closebr_8_0, ")");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryExpression"


    // $ANTLR start "entryRuleParenthesesExpression"
    // InternalIec.g:4033:1: entryRuleParenthesesExpression returns [EObject current=null] : iv_ruleParenthesesExpression= ruleParenthesesExpression EOF ;
    public final EObject entryRuleParenthesesExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParenthesesExpression = null;


        try {
            // InternalIec.g:4034:2: (iv_ruleParenthesesExpression= ruleParenthesesExpression EOF )
            // InternalIec.g:4035:2: iv_ruleParenthesesExpression= ruleParenthesesExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParenthesesExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParenthesesExpression=ruleParenthesesExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParenthesesExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParenthesesExpression"


    // $ANTLR start "ruleParenthesesExpression"
    // InternalIec.g:4042:1: ruleParenthesesExpression returns [EObject current=null] : ( ( (lv_openbr_0_0= '(' ) ) ( (lv_expression_1_0= ruleExpression ) ) ( (lv_closebr_2_0= ')' ) ) ) ;
    public final EObject ruleParenthesesExpression() throws RecognitionException {
        EObject current = null;

        Token lv_openbr_0_0=null;
        Token lv_closebr_2_0=null;
        EObject lv_expression_1_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:4045:28: ( ( ( (lv_openbr_0_0= '(' ) ) ( (lv_expression_1_0= ruleExpression ) ) ( (lv_closebr_2_0= ')' ) ) ) )
            // InternalIec.g:4046:1: ( ( (lv_openbr_0_0= '(' ) ) ( (lv_expression_1_0= ruleExpression ) ) ( (lv_closebr_2_0= ')' ) ) )
            {
            // InternalIec.g:4046:1: ( ( (lv_openbr_0_0= '(' ) ) ( (lv_expression_1_0= ruleExpression ) ) ( (lv_closebr_2_0= ')' ) ) )
            // InternalIec.g:4046:2: ( (lv_openbr_0_0= '(' ) ) ( (lv_expression_1_0= ruleExpression ) ) ( (lv_closebr_2_0= ')' ) )
            {
            // InternalIec.g:4046:2: ( (lv_openbr_0_0= '(' ) )
            // InternalIec.g:4047:1: (lv_openbr_0_0= '(' )
            {
            // InternalIec.g:4047:1: (lv_openbr_0_0= '(' )
            // InternalIec.g:4048:3: lv_openbr_0_0= '('
            {
            lv_openbr_0_0=(Token)match(input,67,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_openbr_0_0, grammarAccess.getParenthesesExpressionAccess().getOpenbrLeftParenthesisKeyword_0_0());
                  
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getParenthesesExpressionRule());
              	        }
                     		setWithLastConsumed(current, "openbr", lv_openbr_0_0, "(");
              	    
            }

            }


            }

            // InternalIec.g:4061:2: ( (lv_expression_1_0= ruleExpression ) )
            // InternalIec.g:4062:1: (lv_expression_1_0= ruleExpression )
            {
            // InternalIec.g:4062:1: (lv_expression_1_0= ruleExpression )
            // InternalIec.g:4063:3: lv_expression_1_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParenthesesExpressionAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_13);
            lv_expression_1_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParenthesesExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"com.bichler.iec.Iec.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:4079:2: ( (lv_closebr_2_0= ')' ) )
            // InternalIec.g:4080:1: (lv_closebr_2_0= ')' )
            {
            // InternalIec.g:4080:1: (lv_closebr_2_0= ')' )
            // InternalIec.g:4081:3: lv_closebr_2_0= ')'
            {
            lv_closebr_2_0=(Token)match(input,68,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_closebr_2_0, grammarAccess.getParenthesesExpressionAccess().getClosebrRightParenthesisKeyword_2_0());
                  
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getParenthesesExpressionRule());
              	        }
                     		setWithLastConsumed(current, "closebr", lv_closebr_2_0, ")");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParenthesesExpression"


    // $ANTLR start "entryRuleParamAssignment"
    // InternalIec.g:4102:1: entryRuleParamAssignment returns [EObject current=null] : iv_ruleParamAssignment= ruleParamAssignment EOF ;
    public final EObject entryRuleParamAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParamAssignment = null;


        try {
            // InternalIec.g:4103:2: (iv_ruleParamAssignment= ruleParamAssignment EOF )
            // InternalIec.g:4104:2: iv_ruleParamAssignment= ruleParamAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParamAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParamAssignment=ruleParamAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParamAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParamAssignment"


    // $ANTLR start "ruleParamAssignment"
    // InternalIec.g:4111:1: ruleParamAssignment returns [EObject current=null] : ( ( ( ( ( ruleIdentifier ) ) otherlv_1= ':=' )? ( (lv_expression_2_0= ruleExpression ) ) ) | ( ( (lv_not_3_0= 'NOT' ) )? ( ( ruleIdentifier ) ) otherlv_5= ':>' ( ( ruleIdentifier ) ) ) ) ;
    public final EObject ruleParamAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_not_3_0=null;
        Token otherlv_5=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:4114:28: ( ( ( ( ( ( ruleIdentifier ) ) otherlv_1= ':=' )? ( (lv_expression_2_0= ruleExpression ) ) ) | ( ( (lv_not_3_0= 'NOT' ) )? ( ( ruleIdentifier ) ) otherlv_5= ':>' ( ( ruleIdentifier ) ) ) ) )
            // InternalIec.g:4115:1: ( ( ( ( ( ruleIdentifier ) ) otherlv_1= ':=' )? ( (lv_expression_2_0= ruleExpression ) ) ) | ( ( (lv_not_3_0= 'NOT' ) )? ( ( ruleIdentifier ) ) otherlv_5= ':>' ( ( ruleIdentifier ) ) ) )
            {
            // InternalIec.g:4115:1: ( ( ( ( ( ruleIdentifier ) ) otherlv_1= ':=' )? ( (lv_expression_2_0= ruleExpression ) ) ) | ( ( (lv_not_3_0= 'NOT' ) )? ( ( ruleIdentifier ) ) otherlv_5= ':>' ( ( ruleIdentifier ) ) ) )
            int alt56=2;
            switch ( input.LA(1) ) {
            case RULE_LETTER:
                {
                int LA56_1 = input.LA(2);

                if ( (LA56_1==EOF||LA56_1==RULE_FIELD_SELECTOR||(LA56_1>=66 && LA56_1<=68)||(LA56_1>=70 && LA56_1<=71)||(LA56_1>=74 && LA56_1<=75)||(LA56_1>=79 && LA56_1<=92)) ) {
                    alt56=1;
                }
                else if ( (LA56_1==94) ) {
                    alt56=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA56_2 = input.LA(2);

                if ( (LA56_2==EOF||LA56_2==RULE_FIELD_SELECTOR||(LA56_2>=66 && LA56_2<=68)||(LA56_2>=70 && LA56_2<=71)||(LA56_2>=74 && LA56_2<=75)||(LA56_2>=79 && LA56_2<=92)) ) {
                    alt56=1;
                }
                else if ( (LA56_2==94) ) {
                    alt56=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 2, input);

                    throw nvae;
                }
                }
                break;
            case 93:
                {
                switch ( input.LA(2) ) {
                case RULE_LETTER:
                    {
                    int LA56_6 = input.LA(3);

                    if ( (LA56_6==EOF||LA56_6==RULE_FIELD_SELECTOR||(LA56_6>=67 && LA56_6<=68)||(LA56_6>=70 && LA56_6<=71)||(LA56_6>=74 && LA56_6<=75)||(LA56_6>=79 && LA56_6<=92)) ) {
                        alt56=1;
                    }
                    else if ( (LA56_6==94) ) {
                        alt56=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 56, 6, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_ID:
                    {
                    int LA56_7 = input.LA(3);

                    if ( (LA56_7==EOF||LA56_7==RULE_FIELD_SELECTOR||(LA56_7>=67 && LA56_7<=68)||(LA56_7>=70 && LA56_7<=71)||(LA56_7>=74 && LA56_7<=75)||(LA56_7>=79 && LA56_7<=92)) ) {
                        alt56=1;
                    }
                    else if ( (LA56_7==94) ) {
                        alt56=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 56, 7, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_DIRECT_VARIABLE_ID:
                case RULE_INT:
                case RULE_BINT:
                case RULE_OINT:
                case RULE_HINT:
                case RULE_FIXED_POINT:
                case RULE_SINGLE_BYTE_STRING:
                case RULE_DOUBLE_BYTE_STRING:
                case RULE_DIGIT:
                case 33:
                case 34:
                case 35:
                case 36:
                case 37:
                case 38:
                case 39:
                case 40:
                case 41:
                case 42:
                case 67:
                case 74:
                case 75:
                case 93:
                case 141:
                case 142:
                case 143:
                case 144:
                case 145:
                case 146:
                case 147:
                case 148:
                case 149:
                case 150:
                case 151:
                case 152:
                case 153:
                case 154:
                case 155:
                case 156:
                    {
                    alt56=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 3, input);

                    throw nvae;
                }

                }
                break;
            case RULE_DIRECT_VARIABLE_ID:
            case RULE_INT:
            case RULE_BINT:
            case RULE_OINT:
            case RULE_HINT:
            case RULE_FIXED_POINT:
            case RULE_SINGLE_BYTE_STRING:
            case RULE_DOUBLE_BYTE_STRING:
            case RULE_DIGIT:
            case 33:
            case 34:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 67:
            case 74:
            case 75:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
                {
                alt56=1;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }

            switch (alt56) {
                case 1 :
                    // InternalIec.g:4115:2: ( ( ( ( ruleIdentifier ) ) otherlv_1= ':=' )? ( (lv_expression_2_0= ruleExpression ) ) )
                    {
                    // InternalIec.g:4115:2: ( ( ( ( ruleIdentifier ) ) otherlv_1= ':=' )? ( (lv_expression_2_0= ruleExpression ) ) )
                    // InternalIec.g:4115:3: ( ( ( ruleIdentifier ) ) otherlv_1= ':=' )? ( (lv_expression_2_0= ruleExpression ) )
                    {
                    // InternalIec.g:4115:3: ( ( ( ruleIdentifier ) ) otherlv_1= ':=' )?
                    int alt54=2;
                    int LA54_0 = input.LA(1);

                    if ( (LA54_0==RULE_LETTER) ) {
                        int LA54_1 = input.LA(2);

                        if ( (LA54_1==66) ) {
                            alt54=1;
                        }
                    }
                    else if ( (LA54_0==RULE_ID) ) {
                        int LA54_2 = input.LA(2);

                        if ( (LA54_2==66) ) {
                            alt54=1;
                        }
                    }
                    switch (alt54) {
                        case 1 :
                            // InternalIec.g:4115:4: ( ( ruleIdentifier ) ) otherlv_1= ':='
                            {
                            // InternalIec.g:4115:4: ( ( ruleIdentifier ) )
                            // InternalIec.g:4116:1: ( ruleIdentifier )
                            {
                            // InternalIec.g:4116:1: ( ruleIdentifier )
                            // InternalIec.g:4117:3: ruleIdentifier
                            {
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getParamAssignmentRule());
                              	        }
                                      
                            }
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getParamAssignmentAccess().getVariablenameNamedVariableAccessCrossReference_0_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_25);
                            ruleIdentifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            otherlv_1=(Token)match(input,66,FOLLOW_30); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_1, grammarAccess.getParamAssignmentAccess().getColonEqualsSignKeyword_0_0_1());
                                  
                            }

                            }
                            break;

                    }

                    // InternalIec.g:4134:3: ( (lv_expression_2_0= ruleExpression ) )
                    // InternalIec.g:4135:1: (lv_expression_2_0= ruleExpression )
                    {
                    // InternalIec.g:4135:1: (lv_expression_2_0= ruleExpression )
                    // InternalIec.g:4136:3: lv_expression_2_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getParamAssignmentAccess().getExpressionExpressionParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getParamAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"com.bichler.iec.Iec.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIec.g:4153:6: ( ( (lv_not_3_0= 'NOT' ) )? ( ( ruleIdentifier ) ) otherlv_5= ':>' ( ( ruleIdentifier ) ) )
                    {
                    // InternalIec.g:4153:6: ( ( (lv_not_3_0= 'NOT' ) )? ( ( ruleIdentifier ) ) otherlv_5= ':>' ( ( ruleIdentifier ) ) )
                    // InternalIec.g:4153:7: ( (lv_not_3_0= 'NOT' ) )? ( ( ruleIdentifier ) ) otherlv_5= ':>' ( ( ruleIdentifier ) )
                    {
                    // InternalIec.g:4153:7: ( (lv_not_3_0= 'NOT' ) )?
                    int alt55=2;
                    int LA55_0 = input.LA(1);

                    if ( (LA55_0==93) ) {
                        alt55=1;
                    }
                    switch (alt55) {
                        case 1 :
                            // InternalIec.g:4154:1: (lv_not_3_0= 'NOT' )
                            {
                            // InternalIec.g:4154:1: (lv_not_3_0= 'NOT' )
                            // InternalIec.g:4155:3: lv_not_3_0= 'NOT'
                            {
                            lv_not_3_0=(Token)match(input,93,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_not_3_0, grammarAccess.getParamAssignmentAccess().getNotNOTKeyword_1_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getParamAssignmentRule());
                              	        }
                                     		setWithLastConsumed(current, "not", true, "NOT");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalIec.g:4168:3: ( ( ruleIdentifier ) )
                    // InternalIec.g:4169:1: ( ruleIdentifier )
                    {
                    // InternalIec.g:4169:1: ( ruleIdentifier )
                    // InternalIec.g:4170:3: ruleIdentifier
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getParamAssignmentRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getParamAssignmentAccess().getVariable1NamedVariableAccessCrossReference_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_39);
                    ruleIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,94,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getParamAssignmentAccess().getColonGreaterThanSignKeyword_1_2());
                          
                    }
                    // InternalIec.g:4187:1: ( ( ruleIdentifier ) )
                    // InternalIec.g:4188:1: ( ruleIdentifier )
                    {
                    // InternalIec.g:4188:1: ( ruleIdentifier )
                    // InternalIec.g:4189:3: ruleIdentifier
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getParamAssignmentRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getParamAssignmentAccess().getVariable2VariableCrossReference_1_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    ruleIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParamAssignment"


    // $ANTLR start "entryRuleFunctionDeclaration"
    // InternalIec.g:4210:1: entryRuleFunctionDeclaration returns [EObject current=null] : iv_ruleFunctionDeclaration= ruleFunctionDeclaration EOF ;
    public final EObject entryRuleFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionDeclaration = null;


        try {
            // InternalIec.g:4211:2: (iv_ruleFunctionDeclaration= ruleFunctionDeclaration EOF )
            // InternalIec.g:4212:2: iv_ruleFunctionDeclaration= ruleFunctionDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionDeclaration=ruleFunctionDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionDeclaration"


    // $ANTLR start "ruleFunctionDeclaration"
    // InternalIec.g:4219:1: ruleFunctionDeclaration returns [EObject current=null] : (otherlv_0= 'FUNCTION' ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' ( (lv_type_3_0= ruleNonGenericType ) ) ( (lv_ioVarDeclarations_4_0= ruleIoVarDeclarations ) )* ( (lv_body_5_0= ruleFunctionBody ) )? otherlv_6= 'END_FUNCTION' ) ;
    public final EObject ruleFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_ioVarDeclarations_4_0 = null;

        EObject lv_body_5_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:4222:28: ( (otherlv_0= 'FUNCTION' ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' ( (lv_type_3_0= ruleNonGenericType ) ) ( (lv_ioVarDeclarations_4_0= ruleIoVarDeclarations ) )* ( (lv_body_5_0= ruleFunctionBody ) )? otherlv_6= 'END_FUNCTION' ) )
            // InternalIec.g:4223:1: (otherlv_0= 'FUNCTION' ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' ( (lv_type_3_0= ruleNonGenericType ) ) ( (lv_ioVarDeclarations_4_0= ruleIoVarDeclarations ) )* ( (lv_body_5_0= ruleFunctionBody ) )? otherlv_6= 'END_FUNCTION' )
            {
            // InternalIec.g:4223:1: (otherlv_0= 'FUNCTION' ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' ( (lv_type_3_0= ruleNonGenericType ) ) ( (lv_ioVarDeclarations_4_0= ruleIoVarDeclarations ) )* ( (lv_body_5_0= ruleFunctionBody ) )? otherlv_6= 'END_FUNCTION' )
            // InternalIec.g:4223:3: otherlv_0= 'FUNCTION' ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' ( (lv_type_3_0= ruleNonGenericType ) ) ( (lv_ioVarDeclarations_4_0= ruleIoVarDeclarations ) )* ( (lv_body_5_0= ruleFunctionBody ) )? otherlv_6= 'END_FUNCTION'
            {
            otherlv_0=(Token)match(input,95,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getFunctionDeclarationAccess().getFUNCTIONKeyword_0());
                  
            }
            // InternalIec.g:4227:1: ( (lv_name_1_0= ruleIdentifier ) )
            // InternalIec.g:4228:1: (lv_name_1_0= ruleIdentifier )
            {
            // InternalIec.g:4228:1: (lv_name_1_0= ruleIdentifier )
            // InternalIec.g:4229:3: lv_name_1_0= ruleIdentifier
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_5);
            lv_name_1_0=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFunctionDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"com.bichler.iec.Iec.Identifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,64,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getFunctionDeclarationAccess().getColonKeyword_2());
                  
            }
            // InternalIec.g:4249:1: ( (lv_type_3_0= ruleNonGenericType ) )
            // InternalIec.g:4250:1: (lv_type_3_0= ruleNonGenericType )
            {
            // InternalIec.g:4250:1: (lv_type_3_0= ruleNonGenericType )
            // InternalIec.g:4251:3: lv_type_3_0= ruleNonGenericType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getTypeNonGenericTypeParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_40);
            lv_type_3_0=ruleNonGenericType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFunctionDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_3_0, 
                      		"com.bichler.iec.Iec.NonGenericType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:4267:2: ( (lv_ioVarDeclarations_4_0= ruleIoVarDeclarations ) )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==97||(LA57_0>=103 && LA57_0<=104)) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalIec.g:4268:1: (lv_ioVarDeclarations_4_0= ruleIoVarDeclarations )
            	    {
            	    // InternalIec.g:4268:1: (lv_ioVarDeclarations_4_0= ruleIoVarDeclarations )
            	    // InternalIec.g:4269:3: lv_ioVarDeclarations_4_0= ruleIoVarDeclarations
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getIoVarDeclarationsIoVarDeclarationsParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_40);
            	    lv_ioVarDeclarations_4_0=ruleIoVarDeclarations();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getFunctionDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"ioVarDeclarations",
            	              		lv_ioVarDeclarations_4_0, 
            	              		"com.bichler.iec.Iec.IoVarDeclarations");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            // InternalIec.g:4285:3: ( (lv_body_5_0= ruleFunctionBody ) )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( ((LA58_0>=RULE_LETTER && LA58_0<=RULE_ID)||(LA58_0>=81 && LA58_0<=82)||(LA58_0>=105 && LA58_0<=111)||LA58_0==116) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalIec.g:4286:1: (lv_body_5_0= ruleFunctionBody )
                    {
                    // InternalIec.g:4286:1: (lv_body_5_0= ruleFunctionBody )
                    // InternalIec.g:4287:3: lv_body_5_0= ruleFunctionBody
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getBodyFunctionBodyParserRuleCall_5_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_41);
                    lv_body_5_0=ruleFunctionBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_5_0, 
                              		"com.bichler.iec.Iec.FunctionBody");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getFunctionDeclarationAccess().getEND_FUNCTIONKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionDeclaration"


    // $ANTLR start "entryRuleIoVarDeclarations"
    // InternalIec.g:4315:1: entryRuleIoVarDeclarations returns [EObject current=null] : iv_ruleIoVarDeclarations= ruleIoVarDeclarations EOF ;
    public final EObject entryRuleIoVarDeclarations() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIoVarDeclarations = null;


        try {
            // InternalIec.g:4316:2: (iv_ruleIoVarDeclarations= ruleIoVarDeclarations EOF )
            // InternalIec.g:4317:2: iv_ruleIoVarDeclarations= ruleIoVarDeclarations EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIoVarDeclarationsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIoVarDeclarations=ruleIoVarDeclarations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIoVarDeclarations; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIoVarDeclarations"


    // $ANTLR start "ruleIoVarDeclarations"
    // InternalIec.g:4324:1: ruleIoVarDeclarations returns [EObject current=null] : (this_InputDeclarations_0= ruleInputDeclarations | this_OutputDeclarations_1= ruleOutputDeclarations | this_InputOutputDeclarations_2= ruleInputOutputDeclarations ) ;
    public final EObject ruleIoVarDeclarations() throws RecognitionException {
        EObject current = null;

        EObject this_InputDeclarations_0 = null;

        EObject this_OutputDeclarations_1 = null;

        EObject this_InputOutputDeclarations_2 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:4327:28: ( (this_InputDeclarations_0= ruleInputDeclarations | this_OutputDeclarations_1= ruleOutputDeclarations | this_InputOutputDeclarations_2= ruleInputOutputDeclarations ) )
            // InternalIec.g:4328:1: (this_InputDeclarations_0= ruleInputDeclarations | this_OutputDeclarations_1= ruleOutputDeclarations | this_InputOutputDeclarations_2= ruleInputOutputDeclarations )
            {
            // InternalIec.g:4328:1: (this_InputDeclarations_0= ruleInputDeclarations | this_OutputDeclarations_1= ruleOutputDeclarations | this_InputOutputDeclarations_2= ruleInputOutputDeclarations )
            int alt59=3;
            switch ( input.LA(1) ) {
            case 97:
                {
                alt59=1;
                }
                break;
            case 103:
                {
                alt59=2;
                }
                break;
            case 104:
                {
                alt59=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;
            }

            switch (alt59) {
                case 1 :
                    // InternalIec.g:4329:5: this_InputDeclarations_0= ruleInputDeclarations
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIoVarDeclarationsAccess().getInputDeclarationsParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_InputDeclarations_0=ruleInputDeclarations();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_InputDeclarations_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:4339:5: this_OutputDeclarations_1= ruleOutputDeclarations
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIoVarDeclarationsAccess().getOutputDeclarationsParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_OutputDeclarations_1=ruleOutputDeclarations();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_OutputDeclarations_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIec.g:4349:5: this_InputOutputDeclarations_2= ruleInputOutputDeclarations
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIoVarDeclarationsAccess().getInputOutputDeclarationsParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_InputOutputDeclarations_2=ruleInputOutputDeclarations();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_InputOutputDeclarations_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIoVarDeclarations"


    // $ANTLR start "entryRuleInputDeclarations"
    // InternalIec.g:4365:1: entryRuleInputDeclarations returns [EObject current=null] : iv_ruleInputDeclarations= ruleInputDeclarations EOF ;
    public final EObject entryRuleInputDeclarations() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInputDeclarations = null;


        try {
            // InternalIec.g:4366:2: (iv_ruleInputDeclarations= ruleInputDeclarations EOF )
            // InternalIec.g:4367:2: iv_ruleInputDeclarations= ruleInputDeclarations EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInputDeclarationsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInputDeclarations=ruleInputDeclarations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInputDeclarations; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInputDeclarations"


    // $ANTLR start "ruleInputDeclarations"
    // InternalIec.g:4374:1: ruleInputDeclarations returns [EObject current=null] : (otherlv_0= 'VAR_INPUT' (otherlv_1= 'RETAIN' | otherlv_2= 'NON_RETAIN' )? ( (lv_declarations_3_0= ruleInputDeclaration ) ) this_EOL_4= RULE_EOL ( ( (lv_declarations_5_0= ruleInputDeclaration ) ) this_EOL_6= RULE_EOL )* otherlv_7= 'END_VAR' ) ;
    public final EObject ruleInputDeclarations() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token this_EOL_4=null;
        Token this_EOL_6=null;
        Token otherlv_7=null;
        EObject lv_declarations_3_0 = null;

        EObject lv_declarations_5_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:4377:28: ( (otherlv_0= 'VAR_INPUT' (otherlv_1= 'RETAIN' | otherlv_2= 'NON_RETAIN' )? ( (lv_declarations_3_0= ruleInputDeclaration ) ) this_EOL_4= RULE_EOL ( ( (lv_declarations_5_0= ruleInputDeclaration ) ) this_EOL_6= RULE_EOL )* otherlv_7= 'END_VAR' ) )
            // InternalIec.g:4378:1: (otherlv_0= 'VAR_INPUT' (otherlv_1= 'RETAIN' | otherlv_2= 'NON_RETAIN' )? ( (lv_declarations_3_0= ruleInputDeclaration ) ) this_EOL_4= RULE_EOL ( ( (lv_declarations_5_0= ruleInputDeclaration ) ) this_EOL_6= RULE_EOL )* otherlv_7= 'END_VAR' )
            {
            // InternalIec.g:4378:1: (otherlv_0= 'VAR_INPUT' (otherlv_1= 'RETAIN' | otherlv_2= 'NON_RETAIN' )? ( (lv_declarations_3_0= ruleInputDeclaration ) ) this_EOL_4= RULE_EOL ( ( (lv_declarations_5_0= ruleInputDeclaration ) ) this_EOL_6= RULE_EOL )* otherlv_7= 'END_VAR' )
            // InternalIec.g:4378:3: otherlv_0= 'VAR_INPUT' (otherlv_1= 'RETAIN' | otherlv_2= 'NON_RETAIN' )? ( (lv_declarations_3_0= ruleInputDeclaration ) ) this_EOL_4= RULE_EOL ( ( (lv_declarations_5_0= ruleInputDeclaration ) ) this_EOL_6= RULE_EOL )* otherlv_7= 'END_VAR'
            {
            otherlv_0=(Token)match(input,97,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getInputDeclarationsAccess().getVAR_INPUTKeyword_0());
                  
            }
            // InternalIec.g:4382:1: (otherlv_1= 'RETAIN' | otherlv_2= 'NON_RETAIN' )?
            int alt60=3;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==98) ) {
                alt60=1;
            }
            else if ( (LA60_0==99) ) {
                alt60=2;
            }
            switch (alt60) {
                case 1 :
                    // InternalIec.g:4382:3: otherlv_1= 'RETAIN'
                    {
                    otherlv_1=(Token)match(input,98,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getInputDeclarationsAccess().getRETAINKeyword_1_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:4387:7: otherlv_2= 'NON_RETAIN'
                    {
                    otherlv_2=(Token)match(input,99,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getInputDeclarationsAccess().getNON_RETAINKeyword_1_1());
                          
                    }

                    }
                    break;

            }

            // InternalIec.g:4391:3: ( (lv_declarations_3_0= ruleInputDeclaration ) )
            // InternalIec.g:4392:1: (lv_declarations_3_0= ruleInputDeclaration )
            {
            // InternalIec.g:4392:1: (lv_declarations_3_0= ruleInputDeclaration )
            // InternalIec.g:4393:3: lv_declarations_3_0= ruleInputDeclaration
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getInputDeclarationsAccess().getDeclarationsInputDeclarationParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_declarations_3_0=ruleInputDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getInputDeclarationsRule());
              	        }
                     		add(
                     			current, 
                     			"declarations",
                      		lv_declarations_3_0, 
                      		"com.bichler.iec.Iec.InputDeclaration");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            this_EOL_4=(Token)match(input,RULE_EOL,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_EOL_4, grammarAccess.getInputDeclarationsAccess().getEOLTerminalRuleCall_3()); 
                  
            }
            // InternalIec.g:4413:1: ( ( (lv_declarations_5_0= ruleInputDeclaration ) ) this_EOL_6= RULE_EOL )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( ((LA61_0>=RULE_LETTER && LA61_0<=RULE_ID)) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalIec.g:4413:2: ( (lv_declarations_5_0= ruleInputDeclaration ) ) this_EOL_6= RULE_EOL
            	    {
            	    // InternalIec.g:4413:2: ( (lv_declarations_5_0= ruleInputDeclaration ) )
            	    // InternalIec.g:4414:1: (lv_declarations_5_0= ruleInputDeclaration )
            	    {
            	    // InternalIec.g:4414:1: (lv_declarations_5_0= ruleInputDeclaration )
            	    // InternalIec.g:4415:3: lv_declarations_5_0= ruleInputDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getInputDeclarationsAccess().getDeclarationsInputDeclarationParserRuleCall_4_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_declarations_5_0=ruleInputDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getInputDeclarationsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declarations",
            	              		lv_declarations_5_0, 
            	              		"com.bichler.iec.Iec.InputDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    this_EOL_6=(Token)match(input,RULE_EOL,FOLLOW_43); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_EOL_6, grammarAccess.getInputDeclarationsAccess().getEOLTerminalRuleCall_4_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            otherlv_7=(Token)match(input,100,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getInputDeclarationsAccess().getEND_VARKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInputDeclarations"


    // $ANTLR start "entryRuleInputDeclaration"
    // InternalIec.g:4447:1: entryRuleInputDeclaration returns [EObject current=null] : iv_ruleInputDeclaration= ruleInputDeclaration EOF ;
    public final EObject entryRuleInputDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInputDeclaration = null;


        try {
            // InternalIec.g:4448:2: (iv_ruleInputDeclaration= ruleInputDeclaration EOF )
            // InternalIec.g:4449:2: iv_ruleInputDeclaration= ruleInputDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInputDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInputDeclaration=ruleInputDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInputDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInputDeclaration"


    // $ANTLR start "ruleInputDeclaration"
    // InternalIec.g:4456:1: ruleInputDeclaration returns [EObject current=null] : ( ( (lv_var1List_0_0= ruleVar1List ) ) otherlv_1= ':' ( (lv_declSpecification_2_0= ruleDeclSpecification ) ) ) ;
    public final EObject ruleInputDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_var1List_0_0 = null;

        EObject lv_declSpecification_2_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:4459:28: ( ( ( (lv_var1List_0_0= ruleVar1List ) ) otherlv_1= ':' ( (lv_declSpecification_2_0= ruleDeclSpecification ) ) ) )
            // InternalIec.g:4460:1: ( ( (lv_var1List_0_0= ruleVar1List ) ) otherlv_1= ':' ( (lv_declSpecification_2_0= ruleDeclSpecification ) ) )
            {
            // InternalIec.g:4460:1: ( ( (lv_var1List_0_0= ruleVar1List ) ) otherlv_1= ':' ( (lv_declSpecification_2_0= ruleDeclSpecification ) ) )
            // InternalIec.g:4460:2: ( (lv_var1List_0_0= ruleVar1List ) ) otherlv_1= ':' ( (lv_declSpecification_2_0= ruleDeclSpecification ) )
            {
            // InternalIec.g:4460:2: ( (lv_var1List_0_0= ruleVar1List ) )
            // InternalIec.g:4461:1: (lv_var1List_0_0= ruleVar1List )
            {
            // InternalIec.g:4461:1: (lv_var1List_0_0= ruleVar1List )
            // InternalIec.g:4462:3: lv_var1List_0_0= ruleVar1List
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getInputDeclarationAccess().getVar1ListVar1ListParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_5);
            lv_var1List_0_0=ruleVar1List();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getInputDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"var1List",
                      		lv_var1List_0_0, 
                      		"com.bichler.iec.Iec.Var1List");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,64,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getInputDeclarationAccess().getColonKeyword_1());
                  
            }
            // InternalIec.g:4482:1: ( (lv_declSpecification_2_0= ruleDeclSpecification ) )
            // InternalIec.g:4483:1: (lv_declSpecification_2_0= ruleDeclSpecification )
            {
            // InternalIec.g:4483:1: (lv_declSpecification_2_0= ruleDeclSpecification )
            // InternalIec.g:4484:3: lv_declSpecification_2_0= ruleDeclSpecification
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getInputDeclarationAccess().getDeclSpecificationDeclSpecificationParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_declSpecification_2_0=ruleDeclSpecification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getInputDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"declSpecification",
                      		lv_declSpecification_2_0, 
                      		"com.bichler.iec.Iec.DeclSpecification");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInputDeclaration"


    // $ANTLR start "entryRuleDeclSpecification"
    // InternalIec.g:4510:1: entryRuleDeclSpecification returns [EObject current=null] : iv_ruleDeclSpecification= ruleDeclSpecification EOF ;
    public final EObject entryRuleDeclSpecification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclSpecification = null;


        try {
            // InternalIec.g:4511:2: (iv_ruleDeclSpecification= ruleDeclSpecification EOF )
            // InternalIec.g:4512:2: iv_ruleDeclSpecification= ruleDeclSpecification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclSpecificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDeclSpecification=ruleDeclSpecification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclSpecification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclSpecification"


    // $ANTLR start "ruleDeclSpecification"
    // InternalIec.g:4519:1: ruleDeclSpecification returns [EObject current=null] : (this_VarDeclSpecification_0= ruleVarDeclSpecification | this_EdgeDeclSpecification_1= ruleEdgeDeclSpecification ) ;
    public final EObject ruleDeclSpecification() throws RecognitionException {
        EObject current = null;

        EObject this_VarDeclSpecification_0 = null;

        EObject this_EdgeDeclSpecification_1 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:4522:28: ( (this_VarDeclSpecification_0= ruleVarDeclSpecification | this_EdgeDeclSpecification_1= ruleEdgeDeclSpecification ) )
            // InternalIec.g:4523:1: (this_VarDeclSpecification_0= ruleVarDeclSpecification | this_EdgeDeclSpecification_1= ruleEdgeDeclSpecification )
            {
            // InternalIec.g:4523:1: (this_VarDeclSpecification_0= ruleVarDeclSpecification | this_EdgeDeclSpecification_1= ruleEdgeDeclSpecification )
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( ((LA62_0>=RULE_LETTER && LA62_0<=RULE_ID)||(LA62_0>=30 && LA62_0<=47)||(LA62_0>=49 && LA62_0<=52)) ) {
                alt62=1;
            }
            else if ( (LA62_0==48) ) {
                int LA62_2 = input.LA(2);

                if ( (LA62_2==EOF||LA62_2==RULE_EOL||LA62_2==66) ) {
                    alt62=1;
                }
                else if ( ((LA62_2>=101 && LA62_2<=102)) ) {
                    alt62=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 62, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 62, 0, input);

                throw nvae;
            }
            switch (alt62) {
                case 1 :
                    // InternalIec.g:4524:5: this_VarDeclSpecification_0= ruleVarDeclSpecification
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDeclSpecificationAccess().getVarDeclSpecificationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VarDeclSpecification_0=ruleVarDeclSpecification();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_VarDeclSpecification_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:4534:5: this_EdgeDeclSpecification_1= ruleEdgeDeclSpecification
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDeclSpecificationAccess().getEdgeDeclSpecificationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_EdgeDeclSpecification_1=ruleEdgeDeclSpecification();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_EdgeDeclSpecification_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclSpecification"


    // $ANTLR start "entryRuleVarDeclSpecification"
    // InternalIec.g:4550:1: entryRuleVarDeclSpecification returns [EObject current=null] : iv_ruleVarDeclSpecification= ruleVarDeclSpecification EOF ;
    public final EObject entryRuleVarDeclSpecification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVarDeclSpecification = null;


        try {
            // InternalIec.g:4551:2: (iv_ruleVarDeclSpecification= ruleVarDeclSpecification EOF )
            // InternalIec.g:4552:2: iv_ruleVarDeclSpecification= ruleVarDeclSpecification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarDeclSpecificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVarDeclSpecification=ruleVarDeclSpecification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVarDeclSpecification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVarDeclSpecification"


    // $ANTLR start "ruleVarDeclSpecification"
    // InternalIec.g:4559:1: ruleVarDeclSpecification returns [EObject current=null] : ( (lv_specInit_0_0= ruleSpecInit ) ) ;
    public final EObject ruleVarDeclSpecification() throws RecognitionException {
        EObject current = null;

        EObject lv_specInit_0_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:4562:28: ( ( (lv_specInit_0_0= ruleSpecInit ) ) )
            // InternalIec.g:4563:1: ( (lv_specInit_0_0= ruleSpecInit ) )
            {
            // InternalIec.g:4563:1: ( (lv_specInit_0_0= ruleSpecInit ) )
            // InternalIec.g:4564:1: (lv_specInit_0_0= ruleSpecInit )
            {
            // InternalIec.g:4564:1: (lv_specInit_0_0= ruleSpecInit )
            // InternalIec.g:4565:3: lv_specInit_0_0= ruleSpecInit
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVarDeclSpecificationAccess().getSpecInitSpecInitParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_specInit_0_0=ruleSpecInit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVarDeclSpecificationRule());
              	        }
                     		set(
                     			current, 
                     			"specInit",
                      		lv_specInit_0_0, 
                      		"com.bichler.iec.Iec.SpecInit");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVarDeclSpecification"


    // $ANTLR start "entryRuleEdgeDeclSpecification"
    // InternalIec.g:4589:1: entryRuleEdgeDeclSpecification returns [EObject current=null] : iv_ruleEdgeDeclSpecification= ruleEdgeDeclSpecification EOF ;
    public final EObject entryRuleEdgeDeclSpecification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEdgeDeclSpecification = null;


        try {
            // InternalIec.g:4590:2: (iv_ruleEdgeDeclSpecification= ruleEdgeDeclSpecification EOF )
            // InternalIec.g:4591:2: iv_ruleEdgeDeclSpecification= ruleEdgeDeclSpecification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEdgeDeclSpecificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEdgeDeclSpecification=ruleEdgeDeclSpecification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEdgeDeclSpecification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEdgeDeclSpecification"


    // $ANTLR start "ruleEdgeDeclSpecification"
    // InternalIec.g:4598:1: ruleEdgeDeclSpecification returns [EObject current=null] : (otherlv_0= 'BOOL' ( ( (lv_rEdge_1_0= 'R_EDGE' ) ) | ( (lv_fEdge_2_0= 'F_EDGE' ) ) ) ) ;
    public final EObject ruleEdgeDeclSpecification() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_rEdge_1_0=null;
        Token lv_fEdge_2_0=null;

         enterRule(); 
            
        try {
            // InternalIec.g:4601:28: ( (otherlv_0= 'BOOL' ( ( (lv_rEdge_1_0= 'R_EDGE' ) ) | ( (lv_fEdge_2_0= 'F_EDGE' ) ) ) ) )
            // InternalIec.g:4602:1: (otherlv_0= 'BOOL' ( ( (lv_rEdge_1_0= 'R_EDGE' ) ) | ( (lv_fEdge_2_0= 'F_EDGE' ) ) ) )
            {
            // InternalIec.g:4602:1: (otherlv_0= 'BOOL' ( ( (lv_rEdge_1_0= 'R_EDGE' ) ) | ( (lv_fEdge_2_0= 'F_EDGE' ) ) ) )
            // InternalIec.g:4602:3: otherlv_0= 'BOOL' ( ( (lv_rEdge_1_0= 'R_EDGE' ) ) | ( (lv_fEdge_2_0= 'F_EDGE' ) ) )
            {
            otherlv_0=(Token)match(input,48,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getEdgeDeclSpecificationAccess().getBOOLKeyword_0());
                  
            }
            // InternalIec.g:4606:1: ( ( (lv_rEdge_1_0= 'R_EDGE' ) ) | ( (lv_fEdge_2_0= 'F_EDGE' ) ) )
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==101) ) {
                alt63=1;
            }
            else if ( (LA63_0==102) ) {
                alt63=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;
            }
            switch (alt63) {
                case 1 :
                    // InternalIec.g:4606:2: ( (lv_rEdge_1_0= 'R_EDGE' ) )
                    {
                    // InternalIec.g:4606:2: ( (lv_rEdge_1_0= 'R_EDGE' ) )
                    // InternalIec.g:4607:1: (lv_rEdge_1_0= 'R_EDGE' )
                    {
                    // InternalIec.g:4607:1: (lv_rEdge_1_0= 'R_EDGE' )
                    // InternalIec.g:4608:3: lv_rEdge_1_0= 'R_EDGE'
                    {
                    lv_rEdge_1_0=(Token)match(input,101,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_rEdge_1_0, grammarAccess.getEdgeDeclSpecificationAccess().getREdgeR_EDGEKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getEdgeDeclSpecificationRule());
                      	        }
                             		setWithLastConsumed(current, "rEdge", true, "R_EDGE");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIec.g:4622:6: ( (lv_fEdge_2_0= 'F_EDGE' ) )
                    {
                    // InternalIec.g:4622:6: ( (lv_fEdge_2_0= 'F_EDGE' ) )
                    // InternalIec.g:4623:1: (lv_fEdge_2_0= 'F_EDGE' )
                    {
                    // InternalIec.g:4623:1: (lv_fEdge_2_0= 'F_EDGE' )
                    // InternalIec.g:4624:3: lv_fEdge_2_0= 'F_EDGE'
                    {
                    lv_fEdge_2_0=(Token)match(input,102,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_fEdge_2_0, grammarAccess.getEdgeDeclSpecificationAccess().getFEdgeF_EDGEKeyword_1_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getEdgeDeclSpecificationRule());
                      	        }
                             		setWithLastConsumed(current, "fEdge", true, "F_EDGE");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEdgeDeclSpecification"


    // $ANTLR start "entryRuleVar1List"
    // InternalIec.g:4645:1: entryRuleVar1List returns [EObject current=null] : iv_ruleVar1List= ruleVar1List EOF ;
    public final EObject entryRuleVar1List() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVar1List = null;


        try {
            // InternalIec.g:4646:2: (iv_ruleVar1List= ruleVar1List EOF )
            // InternalIec.g:4647:2: iv_ruleVar1List= ruleVar1List EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVar1ListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVar1List=ruleVar1List();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVar1List; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVar1List"


    // $ANTLR start "ruleVar1List"
    // InternalIec.g:4654:1: ruleVar1List returns [EObject current=null] : ( ( (lv_variables_0_0= ruleVariable ) ) (otherlv_1= ',' ( (lv_variables_2_0= ruleVariable ) ) )* ) ;
    public final EObject ruleVar1List() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_variables_0_0 = null;

        EObject lv_variables_2_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:4657:28: ( ( ( (lv_variables_0_0= ruleVariable ) ) (otherlv_1= ',' ( (lv_variables_2_0= ruleVariable ) ) )* ) )
            // InternalIec.g:4658:1: ( ( (lv_variables_0_0= ruleVariable ) ) (otherlv_1= ',' ( (lv_variables_2_0= ruleVariable ) ) )* )
            {
            // InternalIec.g:4658:1: ( ( (lv_variables_0_0= ruleVariable ) ) (otherlv_1= ',' ( (lv_variables_2_0= ruleVariable ) ) )* )
            // InternalIec.g:4658:2: ( (lv_variables_0_0= ruleVariable ) ) (otherlv_1= ',' ( (lv_variables_2_0= ruleVariable ) ) )*
            {
            // InternalIec.g:4658:2: ( (lv_variables_0_0= ruleVariable ) )
            // InternalIec.g:4659:1: (lv_variables_0_0= ruleVariable )
            {
            // InternalIec.g:4659:1: (lv_variables_0_0= ruleVariable )
            // InternalIec.g:4660:3: lv_variables_0_0= ruleVariable
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVar1ListAccess().getVariablesVariableParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_20);
            lv_variables_0_0=ruleVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVar1ListRule());
              	        }
                     		add(
                     			current, 
                     			"variables",
                      		lv_variables_0_0, 
                      		"com.bichler.iec.Iec.Variable");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:4676:2: (otherlv_1= ',' ( (lv_variables_2_0= ruleVariable ) ) )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( (LA64_0==71) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // InternalIec.g:4676:4: otherlv_1= ',' ( (lv_variables_2_0= ruleVariable ) )
            	    {
            	    otherlv_1=(Token)match(input,71,FOLLOW_42); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getVar1ListAccess().getCommaKeyword_1_0());
            	          
            	    }
            	    // InternalIec.g:4680:1: ( (lv_variables_2_0= ruleVariable ) )
            	    // InternalIec.g:4681:1: (lv_variables_2_0= ruleVariable )
            	    {
            	    // InternalIec.g:4681:1: (lv_variables_2_0= ruleVariable )
            	    // InternalIec.g:4682:3: lv_variables_2_0= ruleVariable
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVar1ListAccess().getVariablesVariableParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_20);
            	    lv_variables_2_0=ruleVariable();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVar1ListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"variables",
            	              		lv_variables_2_0, 
            	              		"com.bichler.iec.Iec.Variable");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVar1List"


    // $ANTLR start "entryRuleOutputDeclarations"
    // InternalIec.g:4706:1: entryRuleOutputDeclarations returns [EObject current=null] : iv_ruleOutputDeclarations= ruleOutputDeclarations EOF ;
    public final EObject entryRuleOutputDeclarations() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOutputDeclarations = null;


        try {
            // InternalIec.g:4707:2: (iv_ruleOutputDeclarations= ruleOutputDeclarations EOF )
            // InternalIec.g:4708:2: iv_ruleOutputDeclarations= ruleOutputDeclarations EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOutputDeclarationsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOutputDeclarations=ruleOutputDeclarations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOutputDeclarations; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOutputDeclarations"


    // $ANTLR start "ruleOutputDeclarations"
    // InternalIec.g:4715:1: ruleOutputDeclarations returns [EObject current=null] : (otherlv_0= 'VAR_OUTPUT' (otherlv_1= 'RETAIN' | otherlv_2= 'NON_RETAIN' )? ( (lv_initDecls_3_0= ruleVarInitDecl ) ) this_EOL_4= RULE_EOL ( ( (lv_initDecls_5_0= ruleVarInitDecl ) ) this_EOL_6= RULE_EOL )* otherlv_7= 'END_VAR' ) ;
    public final EObject ruleOutputDeclarations() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token this_EOL_4=null;
        Token this_EOL_6=null;
        Token otherlv_7=null;
        EObject lv_initDecls_3_0 = null;

        EObject lv_initDecls_5_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:4718:28: ( (otherlv_0= 'VAR_OUTPUT' (otherlv_1= 'RETAIN' | otherlv_2= 'NON_RETAIN' )? ( (lv_initDecls_3_0= ruleVarInitDecl ) ) this_EOL_4= RULE_EOL ( ( (lv_initDecls_5_0= ruleVarInitDecl ) ) this_EOL_6= RULE_EOL )* otherlv_7= 'END_VAR' ) )
            // InternalIec.g:4719:1: (otherlv_0= 'VAR_OUTPUT' (otherlv_1= 'RETAIN' | otherlv_2= 'NON_RETAIN' )? ( (lv_initDecls_3_0= ruleVarInitDecl ) ) this_EOL_4= RULE_EOL ( ( (lv_initDecls_5_0= ruleVarInitDecl ) ) this_EOL_6= RULE_EOL )* otherlv_7= 'END_VAR' )
            {
            // InternalIec.g:4719:1: (otherlv_0= 'VAR_OUTPUT' (otherlv_1= 'RETAIN' | otherlv_2= 'NON_RETAIN' )? ( (lv_initDecls_3_0= ruleVarInitDecl ) ) this_EOL_4= RULE_EOL ( ( (lv_initDecls_5_0= ruleVarInitDecl ) ) this_EOL_6= RULE_EOL )* otherlv_7= 'END_VAR' )
            // InternalIec.g:4719:3: otherlv_0= 'VAR_OUTPUT' (otherlv_1= 'RETAIN' | otherlv_2= 'NON_RETAIN' )? ( (lv_initDecls_3_0= ruleVarInitDecl ) ) this_EOL_4= RULE_EOL ( ( (lv_initDecls_5_0= ruleVarInitDecl ) ) this_EOL_6= RULE_EOL )* otherlv_7= 'END_VAR'
            {
            otherlv_0=(Token)match(input,103,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getOutputDeclarationsAccess().getVAR_OUTPUTKeyword_0());
                  
            }
            // InternalIec.g:4723:1: (otherlv_1= 'RETAIN' | otherlv_2= 'NON_RETAIN' )?
            int alt65=3;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==98) ) {
                alt65=1;
            }
            else if ( (LA65_0==99) ) {
                alt65=2;
            }
            switch (alt65) {
                case 1 :
                    // InternalIec.g:4723:3: otherlv_1= 'RETAIN'
                    {
                    otherlv_1=(Token)match(input,98,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getOutputDeclarationsAccess().getRETAINKeyword_1_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:4728:7: otherlv_2= 'NON_RETAIN'
                    {
                    otherlv_2=(Token)match(input,99,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getOutputDeclarationsAccess().getNON_RETAINKeyword_1_1());
                          
                    }

                    }
                    break;

            }

            // InternalIec.g:4732:3: ( (lv_initDecls_3_0= ruleVarInitDecl ) )
            // InternalIec.g:4733:1: (lv_initDecls_3_0= ruleVarInitDecl )
            {
            // InternalIec.g:4733:1: (lv_initDecls_3_0= ruleVarInitDecl )
            // InternalIec.g:4734:3: lv_initDecls_3_0= ruleVarInitDecl
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getOutputDeclarationsAccess().getInitDeclsVarInitDeclParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_initDecls_3_0=ruleVarInitDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getOutputDeclarationsRule());
              	        }
                     		add(
                     			current, 
                     			"initDecls",
                      		lv_initDecls_3_0, 
                      		"com.bichler.iec.Iec.VarInitDecl");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            this_EOL_4=(Token)match(input,RULE_EOL,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_EOL_4, grammarAccess.getOutputDeclarationsAccess().getEOLTerminalRuleCall_3()); 
                  
            }
            // InternalIec.g:4754:1: ( ( (lv_initDecls_5_0= ruleVarInitDecl ) ) this_EOL_6= RULE_EOL )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( ((LA66_0>=RULE_LETTER && LA66_0<=RULE_ID)) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalIec.g:4754:2: ( (lv_initDecls_5_0= ruleVarInitDecl ) ) this_EOL_6= RULE_EOL
            	    {
            	    // InternalIec.g:4754:2: ( (lv_initDecls_5_0= ruleVarInitDecl ) )
            	    // InternalIec.g:4755:1: (lv_initDecls_5_0= ruleVarInitDecl )
            	    {
            	    // InternalIec.g:4755:1: (lv_initDecls_5_0= ruleVarInitDecl )
            	    // InternalIec.g:4756:3: lv_initDecls_5_0= ruleVarInitDecl
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getOutputDeclarationsAccess().getInitDeclsVarInitDeclParserRuleCall_4_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_initDecls_5_0=ruleVarInitDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getOutputDeclarationsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"initDecls",
            	              		lv_initDecls_5_0, 
            	              		"com.bichler.iec.Iec.VarInitDecl");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    this_EOL_6=(Token)match(input,RULE_EOL,FOLLOW_43); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_EOL_6, grammarAccess.getOutputDeclarationsAccess().getEOLTerminalRuleCall_4_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            otherlv_7=(Token)match(input,100,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getOutputDeclarationsAccess().getEND_VARKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOutputDeclarations"


    // $ANTLR start "entryRuleVarInitDecl"
    // InternalIec.g:4788:1: entryRuleVarInitDecl returns [EObject current=null] : iv_ruleVarInitDecl= ruleVarInitDecl EOF ;
    public final EObject entryRuleVarInitDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVarInitDecl = null;


        try {
            // InternalIec.g:4789:2: (iv_ruleVarInitDecl= ruleVarInitDecl EOF )
            // InternalIec.g:4790:2: iv_ruleVarInitDecl= ruleVarInitDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarInitDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVarInitDecl=ruleVarInitDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVarInitDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVarInitDecl"


    // $ANTLR start "ruleVarInitDecl"
    // InternalIec.g:4797:1: ruleVarInitDecl returns [EObject current=null] : ( ( (lv_var1List_0_0= ruleVar1List ) ) otherlv_1= ':' ( (lv_specInit_2_0= ruleSpecInit ) ) ) ;
    public final EObject ruleVarInitDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_var1List_0_0 = null;

        EObject lv_specInit_2_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:4800:28: ( ( ( (lv_var1List_0_0= ruleVar1List ) ) otherlv_1= ':' ( (lv_specInit_2_0= ruleSpecInit ) ) ) )
            // InternalIec.g:4801:1: ( ( (lv_var1List_0_0= ruleVar1List ) ) otherlv_1= ':' ( (lv_specInit_2_0= ruleSpecInit ) ) )
            {
            // InternalIec.g:4801:1: ( ( (lv_var1List_0_0= ruleVar1List ) ) otherlv_1= ':' ( (lv_specInit_2_0= ruleSpecInit ) ) )
            // InternalIec.g:4801:2: ( (lv_var1List_0_0= ruleVar1List ) ) otherlv_1= ':' ( (lv_specInit_2_0= ruleSpecInit ) )
            {
            // InternalIec.g:4801:2: ( (lv_var1List_0_0= ruleVar1List ) )
            // InternalIec.g:4802:1: (lv_var1List_0_0= ruleVar1List )
            {
            // InternalIec.g:4802:1: (lv_var1List_0_0= ruleVar1List )
            // InternalIec.g:4803:3: lv_var1List_0_0= ruleVar1List
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVarInitDeclAccess().getVar1ListVar1ListParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_5);
            lv_var1List_0_0=ruleVar1List();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVarInitDeclRule());
              	        }
                     		set(
                     			current, 
                     			"var1List",
                      		lv_var1List_0_0, 
                      		"com.bichler.iec.Iec.Var1List");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,64,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getVarInitDeclAccess().getColonKeyword_1());
                  
            }
            // InternalIec.g:4823:1: ( (lv_specInit_2_0= ruleSpecInit ) )
            // InternalIec.g:4824:1: (lv_specInit_2_0= ruleSpecInit )
            {
            // InternalIec.g:4824:1: (lv_specInit_2_0= ruleSpecInit )
            // InternalIec.g:4825:3: lv_specInit_2_0= ruleSpecInit
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVarInitDeclAccess().getSpecInitSpecInitParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_specInit_2_0=ruleSpecInit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVarInitDeclRule());
              	        }
                     		set(
                     			current, 
                     			"specInit",
                      		lv_specInit_2_0, 
                      		"com.bichler.iec.Iec.SpecInit");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVarInitDecl"


    // $ANTLR start "entryRuleInputOutputDeclarations"
    // InternalIec.g:4849:1: entryRuleInputOutputDeclarations returns [EObject current=null] : iv_ruleInputOutputDeclarations= ruleInputOutputDeclarations EOF ;
    public final EObject entryRuleInputOutputDeclarations() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInputOutputDeclarations = null;


        try {
            // InternalIec.g:4850:2: (iv_ruleInputOutputDeclarations= ruleInputOutputDeclarations EOF )
            // InternalIec.g:4851:2: iv_ruleInputOutputDeclarations= ruleInputOutputDeclarations EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInputOutputDeclarationsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInputOutputDeclarations=ruleInputOutputDeclarations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInputOutputDeclarations; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInputOutputDeclarations"


    // $ANTLR start "ruleInputOutputDeclarations"
    // InternalIec.g:4858:1: ruleInputOutputDeclarations returns [EObject current=null] : (otherlv_0= 'VAR_IN_OUT' ( (lv_initDecls_1_0= ruleVarInitDecl ) ) this_EOL_2= RULE_EOL ( ( (lv_initDecls_3_0= ruleVarInitDecl ) ) this_EOL_4= RULE_EOL )* otherlv_5= 'END_VAR' ) ;
    public final EObject ruleInputOutputDeclarations() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_EOL_2=null;
        Token this_EOL_4=null;
        Token otherlv_5=null;
        EObject lv_initDecls_1_0 = null;

        EObject lv_initDecls_3_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:4861:28: ( (otherlv_0= 'VAR_IN_OUT' ( (lv_initDecls_1_0= ruleVarInitDecl ) ) this_EOL_2= RULE_EOL ( ( (lv_initDecls_3_0= ruleVarInitDecl ) ) this_EOL_4= RULE_EOL )* otherlv_5= 'END_VAR' ) )
            // InternalIec.g:4862:1: (otherlv_0= 'VAR_IN_OUT' ( (lv_initDecls_1_0= ruleVarInitDecl ) ) this_EOL_2= RULE_EOL ( ( (lv_initDecls_3_0= ruleVarInitDecl ) ) this_EOL_4= RULE_EOL )* otherlv_5= 'END_VAR' )
            {
            // InternalIec.g:4862:1: (otherlv_0= 'VAR_IN_OUT' ( (lv_initDecls_1_0= ruleVarInitDecl ) ) this_EOL_2= RULE_EOL ( ( (lv_initDecls_3_0= ruleVarInitDecl ) ) this_EOL_4= RULE_EOL )* otherlv_5= 'END_VAR' )
            // InternalIec.g:4862:3: otherlv_0= 'VAR_IN_OUT' ( (lv_initDecls_1_0= ruleVarInitDecl ) ) this_EOL_2= RULE_EOL ( ( (lv_initDecls_3_0= ruleVarInitDecl ) ) this_EOL_4= RULE_EOL )* otherlv_5= 'END_VAR'
            {
            otherlv_0=(Token)match(input,104,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getInputOutputDeclarationsAccess().getVAR_IN_OUTKeyword_0());
                  
            }
            // InternalIec.g:4866:1: ( (lv_initDecls_1_0= ruleVarInitDecl ) )
            // InternalIec.g:4867:1: (lv_initDecls_1_0= ruleVarInitDecl )
            {
            // InternalIec.g:4867:1: (lv_initDecls_1_0= ruleVarInitDecl )
            // InternalIec.g:4868:3: lv_initDecls_1_0= ruleVarInitDecl
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getInputOutputDeclarationsAccess().getInitDeclsVarInitDeclParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_initDecls_1_0=ruleVarInitDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getInputOutputDeclarationsRule());
              	        }
                     		add(
                     			current, 
                     			"initDecls",
                      		lv_initDecls_1_0, 
                      		"com.bichler.iec.Iec.VarInitDecl");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            this_EOL_2=(Token)match(input,RULE_EOL,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_EOL_2, grammarAccess.getInputOutputDeclarationsAccess().getEOLTerminalRuleCall_2()); 
                  
            }
            // InternalIec.g:4888:1: ( ( (lv_initDecls_3_0= ruleVarInitDecl ) ) this_EOL_4= RULE_EOL )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( ((LA67_0>=RULE_LETTER && LA67_0<=RULE_ID)) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // InternalIec.g:4888:2: ( (lv_initDecls_3_0= ruleVarInitDecl ) ) this_EOL_4= RULE_EOL
            	    {
            	    // InternalIec.g:4888:2: ( (lv_initDecls_3_0= ruleVarInitDecl ) )
            	    // InternalIec.g:4889:1: (lv_initDecls_3_0= ruleVarInitDecl )
            	    {
            	    // InternalIec.g:4889:1: (lv_initDecls_3_0= ruleVarInitDecl )
            	    // InternalIec.g:4890:3: lv_initDecls_3_0= ruleVarInitDecl
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getInputOutputDeclarationsAccess().getInitDeclsVarInitDeclParserRuleCall_3_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_initDecls_3_0=ruleVarInitDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getInputOutputDeclarationsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"initDecls",
            	              		lv_initDecls_3_0, 
            	              		"com.bichler.iec.Iec.VarInitDecl");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    this_EOL_4=(Token)match(input,RULE_EOL,FOLLOW_43); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_EOL_4, grammarAccess.getInputOutputDeclarationsAccess().getEOLTerminalRuleCall_3_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            otherlv_5=(Token)match(input,100,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getInputOutputDeclarationsAccess().getEND_VARKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInputOutputDeclarations"


    // $ANTLR start "entryRuleFunctionBody"
    // InternalIec.g:4924:1: entryRuleFunctionBody returns [EObject current=null] : iv_ruleFunctionBody= ruleFunctionBody EOF ;
    public final EObject entryRuleFunctionBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionBody = null;


        try {
            // InternalIec.g:4925:2: (iv_ruleFunctionBody= ruleFunctionBody EOF )
            // InternalIec.g:4926:2: iv_ruleFunctionBody= ruleFunctionBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionBody=ruleFunctionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionBody"


    // $ANTLR start "ruleFunctionBody"
    // InternalIec.g:4933:1: ruleFunctionBody returns [EObject current=null] : (this_InstructionList_0= ruleInstructionList | this_StatementList_1= ruleStatementList ) ;
    public final EObject ruleFunctionBody() throws RecognitionException {
        EObject current = null;

        EObject this_InstructionList_0 = null;

        EObject this_StatementList_1 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:4936:28: ( (this_InstructionList_0= ruleInstructionList | this_StatementList_1= ruleStatementList ) )
            // InternalIec.g:4937:1: (this_InstructionList_0= ruleInstructionList | this_StatementList_1= ruleStatementList )
            {
            // InternalIec.g:4937:1: (this_InstructionList_0= ruleInstructionList | this_StatementList_1= ruleStatementList )
            int alt68=2;
            switch ( input.LA(1) ) {
            case RULE_LETTER:
                {
                int LA68_1 = input.LA(2);

                if ( (LA68_1==66) ) {
                    alt68=2;
                }
                else if ( (LA68_1==64) ) {
                    alt68=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 68, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA68_2 = input.LA(2);

                if ( (LA68_2==66) ) {
                    alt68=2;
                }
                else if ( (LA68_2==64) ) {
                    alt68=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 68, 2, input);

                    throw nvae;
                }
                }
                break;
            case 81:
            case 82:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
                {
                alt68=1;
                }
                break;
            case 111:
            case 116:
                {
                alt68=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }

            switch (alt68) {
                case 1 :
                    // InternalIec.g:4938:5: this_InstructionList_0= ruleInstructionList
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionBodyAccess().getInstructionListParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_InstructionList_0=ruleInstructionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_InstructionList_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:4948:5: this_StatementList_1= ruleStatementList
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionBodyAccess().getStatementListParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_StatementList_1=ruleStatementList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StatementList_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionBody"


    // $ANTLR start "entryRuleInstructionList"
    // InternalIec.g:4964:1: entryRuleInstructionList returns [EObject current=null] : iv_ruleInstructionList= ruleInstructionList EOF ;
    public final EObject entryRuleInstructionList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInstructionList = null;


        try {
            // InternalIec.g:4965:2: (iv_ruleInstructionList= ruleInstructionList EOF )
            // InternalIec.g:4966:2: iv_ruleInstructionList= ruleInstructionList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInstructionListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInstructionList=ruleInstructionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInstructionList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInstructionList"


    // $ANTLR start "ruleInstructionList"
    // InternalIec.g:4973:1: ruleInstructionList returns [EObject current=null] : ( ( (lv_instructions_0_0= ruleInstruction ) ) ( (lv_instructions_1_0= ruleInstruction ) )* ) ;
    public final EObject ruleInstructionList() throws RecognitionException {
        EObject current = null;

        EObject lv_instructions_0_0 = null;

        EObject lv_instructions_1_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:4976:28: ( ( ( (lv_instructions_0_0= ruleInstruction ) ) ( (lv_instructions_1_0= ruleInstruction ) )* ) )
            // InternalIec.g:4977:1: ( ( (lv_instructions_0_0= ruleInstruction ) ) ( (lv_instructions_1_0= ruleInstruction ) )* )
            {
            // InternalIec.g:4977:1: ( ( (lv_instructions_0_0= ruleInstruction ) ) ( (lv_instructions_1_0= ruleInstruction ) )* )
            // InternalIec.g:4977:2: ( (lv_instructions_0_0= ruleInstruction ) ) ( (lv_instructions_1_0= ruleInstruction ) )*
            {
            // InternalIec.g:4977:2: ( (lv_instructions_0_0= ruleInstruction ) )
            // InternalIec.g:4978:1: (lv_instructions_0_0= ruleInstruction )
            {
            // InternalIec.g:4978:1: (lv_instructions_0_0= ruleInstruction )
            // InternalIec.g:4979:3: lv_instructions_0_0= ruleInstruction
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getInstructionListAccess().getInstructionsInstructionParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_45);
            lv_instructions_0_0=ruleInstruction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getInstructionListRule());
              	        }
                     		add(
                     			current, 
                     			"instructions",
                      		lv_instructions_0_0, 
                      		"com.bichler.iec.Iec.Instruction");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:4995:2: ( (lv_instructions_1_0= ruleInstruction ) )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( ((LA69_0>=RULE_LETTER && LA69_0<=RULE_ID)||(LA69_0>=81 && LA69_0<=82)||(LA69_0>=105 && LA69_0<=110)) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // InternalIec.g:4996:1: (lv_instructions_1_0= ruleInstruction )
            	    {
            	    // InternalIec.g:4996:1: (lv_instructions_1_0= ruleInstruction )
            	    // InternalIec.g:4997:3: lv_instructions_1_0= ruleInstruction
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getInstructionListAccess().getInstructionsInstructionParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_45);
            	    lv_instructions_1_0=ruleInstruction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getInstructionListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"instructions",
            	              		lv_instructions_1_0, 
            	              		"com.bichler.iec.Iec.Instruction");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInstructionList"


    // $ANTLR start "entryRuleInstruction"
    // InternalIec.g:5021:1: entryRuleInstruction returns [EObject current=null] : iv_ruleInstruction= ruleInstruction EOF ;
    public final EObject entryRuleInstruction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInstruction = null;


        try {
            // InternalIec.g:5022:2: (iv_ruleInstruction= ruleInstruction EOF )
            // InternalIec.g:5023:2: iv_ruleInstruction= ruleInstruction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInstructionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInstruction=ruleInstruction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInstruction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInstruction"


    // $ANTLR start "ruleInstruction"
    // InternalIec.g:5030:1: ruleInstruction returns [EObject current=null] : ( ( ( (lv_label_0_0= ruleLabel ) ) otherlv_1= ':' )? ( (lv_instruction_2_0= ruleOperation ) ) ) ;
    public final EObject ruleInstruction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_label_0_0 = null;

        EObject lv_instruction_2_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:5033:28: ( ( ( ( (lv_label_0_0= ruleLabel ) ) otherlv_1= ':' )? ( (lv_instruction_2_0= ruleOperation ) ) ) )
            // InternalIec.g:5034:1: ( ( ( (lv_label_0_0= ruleLabel ) ) otherlv_1= ':' )? ( (lv_instruction_2_0= ruleOperation ) ) )
            {
            // InternalIec.g:5034:1: ( ( ( (lv_label_0_0= ruleLabel ) ) otherlv_1= ':' )? ( (lv_instruction_2_0= ruleOperation ) ) )
            // InternalIec.g:5034:2: ( ( (lv_label_0_0= ruleLabel ) ) otherlv_1= ':' )? ( (lv_instruction_2_0= ruleOperation ) )
            {
            // InternalIec.g:5034:2: ( ( (lv_label_0_0= ruleLabel ) ) otherlv_1= ':' )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( ((LA70_0>=RULE_LETTER && LA70_0<=RULE_ID)) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalIec.g:5034:3: ( (lv_label_0_0= ruleLabel ) ) otherlv_1= ':'
                    {
                    // InternalIec.g:5034:3: ( (lv_label_0_0= ruleLabel ) )
                    // InternalIec.g:5035:1: (lv_label_0_0= ruleLabel )
                    {
                    // InternalIec.g:5035:1: (lv_label_0_0= ruleLabel )
                    // InternalIec.g:5036:3: lv_label_0_0= ruleLabel
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getInstructionAccess().getLabelLabelParserRuleCall_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_5);
                    lv_label_0_0=ruleLabel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getInstructionRule());
                      	        }
                             		set(
                             			current, 
                             			"label",
                              		lv_label_0_0, 
                              		"com.bichler.iec.Iec.Label");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,64,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getInstructionAccess().getColonKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalIec.g:5056:3: ( (lv_instruction_2_0= ruleOperation ) )
            // InternalIec.g:5057:1: (lv_instruction_2_0= ruleOperation )
            {
            // InternalIec.g:5057:1: (lv_instruction_2_0= ruleOperation )
            // InternalIec.g:5058:3: lv_instruction_2_0= ruleOperation
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getInstructionAccess().getInstructionOperationParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_instruction_2_0=ruleOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getInstructionRule());
              	        }
                     		set(
                     			current, 
                     			"instruction",
                      		lv_instruction_2_0, 
                      		"com.bichler.iec.Iec.Operation");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInstruction"


    // $ANTLR start "entryRuleLabel"
    // InternalIec.g:5082:1: entryRuleLabel returns [EObject current=null] : iv_ruleLabel= ruleLabel EOF ;
    public final EObject entryRuleLabel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLabel = null;


        try {
            // InternalIec.g:5083:2: (iv_ruleLabel= ruleLabel EOF )
            // InternalIec.g:5084:2: iv_ruleLabel= ruleLabel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLabel=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLabel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLabel"


    // $ANTLR start "ruleLabel"
    // InternalIec.g:5091:1: ruleLabel returns [EObject current=null] : ( (lv_name_0_0= ruleIdentifier ) ) ;
    public final EObject ruleLabel() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:5094:28: ( ( (lv_name_0_0= ruleIdentifier ) ) )
            // InternalIec.g:5095:1: ( (lv_name_0_0= ruleIdentifier ) )
            {
            // InternalIec.g:5095:1: ( (lv_name_0_0= ruleIdentifier ) )
            // InternalIec.g:5096:1: (lv_name_0_0= ruleIdentifier )
            {
            // InternalIec.g:5096:1: (lv_name_0_0= ruleIdentifier )
            // InternalIec.g:5097:3: lv_name_0_0= ruleIdentifier
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLabelAccess().getNameIdentifierParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLabelRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"com.bichler.iec.Iec.Identifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLabel"


    // $ANTLR start "entryRuleOperation"
    // InternalIec.g:5121:1: entryRuleOperation returns [EObject current=null] : iv_ruleOperation= ruleOperation EOF ;
    public final EObject entryRuleOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOperation = null;


        try {
            // InternalIec.g:5122:2: (iv_ruleOperation= ruleOperation EOF )
            // InternalIec.g:5123:2: iv_ruleOperation= ruleOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOperation=ruleOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOperation"


    // $ANTLR start "ruleOperation"
    // InternalIec.g:5130:1: ruleOperation returns [EObject current=null] : (this_SimpleOperation_0= ruleSimpleOperation | this_ExpressionOperation_1= ruleExpressionOperation | this_JmpOperation_2= ruleJmpOperation ) ;
    public final EObject ruleOperation() throws RecognitionException {
        EObject current = null;

        EObject this_SimpleOperation_0 = null;

        EObject this_ExpressionOperation_1 = null;

        EObject this_JmpOperation_2 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:5133:28: ( (this_SimpleOperation_0= ruleSimpleOperation | this_ExpressionOperation_1= ruleExpressionOperation | this_JmpOperation_2= ruleJmpOperation ) )
            // InternalIec.g:5134:1: (this_SimpleOperation_0= ruleSimpleOperation | this_ExpressionOperation_1= ruleExpressionOperation | this_JmpOperation_2= ruleJmpOperation )
            {
            // InternalIec.g:5134:1: (this_SimpleOperation_0= ruleSimpleOperation | this_ExpressionOperation_1= ruleExpressionOperation | this_JmpOperation_2= ruleJmpOperation )
            int alt71=3;
            switch ( input.LA(1) ) {
            case 105:
            case 106:
                {
                alt71=1;
                }
                break;
            case 81:
            case 82:
            case 107:
                {
                alt71=2;
                }
                break;
            case 108:
            case 109:
            case 110:
                {
                alt71=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 71, 0, input);

                throw nvae;
            }

            switch (alt71) {
                case 1 :
                    // InternalIec.g:5135:5: this_SimpleOperation_0= ruleSimpleOperation
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getOperationAccess().getSimpleOperationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SimpleOperation_0=ruleSimpleOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SimpleOperation_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:5145:5: this_ExpressionOperation_1= ruleExpressionOperation
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getOperationAccess().getExpressionOperationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionOperation_1=ruleExpressionOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ExpressionOperation_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIec.g:5155:5: this_JmpOperation_2= ruleJmpOperation
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getOperationAccess().getJmpOperationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_JmpOperation_2=ruleJmpOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_JmpOperation_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOperation"


    // $ANTLR start "entryRuleSimpleOperation"
    // InternalIec.g:5171:1: entryRuleSimpleOperation returns [EObject current=null] : iv_ruleSimpleOperation= ruleSimpleOperation EOF ;
    public final EObject entryRuleSimpleOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleOperation = null;


        try {
            // InternalIec.g:5172:2: (iv_ruleSimpleOperation= ruleSimpleOperation EOF )
            // InternalIec.g:5173:2: iv_ruleSimpleOperation= ruleSimpleOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleOperation=ruleSimpleOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleOperation"


    // $ANTLR start "ruleSimpleOperation"
    // InternalIec.g:5180:1: ruleSimpleOperation returns [EObject current=null] : ( ( (lv_operator_0_0= ruleSimpleOperator ) ) ( (lv_operand_1_0= ruleOperand ) )? ) ;
    public final EObject ruleSimpleOperation() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_operator_0_0 = null;

        EObject lv_operand_1_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:5183:28: ( ( ( (lv_operator_0_0= ruleSimpleOperator ) ) ( (lv_operand_1_0= ruleOperand ) )? ) )
            // InternalIec.g:5184:1: ( ( (lv_operator_0_0= ruleSimpleOperator ) ) ( (lv_operand_1_0= ruleOperand ) )? )
            {
            // InternalIec.g:5184:1: ( ( (lv_operator_0_0= ruleSimpleOperator ) ) ( (lv_operand_1_0= ruleOperand ) )? )
            // InternalIec.g:5184:2: ( (lv_operator_0_0= ruleSimpleOperator ) ) ( (lv_operand_1_0= ruleOperand ) )?
            {
            // InternalIec.g:5184:2: ( (lv_operator_0_0= ruleSimpleOperator ) )
            // InternalIec.g:5185:1: (lv_operator_0_0= ruleSimpleOperator )
            {
            // InternalIec.g:5185:1: (lv_operator_0_0= ruleSimpleOperator )
            // InternalIec.g:5186:3: lv_operator_0_0= ruleSimpleOperator
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSimpleOperationAccess().getOperatorSimpleOperatorParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_47);
            lv_operator_0_0=ruleSimpleOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSimpleOperationRule());
              	        }
                     		set(
                     			current, 
                     			"operator",
                      		lv_operator_0_0, 
                      		"com.bichler.iec.Iec.SimpleOperator");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:5202:2: ( (lv_operand_1_0= ruleOperand ) )?
            int alt72=2;
            switch ( input.LA(1) ) {
                case RULE_DIRECT_VARIABLE_ID:
                case RULE_INT:
                case RULE_BINT:
                case RULE_OINT:
                case RULE_HINT:
                case RULE_FIXED_POINT:
                case RULE_SINGLE_BYTE_STRING:
                case RULE_DOUBLE_BYTE_STRING:
                case RULE_DIGIT:
                case 33:
                case 34:
                case 35:
                case 36:
                case 37:
                case 38:
                case 39:
                case 40:
                case 41:
                case 42:
                case 74:
                case 75:
                case 141:
                case 142:
                case 143:
                case 144:
                case 145:
                case 146:
                case 147:
                case 148:
                case 149:
                case 150:
                case 151:
                case 152:
                case 153:
                case 154:
                case 155:
                case 156:
                    {
                    alt72=1;
                    }
                    break;
                case RULE_LETTER:
                    {
                    int LA72_2 = input.LA(2);

                    if ( (LA72_2==EOF||LA72_2==RULE_FIELD_SELECTOR||(LA72_2>=RULE_LETTER && LA72_2<=RULE_ID)||LA72_2==68||LA72_2==70||LA72_2==76||(LA72_2>=81 && LA72_2<=82)||LA72_2==96||(LA72_2>=105 && LA72_2<=110)||LA72_2==119||LA72_2==123) ) {
                        alt72=1;
                    }
                    }
                    break;
                case RULE_ID:
                    {
                    int LA72_3 = input.LA(2);

                    if ( (LA72_3==EOF||LA72_3==RULE_FIELD_SELECTOR||(LA72_3>=RULE_LETTER && LA72_3<=RULE_ID)||LA72_3==68||LA72_3==70||LA72_3==76||(LA72_3>=81 && LA72_3<=82)||LA72_3==96||(LA72_3>=105 && LA72_3<=110)||LA72_3==119||LA72_3==123) ) {
                        alt72=1;
                    }
                    }
                    break;
            }

            switch (alt72) {
                case 1 :
                    // InternalIec.g:5203:1: (lv_operand_1_0= ruleOperand )
                    {
                    // InternalIec.g:5203:1: (lv_operand_1_0= ruleOperand )
                    // InternalIec.g:5204:3: lv_operand_1_0= ruleOperand
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSimpleOperationAccess().getOperandOperandParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_1_0=ruleOperand();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSimpleOperationRule());
                      	        }
                             		set(
                             			current, 
                             			"operand",
                              		lv_operand_1_0, 
                              		"com.bichler.iec.Iec.Operand");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleOperation"


    // $ANTLR start "entryRuleExpressionOperation"
    // InternalIec.g:5228:1: entryRuleExpressionOperation returns [EObject current=null] : iv_ruleExpressionOperation= ruleExpressionOperation EOF ;
    public final EObject entryRuleExpressionOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionOperation = null;


        try {
            // InternalIec.g:5229:2: (iv_ruleExpressionOperation= ruleExpressionOperation EOF )
            // InternalIec.g:5230:2: iv_ruleExpressionOperation= ruleExpressionOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionOperation=ruleExpressionOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionOperation"


    // $ANTLR start "ruleExpressionOperation"
    // InternalIec.g:5237:1: ruleExpressionOperation returns [EObject current=null] : ( ( (lv_operator_0_0= ruleExpressionOperator ) ) otherlv_1= '(' ( (lv_operand_2_0= ruleOperand ) )? ( (lv_simpleInstructionList_3_0= ruleSimpleInstructionList ) )? otherlv_4= ')' ) ;
    public final EObject ruleExpressionOperation() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_operator_0_0 = null;

        EObject lv_operand_2_0 = null;

        EObject lv_simpleInstructionList_3_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:5240:28: ( ( ( (lv_operator_0_0= ruleExpressionOperator ) ) otherlv_1= '(' ( (lv_operand_2_0= ruleOperand ) )? ( (lv_simpleInstructionList_3_0= ruleSimpleInstructionList ) )? otherlv_4= ')' ) )
            // InternalIec.g:5241:1: ( ( (lv_operator_0_0= ruleExpressionOperator ) ) otherlv_1= '(' ( (lv_operand_2_0= ruleOperand ) )? ( (lv_simpleInstructionList_3_0= ruleSimpleInstructionList ) )? otherlv_4= ')' )
            {
            // InternalIec.g:5241:1: ( ( (lv_operator_0_0= ruleExpressionOperator ) ) otherlv_1= '(' ( (lv_operand_2_0= ruleOperand ) )? ( (lv_simpleInstructionList_3_0= ruleSimpleInstructionList ) )? otherlv_4= ')' )
            // InternalIec.g:5241:2: ( (lv_operator_0_0= ruleExpressionOperator ) ) otherlv_1= '(' ( (lv_operand_2_0= ruleOperand ) )? ( (lv_simpleInstructionList_3_0= ruleSimpleInstructionList ) )? otherlv_4= ')'
            {
            // InternalIec.g:5241:2: ( (lv_operator_0_0= ruleExpressionOperator ) )
            // InternalIec.g:5242:1: (lv_operator_0_0= ruleExpressionOperator )
            {
            // InternalIec.g:5242:1: (lv_operator_0_0= ruleExpressionOperator )
            // InternalIec.g:5243:3: lv_operator_0_0= ruleExpressionOperator
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExpressionOperationAccess().getOperatorExpressionOperatorParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_11);
            lv_operator_0_0=ruleExpressionOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExpressionOperationRule());
              	        }
                     		set(
                     			current, 
                     			"operator",
                      		lv_operator_0_0, 
                      		"com.bichler.iec.Iec.ExpressionOperator");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,67,FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getExpressionOperationAccess().getLeftParenthesisKeyword_1());
                  
            }
            // InternalIec.g:5263:1: ( (lv_operand_2_0= ruleOperand ) )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==RULE_DIRECT_VARIABLE_ID||(LA73_0>=RULE_INT && LA73_0<=RULE_FIXED_POINT)||(LA73_0>=RULE_SINGLE_BYTE_STRING && LA73_0<=RULE_DOUBLE_BYTE_STRING)||(LA73_0>=RULE_LETTER && LA73_0<=RULE_DIGIT)||(LA73_0>=33 && LA73_0<=42)||(LA73_0>=74 && LA73_0<=75)||(LA73_0>=141 && LA73_0<=156)) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalIec.g:5264:1: (lv_operand_2_0= ruleOperand )
                    {
                    // InternalIec.g:5264:1: (lv_operand_2_0= ruleOperand )
                    // InternalIec.g:5265:3: lv_operand_2_0= ruleOperand
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExpressionOperationAccess().getOperandOperandParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_49);
                    lv_operand_2_0=ruleOperand();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExpressionOperationRule());
                      	        }
                             		set(
                             			current, 
                             			"operand",
                              		lv_operand_2_0, 
                              		"com.bichler.iec.Iec.Operand");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalIec.g:5281:3: ( (lv_simpleInstructionList_3_0= ruleSimpleInstructionList ) )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( ((LA74_0>=81 && LA74_0<=82)||(LA74_0>=105 && LA74_0<=107)) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalIec.g:5282:1: (lv_simpleInstructionList_3_0= ruleSimpleInstructionList )
                    {
                    // InternalIec.g:5282:1: (lv_simpleInstructionList_3_0= ruleSimpleInstructionList )
                    // InternalIec.g:5283:3: lv_simpleInstructionList_3_0= ruleSimpleInstructionList
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExpressionOperationAccess().getSimpleInstructionListSimpleInstructionListParserRuleCall_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_13);
                    lv_simpleInstructionList_3_0=ruleSimpleInstructionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExpressionOperationRule());
                      	        }
                             		set(
                             			current, 
                             			"simpleInstructionList",
                              		lv_simpleInstructionList_3_0, 
                              		"com.bichler.iec.Iec.SimpleInstructionList");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,68,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getExpressionOperationAccess().getRightParenthesisKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionOperation"


    // $ANTLR start "entryRuleJmpOperation"
    // InternalIec.g:5311:1: entryRuleJmpOperation returns [EObject current=null] : iv_ruleJmpOperation= ruleJmpOperation EOF ;
    public final EObject entryRuleJmpOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJmpOperation = null;


        try {
            // InternalIec.g:5312:2: (iv_ruleJmpOperation= ruleJmpOperation EOF )
            // InternalIec.g:5313:2: iv_ruleJmpOperation= ruleJmpOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJmpOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJmpOperation=ruleJmpOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJmpOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJmpOperation"


    // $ANTLR start "ruleJmpOperation"
    // InternalIec.g:5320:1: ruleJmpOperation returns [EObject current=null] : ( ( (lv_operator_0_0= ruleJmpOperator ) ) ( ( ruleIdentifier ) ) ) ;
    public final EObject ruleJmpOperation() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_operator_0_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:5323:28: ( ( ( (lv_operator_0_0= ruleJmpOperator ) ) ( ( ruleIdentifier ) ) ) )
            // InternalIec.g:5324:1: ( ( (lv_operator_0_0= ruleJmpOperator ) ) ( ( ruleIdentifier ) ) )
            {
            // InternalIec.g:5324:1: ( ( (lv_operator_0_0= ruleJmpOperator ) ) ( ( ruleIdentifier ) ) )
            // InternalIec.g:5324:2: ( (lv_operator_0_0= ruleJmpOperator ) ) ( ( ruleIdentifier ) )
            {
            // InternalIec.g:5324:2: ( (lv_operator_0_0= ruleJmpOperator ) )
            // InternalIec.g:5325:1: (lv_operator_0_0= ruleJmpOperator )
            {
            // InternalIec.g:5325:1: (lv_operator_0_0= ruleJmpOperator )
            // InternalIec.g:5326:3: lv_operator_0_0= ruleJmpOperator
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJmpOperationAccess().getOperatorJmpOperatorParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_4);
            lv_operator_0_0=ruleJmpOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJmpOperationRule());
              	        }
                     		set(
                     			current, 
                     			"operator",
                      		lv_operator_0_0, 
                      		"com.bichler.iec.Iec.JmpOperator");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:5342:2: ( ( ruleIdentifier ) )
            // InternalIec.g:5343:1: ( ruleIdentifier )
            {
            // InternalIec.g:5343:1: ( ruleIdentifier )
            // InternalIec.g:5344:3: ruleIdentifier
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getJmpOperationRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJmpOperationAccess().getLabelLabelCrossReference_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJmpOperation"


    // $ANTLR start "entryRuleSimpleOperator"
    // InternalIec.g:5365:1: entryRuleSimpleOperator returns [String current=null] : iv_ruleSimpleOperator= ruleSimpleOperator EOF ;
    public final String entryRuleSimpleOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSimpleOperator = null;


        try {
            // InternalIec.g:5366:2: (iv_ruleSimpleOperator= ruleSimpleOperator EOF )
            // InternalIec.g:5367:2: iv_ruleSimpleOperator= ruleSimpleOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleOperator=ruleSimpleOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleOperator"


    // $ANTLR start "ruleSimpleOperator"
    // InternalIec.g:5374:1: ruleSimpleOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'LD' | kw= 'LDN' ) ;
    public final AntlrDatatypeRuleToken ruleSimpleOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalIec.g:5377:28: ( (kw= 'LD' | kw= 'LDN' ) )
            // InternalIec.g:5378:1: (kw= 'LD' | kw= 'LDN' )
            {
            // InternalIec.g:5378:1: (kw= 'LD' | kw= 'LDN' )
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==105) ) {
                alt75=1;
            }
            else if ( (LA75_0==106) ) {
                alt75=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;
            }
            switch (alt75) {
                case 1 :
                    // InternalIec.g:5379:2: kw= 'LD'
                    {
                    kw=(Token)match(input,105,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getSimpleOperatorAccess().getLDKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:5386:2: kw= 'LDN'
                    {
                    kw=(Token)match(input,106,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getSimpleOperatorAccess().getLDNKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleOperator"


    // $ANTLR start "entryRuleExpressionOperator"
    // InternalIec.g:5399:1: entryRuleExpressionOperator returns [String current=null] : iv_ruleExpressionOperator= ruleExpressionOperator EOF ;
    public final String entryRuleExpressionOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleExpressionOperator = null;


        try {
            // InternalIec.g:5400:2: (iv_ruleExpressionOperator= ruleExpressionOperator EOF )
            // InternalIec.g:5401:2: iv_ruleExpressionOperator= ruleExpressionOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionOperator=ruleExpressionOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionOperator"


    // $ANTLR start "ruleExpressionOperator"
    // InternalIec.g:5408:1: ruleExpressionOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'AND' | kw= '&' | kw= 'ADD' ) ;
    public final AntlrDatatypeRuleToken ruleExpressionOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalIec.g:5411:28: ( (kw= 'AND' | kw= '&' | kw= 'ADD' ) )
            // InternalIec.g:5412:1: (kw= 'AND' | kw= '&' | kw= 'ADD' )
            {
            // InternalIec.g:5412:1: (kw= 'AND' | kw= '&' | kw= 'ADD' )
            int alt76=3;
            switch ( input.LA(1) ) {
            case 82:
                {
                alt76=1;
                }
                break;
            case 81:
                {
                alt76=2;
                }
                break;
            case 107:
                {
                alt76=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;
            }

            switch (alt76) {
                case 1 :
                    // InternalIec.g:5413:2: kw= 'AND'
                    {
                    kw=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getExpressionOperatorAccess().getANDKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:5420:2: kw= '&'
                    {
                    kw=(Token)match(input,81,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getExpressionOperatorAccess().getAmpersandKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIec.g:5427:2: kw= 'ADD'
                    {
                    kw=(Token)match(input,107,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getExpressionOperatorAccess().getADDKeyword_2()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionOperator"


    // $ANTLR start "entryRuleJmpOperator"
    // InternalIec.g:5440:1: entryRuleJmpOperator returns [String current=null] : iv_ruleJmpOperator= ruleJmpOperator EOF ;
    public final String entryRuleJmpOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleJmpOperator = null;


        try {
            // InternalIec.g:5441:2: (iv_ruleJmpOperator= ruleJmpOperator EOF )
            // InternalIec.g:5442:2: iv_ruleJmpOperator= ruleJmpOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJmpOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJmpOperator=ruleJmpOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJmpOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJmpOperator"


    // $ANTLR start "ruleJmpOperator"
    // InternalIec.g:5449:1: ruleJmpOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'JMP' | kw= 'JMPC' | kw= 'JMPCN' ) ;
    public final AntlrDatatypeRuleToken ruleJmpOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalIec.g:5452:28: ( (kw= 'JMP' | kw= 'JMPC' | kw= 'JMPCN' ) )
            // InternalIec.g:5453:1: (kw= 'JMP' | kw= 'JMPC' | kw= 'JMPCN' )
            {
            // InternalIec.g:5453:1: (kw= 'JMP' | kw= 'JMPC' | kw= 'JMPCN' )
            int alt77=3;
            switch ( input.LA(1) ) {
            case 108:
                {
                alt77=1;
                }
                break;
            case 109:
                {
                alt77=2;
                }
                break;
            case 110:
                {
                alt77=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 77, 0, input);

                throw nvae;
            }

            switch (alt77) {
                case 1 :
                    // InternalIec.g:5454:2: kw= 'JMP'
                    {
                    kw=(Token)match(input,108,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getJmpOperatorAccess().getJMPKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:5461:2: kw= 'JMPC'
                    {
                    kw=(Token)match(input,109,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getJmpOperatorAccess().getJMPCKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIec.g:5468:2: kw= 'JMPCN'
                    {
                    kw=(Token)match(input,110,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getJmpOperatorAccess().getJMPCNKeyword_2()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJmpOperator"


    // $ANTLR start "entryRuleOperand"
    // InternalIec.g:5481:1: entryRuleOperand returns [EObject current=null] : iv_ruleOperand= ruleOperand EOF ;
    public final EObject entryRuleOperand() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOperand = null;


        try {
            // InternalIec.g:5482:2: (iv_ruleOperand= ruleOperand EOF )
            // InternalIec.g:5483:2: iv_ruleOperand= ruleOperand EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOperand=ruleOperand();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOperand; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOperand"


    // $ANTLR start "ruleOperand"
    // InternalIec.g:5490:1: ruleOperand returns [EObject current=null] : ( ( (lv_constant_0_0= ruleConstant ) ) | ( (lv_reference_1_0= ruleReferencedOperand ) ) ) ;
    public final EObject ruleOperand() throws RecognitionException {
        EObject current = null;

        EObject lv_constant_0_0 = null;

        EObject lv_reference_1_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:5493:28: ( ( ( (lv_constant_0_0= ruleConstant ) ) | ( (lv_reference_1_0= ruleReferencedOperand ) ) ) )
            // InternalIec.g:5494:1: ( ( (lv_constant_0_0= ruleConstant ) ) | ( (lv_reference_1_0= ruleReferencedOperand ) ) )
            {
            // InternalIec.g:5494:1: ( ( (lv_constant_0_0= ruleConstant ) ) | ( (lv_reference_1_0= ruleReferencedOperand ) ) )
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( ((LA78_0>=RULE_INT && LA78_0<=RULE_FIXED_POINT)||(LA78_0>=RULE_SINGLE_BYTE_STRING && LA78_0<=RULE_DOUBLE_BYTE_STRING)||LA78_0==RULE_DIGIT||(LA78_0>=33 && LA78_0<=42)||(LA78_0>=74 && LA78_0<=75)||(LA78_0>=141 && LA78_0<=156)) ) {
                alt78=1;
            }
            else if ( (LA78_0==RULE_DIRECT_VARIABLE_ID||(LA78_0>=RULE_LETTER && LA78_0<=RULE_ID)) ) {
                alt78=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 78, 0, input);

                throw nvae;
            }
            switch (alt78) {
                case 1 :
                    // InternalIec.g:5494:2: ( (lv_constant_0_0= ruleConstant ) )
                    {
                    // InternalIec.g:5494:2: ( (lv_constant_0_0= ruleConstant ) )
                    // InternalIec.g:5495:1: (lv_constant_0_0= ruleConstant )
                    {
                    // InternalIec.g:5495:1: (lv_constant_0_0= ruleConstant )
                    // InternalIec.g:5496:3: lv_constant_0_0= ruleConstant
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getOperandAccess().getConstantConstantParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_0_0=ruleConstant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOperandRule());
                      	        }
                             		set(
                             			current, 
                             			"constant",
                              		lv_constant_0_0, 
                              		"com.bichler.iec.Iec.Constant");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIec.g:5513:6: ( (lv_reference_1_0= ruleReferencedOperand ) )
                    {
                    // InternalIec.g:5513:6: ( (lv_reference_1_0= ruleReferencedOperand ) )
                    // InternalIec.g:5514:1: (lv_reference_1_0= ruleReferencedOperand )
                    {
                    // InternalIec.g:5514:1: (lv_reference_1_0= ruleReferencedOperand )
                    // InternalIec.g:5515:3: lv_reference_1_0= ruleReferencedOperand
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getOperandAccess().getReferenceReferencedOperandParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_reference_1_0=ruleReferencedOperand();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOperandRule());
                      	        }
                             		set(
                             			current, 
                             			"reference",
                              		lv_reference_1_0, 
                              		"com.bichler.iec.Iec.ReferencedOperand");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOperand"


    // $ANTLR start "entryRuleReferencedOperand"
    // InternalIec.g:5539:1: entryRuleReferencedOperand returns [EObject current=null] : iv_ruleReferencedOperand= ruleReferencedOperand EOF ;
    public final EObject entryRuleReferencedOperand() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferencedOperand = null;


        try {
            // InternalIec.g:5540:2: (iv_ruleReferencedOperand= ruleReferencedOperand EOF )
            // InternalIec.g:5541:2: iv_ruleReferencedOperand= ruleReferencedOperand EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferencedOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReferencedOperand=ruleReferencedOperand();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferencedOperand; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferencedOperand"


    // $ANTLR start "ruleReferencedOperand"
    // InternalIec.g:5548:1: ruleReferencedOperand returns [EObject current=null] : (this_VariableAccess_0= ruleVariableAccess | this_EnumeratedValue_1= ruleEnumeratedValue ) ;
    public final EObject ruleReferencedOperand() throws RecognitionException {
        EObject current = null;

        EObject this_VariableAccess_0 = null;

        EObject this_EnumeratedValue_1 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:5551:28: ( (this_VariableAccess_0= ruleVariableAccess | this_EnumeratedValue_1= ruleEnumeratedValue ) )
            // InternalIec.g:5552:1: (this_VariableAccess_0= ruleVariableAccess | this_EnumeratedValue_1= ruleEnumeratedValue )
            {
            // InternalIec.g:5552:1: (this_VariableAccess_0= ruleVariableAccess | this_EnumeratedValue_1= ruleEnumeratedValue )
            int alt79=2;
            switch ( input.LA(1) ) {
            case RULE_DIRECT_VARIABLE_ID:
                {
                alt79=1;
                }
                break;
            case RULE_LETTER:
                {
                int LA79_2 = input.LA(2);

                if ( (LA79_2==EOF||LA79_2==RULE_FIELD_SELECTOR||(LA79_2>=RULE_LETTER && LA79_2<=RULE_ID)||LA79_2==68||LA79_2==70||(LA79_2>=81 && LA79_2<=82)||LA79_2==96||(LA79_2>=105 && LA79_2<=110)||LA79_2==119||LA79_2==123) ) {
                    alt79=1;
                }
                else if ( (LA79_2==76) ) {
                    alt79=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 79, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA79_3 = input.LA(2);

                if ( (LA79_3==EOF||LA79_3==RULE_FIELD_SELECTOR||(LA79_3>=RULE_LETTER && LA79_3<=RULE_ID)||LA79_3==68||LA79_3==70||(LA79_3>=81 && LA79_3<=82)||LA79_3==96||(LA79_3>=105 && LA79_3<=110)||LA79_3==119||LA79_3==123) ) {
                    alt79=1;
                }
                else if ( (LA79_3==76) ) {
                    alt79=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 79, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 79, 0, input);

                throw nvae;
            }

            switch (alt79) {
                case 1 :
                    // InternalIec.g:5553:5: this_VariableAccess_0= ruleVariableAccess
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getReferencedOperandAccess().getVariableAccessParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableAccess_0=ruleVariableAccess();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_VariableAccess_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:5563:5: this_EnumeratedValue_1= ruleEnumeratedValue
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getReferencedOperandAccess().getEnumeratedValueParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_EnumeratedValue_1=ruleEnumeratedValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_EnumeratedValue_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferencedOperand"


    // $ANTLR start "entryRuleSimpleInstructionList"
    // InternalIec.g:5579:1: entryRuleSimpleInstructionList returns [EObject current=null] : iv_ruleSimpleInstructionList= ruleSimpleInstructionList EOF ;
    public final EObject entryRuleSimpleInstructionList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleInstructionList = null;


        try {
            // InternalIec.g:5580:2: (iv_ruleSimpleInstructionList= ruleSimpleInstructionList EOF )
            // InternalIec.g:5581:2: iv_ruleSimpleInstructionList= ruleSimpleInstructionList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleInstructionListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleInstructionList=ruleSimpleInstructionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleInstructionList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleInstructionList"


    // $ANTLR start "ruleSimpleInstructionList"
    // InternalIec.g:5588:1: ruleSimpleInstructionList returns [EObject current=null] : ( ( (lv_instructions_0_0= ruleSimpleInstruction ) ) ( (lv_instructions_1_0= ruleSimpleInstruction ) )* ) ;
    public final EObject ruleSimpleInstructionList() throws RecognitionException {
        EObject current = null;

        EObject lv_instructions_0_0 = null;

        EObject lv_instructions_1_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:5591:28: ( ( ( (lv_instructions_0_0= ruleSimpleInstruction ) ) ( (lv_instructions_1_0= ruleSimpleInstruction ) )* ) )
            // InternalIec.g:5592:1: ( ( (lv_instructions_0_0= ruleSimpleInstruction ) ) ( (lv_instructions_1_0= ruleSimpleInstruction ) )* )
            {
            // InternalIec.g:5592:1: ( ( (lv_instructions_0_0= ruleSimpleInstruction ) ) ( (lv_instructions_1_0= ruleSimpleInstruction ) )* )
            // InternalIec.g:5592:2: ( (lv_instructions_0_0= ruleSimpleInstruction ) ) ( (lv_instructions_1_0= ruleSimpleInstruction ) )*
            {
            // InternalIec.g:5592:2: ( (lv_instructions_0_0= ruleSimpleInstruction ) )
            // InternalIec.g:5593:1: (lv_instructions_0_0= ruleSimpleInstruction )
            {
            // InternalIec.g:5593:1: (lv_instructions_0_0= ruleSimpleInstruction )
            // InternalIec.g:5594:3: lv_instructions_0_0= ruleSimpleInstruction
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSimpleInstructionListAccess().getInstructionsSimpleInstructionParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_50);
            lv_instructions_0_0=ruleSimpleInstruction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSimpleInstructionListRule());
              	        }
                     		add(
                     			current, 
                     			"instructions",
                      		lv_instructions_0_0, 
                      		"com.bichler.iec.Iec.SimpleInstruction");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:5610:2: ( (lv_instructions_1_0= ruleSimpleInstruction ) )*
            loop80:
            do {
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( ((LA80_0>=81 && LA80_0<=82)||(LA80_0>=105 && LA80_0<=107)) ) {
                    alt80=1;
                }


                switch (alt80) {
            	case 1 :
            	    // InternalIec.g:5611:1: (lv_instructions_1_0= ruleSimpleInstruction )
            	    {
            	    // InternalIec.g:5611:1: (lv_instructions_1_0= ruleSimpleInstruction )
            	    // InternalIec.g:5612:3: lv_instructions_1_0= ruleSimpleInstruction
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSimpleInstructionListAccess().getInstructionsSimpleInstructionParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_50);
            	    lv_instructions_1_0=ruleSimpleInstruction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSimpleInstructionListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"instructions",
            	              		lv_instructions_1_0, 
            	              		"com.bichler.iec.Iec.SimpleInstruction");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleInstructionList"


    // $ANTLR start "entryRuleSimpleInstruction"
    // InternalIec.g:5636:1: entryRuleSimpleInstruction returns [EObject current=null] : iv_ruleSimpleInstruction= ruleSimpleInstruction EOF ;
    public final EObject entryRuleSimpleInstruction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleInstruction = null;


        try {
            // InternalIec.g:5637:2: (iv_ruleSimpleInstruction= ruleSimpleInstruction EOF )
            // InternalIec.g:5638:2: iv_ruleSimpleInstruction= ruleSimpleInstruction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleInstructionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleInstruction=ruleSimpleInstruction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleInstruction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleInstruction"


    // $ANTLR start "ruleSimpleInstruction"
    // InternalIec.g:5645:1: ruleSimpleInstruction returns [EObject current=null] : (this_SimpleOperation_0= ruleSimpleOperation | this_ExpressionOperation_1= ruleExpressionOperation ) ;
    public final EObject ruleSimpleInstruction() throws RecognitionException {
        EObject current = null;

        EObject this_SimpleOperation_0 = null;

        EObject this_ExpressionOperation_1 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:5648:28: ( (this_SimpleOperation_0= ruleSimpleOperation | this_ExpressionOperation_1= ruleExpressionOperation ) )
            // InternalIec.g:5649:1: (this_SimpleOperation_0= ruleSimpleOperation | this_ExpressionOperation_1= ruleExpressionOperation )
            {
            // InternalIec.g:5649:1: (this_SimpleOperation_0= ruleSimpleOperation | this_ExpressionOperation_1= ruleExpressionOperation )
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( ((LA81_0>=105 && LA81_0<=106)) ) {
                alt81=1;
            }
            else if ( ((LA81_0>=81 && LA81_0<=82)||LA81_0==107) ) {
                alt81=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 81, 0, input);

                throw nvae;
            }
            switch (alt81) {
                case 1 :
                    // InternalIec.g:5650:5: this_SimpleOperation_0= ruleSimpleOperation
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSimpleInstructionAccess().getSimpleOperationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SimpleOperation_0=ruleSimpleOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SimpleOperation_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:5660:5: this_ExpressionOperation_1= ruleExpressionOperation
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSimpleInstructionAccess().getExpressionOperationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionOperation_1=ruleExpressionOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ExpressionOperation_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleInstruction"


    // $ANTLR start "entryRuleStatementList"
    // InternalIec.g:5676:1: entryRuleStatementList returns [EObject current=null] : iv_ruleStatementList= ruleStatementList EOF ;
    public final EObject entryRuleStatementList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatementList = null;


        try {
            // InternalIec.g:5677:2: (iv_ruleStatementList= ruleStatementList EOF )
            // InternalIec.g:5678:2: iv_ruleStatementList= ruleStatementList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatementList=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatementList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatementList"


    // $ANTLR start "ruleStatementList"
    // InternalIec.g:5685:1: ruleStatementList returns [EObject current=null] : ( ( (lv_statements_0_0= ruleStatement ) ) this_EOL_1= RULE_EOL ( ( (lv_statements_2_0= ruleStatement ) ) this_EOL_3= RULE_EOL )* ) ;
    public final EObject ruleStatementList() throws RecognitionException {
        EObject current = null;

        Token this_EOL_1=null;
        Token this_EOL_3=null;
        EObject lv_statements_0_0 = null;

        EObject lv_statements_2_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:5688:28: ( ( ( (lv_statements_0_0= ruleStatement ) ) this_EOL_1= RULE_EOL ( ( (lv_statements_2_0= ruleStatement ) ) this_EOL_3= RULE_EOL )* ) )
            // InternalIec.g:5689:1: ( ( (lv_statements_0_0= ruleStatement ) ) this_EOL_1= RULE_EOL ( ( (lv_statements_2_0= ruleStatement ) ) this_EOL_3= RULE_EOL )* )
            {
            // InternalIec.g:5689:1: ( ( (lv_statements_0_0= ruleStatement ) ) this_EOL_1= RULE_EOL ( ( (lv_statements_2_0= ruleStatement ) ) this_EOL_3= RULE_EOL )* )
            // InternalIec.g:5689:2: ( (lv_statements_0_0= ruleStatement ) ) this_EOL_1= RULE_EOL ( ( (lv_statements_2_0= ruleStatement ) ) this_EOL_3= RULE_EOL )*
            {
            // InternalIec.g:5689:2: ( (lv_statements_0_0= ruleStatement ) )
            // InternalIec.g:5690:1: (lv_statements_0_0= ruleStatement )
            {
            // InternalIec.g:5690:1: (lv_statements_0_0= ruleStatement )
            // InternalIec.g:5691:3: lv_statements_0_0= ruleStatement
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getStatementListAccess().getStatementsStatementParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_statements_0_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStatementListRule());
              	        }
                     		add(
                     			current, 
                     			"statements",
                      		lv_statements_0_0, 
                      		"com.bichler.iec.Iec.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            this_EOL_1=(Token)match(input,RULE_EOL,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_EOL_1, grammarAccess.getStatementListAccess().getEOLTerminalRuleCall_1()); 
                  
            }
            // InternalIec.g:5711:1: ( ( (lv_statements_2_0= ruleStatement ) ) this_EOL_3= RULE_EOL )*
            loop82:
            do {
                int alt82=2;
                switch ( input.LA(1) ) {
                case RULE_LETTER:
                    {
                    int LA82_2 = input.LA(2);

                    if ( (LA82_2==66) ) {
                        alt82=1;
                    }


                    }
                    break;
                case RULE_ID:
                    {
                    int LA82_3 = input.LA(2);

                    if ( (LA82_3==66) ) {
                        alt82=1;
                    }


                    }
                    break;
                case 111:
                case 116:
                    {
                    alt82=1;
                    }
                    break;

                }

                switch (alt82) {
            	case 1 :
            	    // InternalIec.g:5711:2: ( (lv_statements_2_0= ruleStatement ) ) this_EOL_3= RULE_EOL
            	    {
            	    // InternalIec.g:5711:2: ( (lv_statements_2_0= ruleStatement ) )
            	    // InternalIec.g:5712:1: (lv_statements_2_0= ruleStatement )
            	    {
            	    // InternalIec.g:5712:1: (lv_statements_2_0= ruleStatement )
            	    // InternalIec.g:5713:3: lv_statements_2_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getStatementListAccess().getStatementsStatementParserRuleCall_2_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_statements_2_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getStatementListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_2_0, 
            	              		"com.bichler.iec.Iec.Statement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    this_EOL_3=(Token)match(input,RULE_EOL,FOLLOW_51); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_EOL_3, grammarAccess.getStatementListAccess().getEOLTerminalRuleCall_2_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatementList"


    // $ANTLR start "entryRuleStatement"
    // InternalIec.g:5741:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // InternalIec.g:5742:2: (iv_ruleStatement= ruleStatement EOF )
            // InternalIec.g:5743:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalIec.g:5750:1: ruleStatement returns [EObject current=null] : (this_AssignStatement_0= ruleAssignStatement | this_SelectionStatement_1= ruleSelectionStatement ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        EObject this_AssignStatement_0 = null;

        EObject this_SelectionStatement_1 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:5753:28: ( (this_AssignStatement_0= ruleAssignStatement | this_SelectionStatement_1= ruleSelectionStatement ) )
            // InternalIec.g:5754:1: (this_AssignStatement_0= ruleAssignStatement | this_SelectionStatement_1= ruleSelectionStatement )
            {
            // InternalIec.g:5754:1: (this_AssignStatement_0= ruleAssignStatement | this_SelectionStatement_1= ruleSelectionStatement )
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( ((LA83_0>=RULE_LETTER && LA83_0<=RULE_ID)) ) {
                alt83=1;
            }
            else if ( (LA83_0==111||LA83_0==116) ) {
                alt83=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 83, 0, input);

                throw nvae;
            }
            switch (alt83) {
                case 1 :
                    // InternalIec.g:5755:5: this_AssignStatement_0= ruleAssignStatement
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getAssignStatementParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AssignStatement_0=ruleAssignStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AssignStatement_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:5765:5: this_SelectionStatement_1= ruleSelectionStatement
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getSelectionStatementParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SelectionStatement_1=ruleSelectionStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SelectionStatement_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleAssignStatement"
    // InternalIec.g:5781:1: entryRuleAssignStatement returns [EObject current=null] : iv_ruleAssignStatement= ruleAssignStatement EOF ;
    public final EObject entryRuleAssignStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignStatement = null;


        try {
            // InternalIec.g:5782:2: (iv_ruleAssignStatement= ruleAssignStatement EOF )
            // InternalIec.g:5783:2: iv_ruleAssignStatement= ruleAssignStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssignStatement=ruleAssignStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssignStatement"


    // $ANTLR start "ruleAssignStatement"
    // InternalIec.g:5790:1: ruleAssignStatement returns [EObject current=null] : ( ( ( ruleIdentifier ) ) otherlv_1= ':=' ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleAssignStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:5793:28: ( ( ( ( ruleIdentifier ) ) otherlv_1= ':=' ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalIec.g:5794:1: ( ( ( ruleIdentifier ) ) otherlv_1= ':=' ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalIec.g:5794:1: ( ( ( ruleIdentifier ) ) otherlv_1= ':=' ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalIec.g:5794:2: ( ( ruleIdentifier ) ) otherlv_1= ':=' ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalIec.g:5794:2: ( ( ruleIdentifier ) )
            // InternalIec.g:5795:1: ( ruleIdentifier )
            {
            // InternalIec.g:5795:1: ( ruleIdentifier )
            // InternalIec.g:5796:3: ruleIdentifier
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getAssignStatementRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssignStatementAccess().getVariableVariableCrossReference_0_0()); 
              	    
            }
            pushFollow(FOLLOW_25);
            ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,66,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAssignStatementAccess().getColonEqualsSignKeyword_1());
                  
            }
            // InternalIec.g:5813:1: ( (lv_expression_2_0= ruleExpression ) )
            // InternalIec.g:5814:1: (lv_expression_2_0= ruleExpression )
            {
            // InternalIec.g:5814:1: (lv_expression_2_0= ruleExpression )
            // InternalIec.g:5815:3: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssignStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAssignStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"com.bichler.iec.Iec.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignStatement"


    // $ANTLR start "entryRuleSelectionStatement"
    // InternalIec.g:5839:1: entryRuleSelectionStatement returns [EObject current=null] : iv_ruleSelectionStatement= ruleSelectionStatement EOF ;
    public final EObject entryRuleSelectionStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelectionStatement = null;


        try {
            // InternalIec.g:5840:2: (iv_ruleSelectionStatement= ruleSelectionStatement EOF )
            // InternalIec.g:5841:2: iv_ruleSelectionStatement= ruleSelectionStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelectionStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSelectionStatement=ruleSelectionStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelectionStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelectionStatement"


    // $ANTLR start "ruleSelectionStatement"
    // InternalIec.g:5848:1: ruleSelectionStatement returns [EObject current=null] : (this_IfStatement_0= ruleIfStatement | this_CaseStatement_1= ruleCaseStatement ) ;
    public final EObject ruleSelectionStatement() throws RecognitionException {
        EObject current = null;

        EObject this_IfStatement_0 = null;

        EObject this_CaseStatement_1 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:5851:28: ( (this_IfStatement_0= ruleIfStatement | this_CaseStatement_1= ruleCaseStatement ) )
            // InternalIec.g:5852:1: (this_IfStatement_0= ruleIfStatement | this_CaseStatement_1= ruleCaseStatement )
            {
            // InternalIec.g:5852:1: (this_IfStatement_0= ruleIfStatement | this_CaseStatement_1= ruleCaseStatement )
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==111) ) {
                alt84=1;
            }
            else if ( (LA84_0==116) ) {
                alt84=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;
            }
            switch (alt84) {
                case 1 :
                    // InternalIec.g:5853:5: this_IfStatement_0= ruleIfStatement
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSelectionStatementAccess().getIfStatementParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IfStatement_0=ruleIfStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_IfStatement_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:5863:5: this_CaseStatement_1= ruleCaseStatement
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSelectionStatementAccess().getCaseStatementParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_CaseStatement_1=ruleCaseStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_CaseStatement_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelectionStatement"


    // $ANTLR start "entryRuleIfStatement"
    // InternalIec.g:5879:1: entryRuleIfStatement returns [EObject current=null] : iv_ruleIfStatement= ruleIfStatement EOF ;
    public final EObject entryRuleIfStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfStatement = null;


        try {
            // InternalIec.g:5880:2: (iv_ruleIfStatement= ruleIfStatement EOF )
            // InternalIec.g:5881:2: iv_ruleIfStatement= ruleIfStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIfStatement=ruleIfStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfStatement"


    // $ANTLR start "ruleIfStatement"
    // InternalIec.g:5888:1: ruleIfStatement returns [EObject current=null] : (otherlv_0= 'IF' ( (lv_ifExpression_1_0= ruleExpression ) ) otherlv_2= 'THEN' ( (lv_thenStatementList_3_0= ruleStatementList ) ) ( (lv_elseIfs_4_0= ruleElseIf ) )* (otherlv_5= 'ELSE' ( (lv_elseStatementList_6_0= ruleStatementList ) ) )? otherlv_7= 'END_IF' ) ;
    public final EObject ruleIfStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_ifExpression_1_0 = null;

        EObject lv_thenStatementList_3_0 = null;

        EObject lv_elseIfs_4_0 = null;

        EObject lv_elseStatementList_6_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:5891:28: ( (otherlv_0= 'IF' ( (lv_ifExpression_1_0= ruleExpression ) ) otherlv_2= 'THEN' ( (lv_thenStatementList_3_0= ruleStatementList ) ) ( (lv_elseIfs_4_0= ruleElseIf ) )* (otherlv_5= 'ELSE' ( (lv_elseStatementList_6_0= ruleStatementList ) ) )? otherlv_7= 'END_IF' ) )
            // InternalIec.g:5892:1: (otherlv_0= 'IF' ( (lv_ifExpression_1_0= ruleExpression ) ) otherlv_2= 'THEN' ( (lv_thenStatementList_3_0= ruleStatementList ) ) ( (lv_elseIfs_4_0= ruleElseIf ) )* (otherlv_5= 'ELSE' ( (lv_elseStatementList_6_0= ruleStatementList ) ) )? otherlv_7= 'END_IF' )
            {
            // InternalIec.g:5892:1: (otherlv_0= 'IF' ( (lv_ifExpression_1_0= ruleExpression ) ) otherlv_2= 'THEN' ( (lv_thenStatementList_3_0= ruleStatementList ) ) ( (lv_elseIfs_4_0= ruleElseIf ) )* (otherlv_5= 'ELSE' ( (lv_elseStatementList_6_0= ruleStatementList ) ) )? otherlv_7= 'END_IF' )
            // InternalIec.g:5892:3: otherlv_0= 'IF' ( (lv_ifExpression_1_0= ruleExpression ) ) otherlv_2= 'THEN' ( (lv_thenStatementList_3_0= ruleStatementList ) ) ( (lv_elseIfs_4_0= ruleElseIf ) )* (otherlv_5= 'ELSE' ( (lv_elseStatementList_6_0= ruleStatementList ) ) )? otherlv_7= 'END_IF'
            {
            otherlv_0=(Token)match(input,111,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getIfStatementAccess().getIFKeyword_0());
                  
            }
            // InternalIec.g:5896:1: ( (lv_ifExpression_1_0= ruleExpression ) )
            // InternalIec.g:5897:1: (lv_ifExpression_1_0= ruleExpression )
            {
            // InternalIec.g:5897:1: (lv_ifExpression_1_0= ruleExpression )
            // InternalIec.g:5898:3: lv_ifExpression_1_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIfStatementAccess().getIfExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_52);
            lv_ifExpression_1_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfStatementRule());
              	        }
                     		set(
                     			current, 
                     			"ifExpression",
                      		lv_ifExpression_1_0, 
                      		"com.bichler.iec.Iec.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,112,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getIfStatementAccess().getTHENKeyword_2());
                  
            }
            // InternalIec.g:5918:1: ( (lv_thenStatementList_3_0= ruleStatementList ) )
            // InternalIec.g:5919:1: (lv_thenStatementList_3_0= ruleStatementList )
            {
            // InternalIec.g:5919:1: (lv_thenStatementList_3_0= ruleStatementList )
            // InternalIec.g:5920:3: lv_thenStatementList_3_0= ruleStatementList
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIfStatementAccess().getThenStatementListStatementListParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_54);
            lv_thenStatementList_3_0=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfStatementRule());
              	        }
                     		set(
                     			current, 
                     			"thenStatementList",
                      		lv_thenStatementList_3_0, 
                      		"com.bichler.iec.Iec.StatementList");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:5936:2: ( (lv_elseIfs_4_0= ruleElseIf ) )*
            loop85:
            do {
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( (LA85_0==115) ) {
                    alt85=1;
                }


                switch (alt85) {
            	case 1 :
            	    // InternalIec.g:5937:1: (lv_elseIfs_4_0= ruleElseIf )
            	    {
            	    // InternalIec.g:5937:1: (lv_elseIfs_4_0= ruleElseIf )
            	    // InternalIec.g:5938:3: lv_elseIfs_4_0= ruleElseIf
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getIfStatementAccess().getElseIfsElseIfParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_elseIfs_4_0=ruleElseIf();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getIfStatementRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"elseIfs",
            	              		lv_elseIfs_4_0, 
            	              		"com.bichler.iec.Iec.ElseIf");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);

            // InternalIec.g:5954:3: (otherlv_5= 'ELSE' ( (lv_elseStatementList_6_0= ruleStatementList ) ) )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==113) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalIec.g:5954:5: otherlv_5= 'ELSE' ( (lv_elseStatementList_6_0= ruleStatementList ) )
                    {
                    otherlv_5=(Token)match(input,113,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getIfStatementAccess().getELSEKeyword_5_0());
                          
                    }
                    // InternalIec.g:5958:1: ( (lv_elseStatementList_6_0= ruleStatementList ) )
                    // InternalIec.g:5959:1: (lv_elseStatementList_6_0= ruleStatementList )
                    {
                    // InternalIec.g:5959:1: (lv_elseStatementList_6_0= ruleStatementList )
                    // InternalIec.g:5960:3: lv_elseStatementList_6_0= ruleStatementList
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfStatementAccess().getElseStatementListStatementListParserRuleCall_5_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_55);
                    lv_elseStatementList_6_0=ruleStatementList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"elseStatementList",
                              		lv_elseStatementList_6_0, 
                              		"com.bichler.iec.Iec.StatementList");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,114,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getIfStatementAccess().getEND_IFKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfStatement"


    // $ANTLR start "entryRuleElseIf"
    // InternalIec.g:5988:1: entryRuleElseIf returns [EObject current=null] : iv_ruleElseIf= ruleElseIf EOF ;
    public final EObject entryRuleElseIf() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElseIf = null;


        try {
            // InternalIec.g:5989:2: (iv_ruleElseIf= ruleElseIf EOF )
            // InternalIec.g:5990:2: iv_ruleElseIf= ruleElseIf EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElseIfRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElseIf=ruleElseIf();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElseIf; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElseIf"


    // $ANTLR start "ruleElseIf"
    // InternalIec.g:5997:1: ruleElseIf returns [EObject current=null] : (otherlv_0= 'ELSIF' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= 'THEN' ( (lv_statementList_3_0= ruleStatementList ) ) ) ;
    public final EObject ruleElseIf() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expression_1_0 = null;

        EObject lv_statementList_3_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:6000:28: ( (otherlv_0= 'ELSIF' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= 'THEN' ( (lv_statementList_3_0= ruleStatementList ) ) ) )
            // InternalIec.g:6001:1: (otherlv_0= 'ELSIF' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= 'THEN' ( (lv_statementList_3_0= ruleStatementList ) ) )
            {
            // InternalIec.g:6001:1: (otherlv_0= 'ELSIF' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= 'THEN' ( (lv_statementList_3_0= ruleStatementList ) ) )
            // InternalIec.g:6001:3: otherlv_0= 'ELSIF' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= 'THEN' ( (lv_statementList_3_0= ruleStatementList ) )
            {
            otherlv_0=(Token)match(input,115,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getElseIfAccess().getELSIFKeyword_0());
                  
            }
            // InternalIec.g:6005:1: ( (lv_expression_1_0= ruleExpression ) )
            // InternalIec.g:6006:1: (lv_expression_1_0= ruleExpression )
            {
            // InternalIec.g:6006:1: (lv_expression_1_0= ruleExpression )
            // InternalIec.g:6007:3: lv_expression_1_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getElseIfAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_52);
            lv_expression_1_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getElseIfRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"com.bichler.iec.Iec.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,112,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getElseIfAccess().getTHENKeyword_2());
                  
            }
            // InternalIec.g:6027:1: ( (lv_statementList_3_0= ruleStatementList ) )
            // InternalIec.g:6028:1: (lv_statementList_3_0= ruleStatementList )
            {
            // InternalIec.g:6028:1: (lv_statementList_3_0= ruleStatementList )
            // InternalIec.g:6029:3: lv_statementList_3_0= ruleStatementList
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getElseIfAccess().getStatementListStatementListParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statementList_3_0=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getElseIfRule());
              	        }
                     		set(
                     			current, 
                     			"statementList",
                      		lv_statementList_3_0, 
                      		"com.bichler.iec.Iec.StatementList");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElseIf"


    // $ANTLR start "entryRuleCaseStatement"
    // InternalIec.g:6053:1: entryRuleCaseStatement returns [EObject current=null] : iv_ruleCaseStatement= ruleCaseStatement EOF ;
    public final EObject entryRuleCaseStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCaseStatement = null;


        try {
            // InternalIec.g:6054:2: (iv_ruleCaseStatement= ruleCaseStatement EOF )
            // InternalIec.g:6055:2: iv_ruleCaseStatement= ruleCaseStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCaseStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCaseStatement=ruleCaseStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCaseStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCaseStatement"


    // $ANTLR start "ruleCaseStatement"
    // InternalIec.g:6062:1: ruleCaseStatement returns [EObject current=null] : (otherlv_0= 'CASE' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= 'OF' ( (lv_caseElements_3_0= ruleCaseElement ) )* (otherlv_4= 'ELSE' ( (lv_elseStatementList_5_0= ruleStatementList ) ) )? otherlv_6= 'END_CASE' ) ;
    public final EObject ruleCaseStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_expression_1_0 = null;

        EObject lv_caseElements_3_0 = null;

        EObject lv_elseStatementList_5_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:6065:28: ( (otherlv_0= 'CASE' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= 'OF' ( (lv_caseElements_3_0= ruleCaseElement ) )* (otherlv_4= 'ELSE' ( (lv_elseStatementList_5_0= ruleStatementList ) ) )? otherlv_6= 'END_CASE' ) )
            // InternalIec.g:6066:1: (otherlv_0= 'CASE' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= 'OF' ( (lv_caseElements_3_0= ruleCaseElement ) )* (otherlv_4= 'ELSE' ( (lv_elseStatementList_5_0= ruleStatementList ) ) )? otherlv_6= 'END_CASE' )
            {
            // InternalIec.g:6066:1: (otherlv_0= 'CASE' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= 'OF' ( (lv_caseElements_3_0= ruleCaseElement ) )* (otherlv_4= 'ELSE' ( (lv_elseStatementList_5_0= ruleStatementList ) ) )? otherlv_6= 'END_CASE' )
            // InternalIec.g:6066:3: otherlv_0= 'CASE' ( (lv_expression_1_0= ruleExpression ) ) otherlv_2= 'OF' ( (lv_caseElements_3_0= ruleCaseElement ) )* (otherlv_4= 'ELSE' ( (lv_elseStatementList_5_0= ruleStatementList ) ) )? otherlv_6= 'END_CASE'
            {
            otherlv_0=(Token)match(input,116,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getCaseStatementAccess().getCASEKeyword_0());
                  
            }
            // InternalIec.g:6070:1: ( (lv_expression_1_0= ruleExpression ) )
            // InternalIec.g:6071:1: (lv_expression_1_0= ruleExpression )
            {
            // InternalIec.g:6071:1: (lv_expression_1_0= ruleExpression )
            // InternalIec.g:6072:3: lv_expression_1_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCaseStatementAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_18);
            lv_expression_1_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCaseStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"com.bichler.iec.Iec.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,73,FOLLOW_56); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getCaseStatementAccess().getOFKeyword_2());
                  
            }
            // InternalIec.g:6092:1: ( (lv_caseElements_3_0= ruleCaseElement ) )*
            loop87:
            do {
                int alt87=2;
                int LA87_0 = input.LA(1);

                if ( (LA87_0==RULE_SUB_RANGE||LA87_0==RULE_INT||(LA87_0>=RULE_LETTER && LA87_0<=RULE_DIGIT)||(LA87_0>=74 && LA87_0<=75)) ) {
                    alt87=1;
                }


                switch (alt87) {
            	case 1 :
            	    // InternalIec.g:6093:1: (lv_caseElements_3_0= ruleCaseElement )
            	    {
            	    // InternalIec.g:6093:1: (lv_caseElements_3_0= ruleCaseElement )
            	    // InternalIec.g:6094:3: lv_caseElements_3_0= ruleCaseElement
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getCaseStatementAccess().getCaseElementsCaseElementParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_56);
            	    lv_caseElements_3_0=ruleCaseElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getCaseStatementRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"caseElements",
            	              		lv_caseElements_3_0, 
            	              		"com.bichler.iec.Iec.CaseElement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop87;
                }
            } while (true);

            // InternalIec.g:6110:3: (otherlv_4= 'ELSE' ( (lv_elseStatementList_5_0= ruleStatementList ) ) )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==113) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalIec.g:6110:5: otherlv_4= 'ELSE' ( (lv_elseStatementList_5_0= ruleStatementList ) )
                    {
                    otherlv_4=(Token)match(input,113,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getCaseStatementAccess().getELSEKeyword_4_0());
                          
                    }
                    // InternalIec.g:6114:1: ( (lv_elseStatementList_5_0= ruleStatementList ) )
                    // InternalIec.g:6115:1: (lv_elseStatementList_5_0= ruleStatementList )
                    {
                    // InternalIec.g:6115:1: (lv_elseStatementList_5_0= ruleStatementList )
                    // InternalIec.g:6116:3: lv_elseStatementList_5_0= ruleStatementList
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCaseStatementAccess().getElseStatementListStatementListParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_57);
                    lv_elseStatementList_5_0=ruleStatementList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCaseStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"elseStatementList",
                              		lv_elseStatementList_5_0, 
                              		"com.bichler.iec.Iec.StatementList");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,117,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getCaseStatementAccess().getEND_CASEKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCaseStatement"


    // $ANTLR start "entryRuleCaseElement"
    // InternalIec.g:6144:1: entryRuleCaseElement returns [EObject current=null] : iv_ruleCaseElement= ruleCaseElement EOF ;
    public final EObject entryRuleCaseElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCaseElement = null;


        try {
            // InternalIec.g:6145:2: (iv_ruleCaseElement= ruleCaseElement EOF )
            // InternalIec.g:6146:2: iv_ruleCaseElement= ruleCaseElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCaseElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCaseElement=ruleCaseElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCaseElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCaseElement"


    // $ANTLR start "ruleCaseElement"
    // InternalIec.g:6153:1: ruleCaseElement returns [EObject current=null] : ( ( (lv_caseList_0_0= ruleCaseList ) ) otherlv_1= ':' ( (lv_statementList_2_0= ruleStatementList ) ) ) ;
    public final EObject ruleCaseElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_caseList_0_0 = null;

        EObject lv_statementList_2_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:6156:28: ( ( ( (lv_caseList_0_0= ruleCaseList ) ) otherlv_1= ':' ( (lv_statementList_2_0= ruleStatementList ) ) ) )
            // InternalIec.g:6157:1: ( ( (lv_caseList_0_0= ruleCaseList ) ) otherlv_1= ':' ( (lv_statementList_2_0= ruleStatementList ) ) )
            {
            // InternalIec.g:6157:1: ( ( (lv_caseList_0_0= ruleCaseList ) ) otherlv_1= ':' ( (lv_statementList_2_0= ruleStatementList ) ) )
            // InternalIec.g:6157:2: ( (lv_caseList_0_0= ruleCaseList ) ) otherlv_1= ':' ( (lv_statementList_2_0= ruleStatementList ) )
            {
            // InternalIec.g:6157:2: ( (lv_caseList_0_0= ruleCaseList ) )
            // InternalIec.g:6158:1: (lv_caseList_0_0= ruleCaseList )
            {
            // InternalIec.g:6158:1: (lv_caseList_0_0= ruleCaseList )
            // InternalIec.g:6159:3: lv_caseList_0_0= ruleCaseList
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCaseElementAccess().getCaseListCaseListParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_5);
            lv_caseList_0_0=ruleCaseList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCaseElementRule());
              	        }
                     		set(
                     			current, 
                     			"caseList",
                      		lv_caseList_0_0, 
                      		"com.bichler.iec.Iec.CaseList");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,64,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCaseElementAccess().getColonKeyword_1());
                  
            }
            // InternalIec.g:6179:1: ( (lv_statementList_2_0= ruleStatementList ) )
            // InternalIec.g:6180:1: (lv_statementList_2_0= ruleStatementList )
            {
            // InternalIec.g:6180:1: (lv_statementList_2_0= ruleStatementList )
            // InternalIec.g:6181:3: lv_statementList_2_0= ruleStatementList
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCaseElementAccess().getStatementListStatementListParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statementList_2_0=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCaseElementRule());
              	        }
                     		set(
                     			current, 
                     			"statementList",
                      		lv_statementList_2_0, 
                      		"com.bichler.iec.Iec.StatementList");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCaseElement"


    // $ANTLR start "entryRuleCaseList"
    // InternalIec.g:6205:1: entryRuleCaseList returns [EObject current=null] : iv_ruleCaseList= ruleCaseList EOF ;
    public final EObject entryRuleCaseList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCaseList = null;


        try {
            // InternalIec.g:6206:2: (iv_ruleCaseList= ruleCaseList EOF )
            // InternalIec.g:6207:2: iv_ruleCaseList= ruleCaseList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCaseListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCaseList=ruleCaseList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCaseList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCaseList"


    // $ANTLR start "ruleCaseList"
    // InternalIec.g:6214:1: ruleCaseList returns [EObject current=null] : ( ( (lv_elements_0_0= ruleCaseListElement ) ) (otherlv_1= ',' ( (lv_elements_2_0= ruleCaseListElement ) ) )* ) ;
    public final EObject ruleCaseList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_elements_0_0 = null;

        EObject lv_elements_2_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:6217:28: ( ( ( (lv_elements_0_0= ruleCaseListElement ) ) (otherlv_1= ',' ( (lv_elements_2_0= ruleCaseListElement ) ) )* ) )
            // InternalIec.g:6218:1: ( ( (lv_elements_0_0= ruleCaseListElement ) ) (otherlv_1= ',' ( (lv_elements_2_0= ruleCaseListElement ) ) )* )
            {
            // InternalIec.g:6218:1: ( ( (lv_elements_0_0= ruleCaseListElement ) ) (otherlv_1= ',' ( (lv_elements_2_0= ruleCaseListElement ) ) )* )
            // InternalIec.g:6218:2: ( (lv_elements_0_0= ruleCaseListElement ) ) (otherlv_1= ',' ( (lv_elements_2_0= ruleCaseListElement ) ) )*
            {
            // InternalIec.g:6218:2: ( (lv_elements_0_0= ruleCaseListElement ) )
            // InternalIec.g:6219:1: (lv_elements_0_0= ruleCaseListElement )
            {
            // InternalIec.g:6219:1: (lv_elements_0_0= ruleCaseListElement )
            // InternalIec.g:6220:3: lv_elements_0_0= ruleCaseListElement
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCaseListAccess().getElementsCaseListElementParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_20);
            lv_elements_0_0=ruleCaseListElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCaseListRule());
              	        }
                     		add(
                     			current, 
                     			"elements",
                      		lv_elements_0_0, 
                      		"com.bichler.iec.Iec.CaseListElement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:6236:2: (otherlv_1= ',' ( (lv_elements_2_0= ruleCaseListElement ) ) )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==71) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // InternalIec.g:6236:4: otherlv_1= ',' ( (lv_elements_2_0= ruleCaseListElement ) )
            	    {
            	    otherlv_1=(Token)match(input,71,FOLLOW_58); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getCaseListAccess().getCommaKeyword_1_0());
            	          
            	    }
            	    // InternalIec.g:6240:1: ( (lv_elements_2_0= ruleCaseListElement ) )
            	    // InternalIec.g:6241:1: (lv_elements_2_0= ruleCaseListElement )
            	    {
            	    // InternalIec.g:6241:1: (lv_elements_2_0= ruleCaseListElement )
            	    // InternalIec.g:6242:3: lv_elements_2_0= ruleCaseListElement
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getCaseListAccess().getElementsCaseListElementParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_20);
            	    lv_elements_2_0=ruleCaseListElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getCaseListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"elements",
            	              		lv_elements_2_0, 
            	              		"com.bichler.iec.Iec.CaseListElement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCaseList"


    // $ANTLR start "entryRuleCaseListElement"
    // InternalIec.g:6266:1: entryRuleCaseListElement returns [EObject current=null] : iv_ruleCaseListElement= ruleCaseListElement EOF ;
    public final EObject entryRuleCaseListElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCaseListElement = null;


        try {
            // InternalIec.g:6267:2: (iv_ruleCaseListElement= ruleCaseListElement EOF )
            // InternalIec.g:6268:2: iv_ruleCaseListElement= ruleCaseListElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCaseListElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCaseListElement=ruleCaseListElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCaseListElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCaseListElement"


    // $ANTLR start "ruleCaseListElement"
    // InternalIec.g:6275:1: ruleCaseListElement returns [EObject current=null] : ( ( (lv_subRange_0_0= RULE_SUB_RANGE ) ) | ( (lv_integer_1_0= ruleSignedInteger ) ) | ( ( ruleIdentifier ) ) ) ;
    public final EObject ruleCaseListElement() throws RecognitionException {
        EObject current = null;

        Token lv_subRange_0_0=null;
        AntlrDatatypeRuleToken lv_integer_1_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:6278:28: ( ( ( (lv_subRange_0_0= RULE_SUB_RANGE ) ) | ( (lv_integer_1_0= ruleSignedInteger ) ) | ( ( ruleIdentifier ) ) ) )
            // InternalIec.g:6279:1: ( ( (lv_subRange_0_0= RULE_SUB_RANGE ) ) | ( (lv_integer_1_0= ruleSignedInteger ) ) | ( ( ruleIdentifier ) ) )
            {
            // InternalIec.g:6279:1: ( ( (lv_subRange_0_0= RULE_SUB_RANGE ) ) | ( (lv_integer_1_0= ruleSignedInteger ) ) | ( ( ruleIdentifier ) ) )
            int alt90=3;
            switch ( input.LA(1) ) {
            case RULE_SUB_RANGE:
                {
                alt90=1;
                }
                break;
            case RULE_INT:
            case RULE_DIGIT:
            case 74:
            case 75:
                {
                alt90=2;
                }
                break;
            case RULE_LETTER:
            case RULE_ID:
                {
                alt90=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 90, 0, input);

                throw nvae;
            }

            switch (alt90) {
                case 1 :
                    // InternalIec.g:6279:2: ( (lv_subRange_0_0= RULE_SUB_RANGE ) )
                    {
                    // InternalIec.g:6279:2: ( (lv_subRange_0_0= RULE_SUB_RANGE ) )
                    // InternalIec.g:6280:1: (lv_subRange_0_0= RULE_SUB_RANGE )
                    {
                    // InternalIec.g:6280:1: (lv_subRange_0_0= RULE_SUB_RANGE )
                    // InternalIec.g:6281:3: lv_subRange_0_0= RULE_SUB_RANGE
                    {
                    lv_subRange_0_0=(Token)match(input,RULE_SUB_RANGE,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_subRange_0_0, grammarAccess.getCaseListElementAccess().getSubRangeSUB_RANGETerminalRuleCall_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getCaseListElementRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"subRange",
                              		lv_subRange_0_0, 
                              		"com.bichler.iec.Iec.SUB_RANGE");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIec.g:6298:6: ( (lv_integer_1_0= ruleSignedInteger ) )
                    {
                    // InternalIec.g:6298:6: ( (lv_integer_1_0= ruleSignedInteger ) )
                    // InternalIec.g:6299:1: (lv_integer_1_0= ruleSignedInteger )
                    {
                    // InternalIec.g:6299:1: (lv_integer_1_0= ruleSignedInteger )
                    // InternalIec.g:6300:3: lv_integer_1_0= ruleSignedInteger
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCaseListElementAccess().getIntegerSignedIntegerParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_integer_1_0=ruleSignedInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCaseListElementRule());
                      	        }
                             		set(
                             			current, 
                             			"integer",
                              		lv_integer_1_0, 
                              		"com.bichler.iec.Iec.SignedInteger");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalIec.g:6317:6: ( ( ruleIdentifier ) )
                    {
                    // InternalIec.g:6317:6: ( ( ruleIdentifier ) )
                    // InternalIec.g:6318:1: ( ruleIdentifier )
                    {
                    // InternalIec.g:6318:1: ( ruleIdentifier )
                    // InternalIec.g:6319:3: ruleIdentifier
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getCaseListElementRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCaseListElementAccess().getEnumeratedValueEnumeratedValueCrossReference_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    ruleIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCaseListElement"


    // $ANTLR start "entryRuleFunctionBlockDeclaration"
    // InternalIec.g:6340:1: entryRuleFunctionBlockDeclaration returns [EObject current=null] : iv_ruleFunctionBlockDeclaration= ruleFunctionBlockDeclaration EOF ;
    public final EObject entryRuleFunctionBlockDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionBlockDeclaration = null;


        try {
            // InternalIec.g:6341:2: (iv_ruleFunctionBlockDeclaration= ruleFunctionBlockDeclaration EOF )
            // InternalIec.g:6342:2: iv_ruleFunctionBlockDeclaration= ruleFunctionBlockDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionBlockDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionBlockDeclaration=ruleFunctionBlockDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionBlockDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionBlockDeclaration"


    // $ANTLR start "ruleFunctionBlockDeclaration"
    // InternalIec.g:6349:1: ruleFunctionBlockDeclaration returns [EObject current=null] : (otherlv_0= 'FUNCTION_BLOCK' ( (lv_name_1_0= ruleIdentifier ) ) ( (lv_varDeclarations_2_0= ruleFunctionBlockVarDeclarations ) )* ( (lv_body_3_0= ruleFunctionBlockBody ) )? otherlv_4= 'END_FUNCTION_BLOCK' ) ;
    public final EObject ruleFunctionBlockDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_varDeclarations_2_0 = null;

        EObject lv_body_3_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:6352:28: ( (otherlv_0= 'FUNCTION_BLOCK' ( (lv_name_1_0= ruleIdentifier ) ) ( (lv_varDeclarations_2_0= ruleFunctionBlockVarDeclarations ) )* ( (lv_body_3_0= ruleFunctionBlockBody ) )? otherlv_4= 'END_FUNCTION_BLOCK' ) )
            // InternalIec.g:6353:1: (otherlv_0= 'FUNCTION_BLOCK' ( (lv_name_1_0= ruleIdentifier ) ) ( (lv_varDeclarations_2_0= ruleFunctionBlockVarDeclarations ) )* ( (lv_body_3_0= ruleFunctionBlockBody ) )? otherlv_4= 'END_FUNCTION_BLOCK' )
            {
            // InternalIec.g:6353:1: (otherlv_0= 'FUNCTION_BLOCK' ( (lv_name_1_0= ruleIdentifier ) ) ( (lv_varDeclarations_2_0= ruleFunctionBlockVarDeclarations ) )* ( (lv_body_3_0= ruleFunctionBlockBody ) )? otherlv_4= 'END_FUNCTION_BLOCK' )
            // InternalIec.g:6353:3: otherlv_0= 'FUNCTION_BLOCK' ( (lv_name_1_0= ruleIdentifier ) ) ( (lv_varDeclarations_2_0= ruleFunctionBlockVarDeclarations ) )* ( (lv_body_3_0= ruleFunctionBlockBody ) )? otherlv_4= 'END_FUNCTION_BLOCK'
            {
            otherlv_0=(Token)match(input,118,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getFunctionBlockDeclarationAccess().getFUNCTION_BLOCKKeyword_0());
                  
            }
            // InternalIec.g:6357:1: ( (lv_name_1_0= ruleIdentifier ) )
            // InternalIec.g:6358:1: (lv_name_1_0= ruleIdentifier )
            {
            // InternalIec.g:6358:1: (lv_name_1_0= ruleIdentifier )
            // InternalIec.g:6359:3: lv_name_1_0= ruleIdentifier
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFunctionBlockDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_59);
            lv_name_1_0=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFunctionBlockDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"com.bichler.iec.Iec.Identifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:6375:2: ( (lv_varDeclarations_2_0= ruleFunctionBlockVarDeclarations ) )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==97||(LA91_0>=103 && LA91_0<=104)||LA91_0==120) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // InternalIec.g:6376:1: (lv_varDeclarations_2_0= ruleFunctionBlockVarDeclarations )
            	    {
            	    // InternalIec.g:6376:1: (lv_varDeclarations_2_0= ruleFunctionBlockVarDeclarations )
            	    // InternalIec.g:6377:3: lv_varDeclarations_2_0= ruleFunctionBlockVarDeclarations
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getFunctionBlockDeclarationAccess().getVarDeclarationsFunctionBlockVarDeclarationsParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_59);
            	    lv_varDeclarations_2_0=ruleFunctionBlockVarDeclarations();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getFunctionBlockDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"varDeclarations",
            	              		lv_varDeclarations_2_0, 
            	              		"com.bichler.iec.Iec.FunctionBlockVarDeclarations");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);

            // InternalIec.g:6393:3: ( (lv_body_3_0= ruleFunctionBlockBody ) )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( ((LA92_0>=RULE_LETTER && LA92_0<=RULE_ID)||(LA92_0>=81 && LA92_0<=82)||(LA92_0>=105 && LA92_0<=111)||LA92_0==116) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalIec.g:6394:1: (lv_body_3_0= ruleFunctionBlockBody )
                    {
                    // InternalIec.g:6394:1: (lv_body_3_0= ruleFunctionBlockBody )
                    // InternalIec.g:6395:3: lv_body_3_0= ruleFunctionBlockBody
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionBlockDeclarationAccess().getBodyFunctionBlockBodyParserRuleCall_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_60);
                    lv_body_3_0=ruleFunctionBlockBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionBlockDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_3_0, 
                              		"com.bichler.iec.Iec.FunctionBlockBody");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,119,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getFunctionBlockDeclarationAccess().getEND_FUNCTION_BLOCKKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionBlockDeclaration"


    // $ANTLR start "entryRuleFunctionBlockVarDeclarations"
    // InternalIec.g:6423:1: entryRuleFunctionBlockVarDeclarations returns [EObject current=null] : iv_ruleFunctionBlockVarDeclarations= ruleFunctionBlockVarDeclarations EOF ;
    public final EObject entryRuleFunctionBlockVarDeclarations() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionBlockVarDeclarations = null;


        try {
            // InternalIec.g:6424:2: (iv_ruleFunctionBlockVarDeclarations= ruleFunctionBlockVarDeclarations EOF )
            // InternalIec.g:6425:2: iv_ruleFunctionBlockVarDeclarations= ruleFunctionBlockVarDeclarations EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionBlockVarDeclarationsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionBlockVarDeclarations=ruleFunctionBlockVarDeclarations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionBlockVarDeclarations; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionBlockVarDeclarations"


    // $ANTLR start "ruleFunctionBlockVarDeclarations"
    // InternalIec.g:6432:1: ruleFunctionBlockVarDeclarations returns [EObject current=null] : (this_IoVarDeclarations_0= ruleIoVarDeclarations | this_OtherVarDeclarations_1= ruleOtherVarDeclarations ) ;
    public final EObject ruleFunctionBlockVarDeclarations() throws RecognitionException {
        EObject current = null;

        EObject this_IoVarDeclarations_0 = null;

        EObject this_OtherVarDeclarations_1 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:6435:28: ( (this_IoVarDeclarations_0= ruleIoVarDeclarations | this_OtherVarDeclarations_1= ruleOtherVarDeclarations ) )
            // InternalIec.g:6436:1: (this_IoVarDeclarations_0= ruleIoVarDeclarations | this_OtherVarDeclarations_1= ruleOtherVarDeclarations )
            {
            // InternalIec.g:6436:1: (this_IoVarDeclarations_0= ruleIoVarDeclarations | this_OtherVarDeclarations_1= ruleOtherVarDeclarations )
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==97||(LA93_0>=103 && LA93_0<=104)) ) {
                alt93=1;
            }
            else if ( (LA93_0==120) ) {
                alt93=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 93, 0, input);

                throw nvae;
            }
            switch (alt93) {
                case 1 :
                    // InternalIec.g:6437:5: this_IoVarDeclarations_0= ruleIoVarDeclarations
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionBlockVarDeclarationsAccess().getIoVarDeclarationsParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IoVarDeclarations_0=ruleIoVarDeclarations();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_IoVarDeclarations_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:6447:5: this_OtherVarDeclarations_1= ruleOtherVarDeclarations
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionBlockVarDeclarationsAccess().getOtherVarDeclarationsParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_OtherVarDeclarations_1=ruleOtherVarDeclarations();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_OtherVarDeclarations_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionBlockVarDeclarations"


    // $ANTLR start "entryRuleOtherVarDeclarations"
    // InternalIec.g:6463:1: entryRuleOtherVarDeclarations returns [EObject current=null] : iv_ruleOtherVarDeclarations= ruleOtherVarDeclarations EOF ;
    public final EObject entryRuleOtherVarDeclarations() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOtherVarDeclarations = null;


        try {
            // InternalIec.g:6464:2: (iv_ruleOtherVarDeclarations= ruleOtherVarDeclarations EOF )
            // InternalIec.g:6465:2: iv_ruleOtherVarDeclarations= ruleOtherVarDeclarations EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOtherVarDeclarationsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOtherVarDeclarations=ruleOtherVarDeclarations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOtherVarDeclarations; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOtherVarDeclarations"


    // $ANTLR start "ruleOtherVarDeclarations"
    // InternalIec.g:6472:1: ruleOtherVarDeclarations returns [EObject current=null] : this_VarDeclarations_0= ruleVarDeclarations ;
    public final EObject ruleOtherVarDeclarations() throws RecognitionException {
        EObject current = null;

        EObject this_VarDeclarations_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:6475:28: (this_VarDeclarations_0= ruleVarDeclarations )
            // InternalIec.g:6477:5: this_VarDeclarations_0= ruleVarDeclarations
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getOtherVarDeclarationsAccess().getVarDeclarationsParserRuleCall()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_VarDeclarations_0=ruleVarDeclarations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_VarDeclarations_0; 
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOtherVarDeclarations"


    // $ANTLR start "entryRuleVarDeclarations"
    // InternalIec.g:6493:1: entryRuleVarDeclarations returns [EObject current=null] : iv_ruleVarDeclarations= ruleVarDeclarations EOF ;
    public final EObject entryRuleVarDeclarations() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVarDeclarations = null;


        try {
            // InternalIec.g:6494:2: (iv_ruleVarDeclarations= ruleVarDeclarations EOF )
            // InternalIec.g:6495:2: iv_ruleVarDeclarations= ruleVarDeclarations EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarDeclarationsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVarDeclarations=ruleVarDeclarations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVarDeclarations; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVarDeclarations"


    // $ANTLR start "ruleVarDeclarations"
    // InternalIec.g:6502:1: ruleVarDeclarations returns [EObject current=null] : (otherlv_0= 'VAR' ( (lv_constant_1_0= 'CONSTANT' ) )? ( (lv_initDecls_2_0= ruleVarInitDecl ) ) this_EOL_3= RULE_EOL ( ( (lv_initDecls_4_0= ruleVarInitDecl ) ) this_EOL_5= RULE_EOL )* otherlv_6= 'END_VAR' ) ;
    public final EObject ruleVarDeclarations() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_constant_1_0=null;
        Token this_EOL_3=null;
        Token this_EOL_5=null;
        Token otherlv_6=null;
        EObject lv_initDecls_2_0 = null;

        EObject lv_initDecls_4_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:6505:28: ( (otherlv_0= 'VAR' ( (lv_constant_1_0= 'CONSTANT' ) )? ( (lv_initDecls_2_0= ruleVarInitDecl ) ) this_EOL_3= RULE_EOL ( ( (lv_initDecls_4_0= ruleVarInitDecl ) ) this_EOL_5= RULE_EOL )* otherlv_6= 'END_VAR' ) )
            // InternalIec.g:6506:1: (otherlv_0= 'VAR' ( (lv_constant_1_0= 'CONSTANT' ) )? ( (lv_initDecls_2_0= ruleVarInitDecl ) ) this_EOL_3= RULE_EOL ( ( (lv_initDecls_4_0= ruleVarInitDecl ) ) this_EOL_5= RULE_EOL )* otherlv_6= 'END_VAR' )
            {
            // InternalIec.g:6506:1: (otherlv_0= 'VAR' ( (lv_constant_1_0= 'CONSTANT' ) )? ( (lv_initDecls_2_0= ruleVarInitDecl ) ) this_EOL_3= RULE_EOL ( ( (lv_initDecls_4_0= ruleVarInitDecl ) ) this_EOL_5= RULE_EOL )* otherlv_6= 'END_VAR' )
            // InternalIec.g:6506:3: otherlv_0= 'VAR' ( (lv_constant_1_0= 'CONSTANT' ) )? ( (lv_initDecls_2_0= ruleVarInitDecl ) ) this_EOL_3= RULE_EOL ( ( (lv_initDecls_4_0= ruleVarInitDecl ) ) this_EOL_5= RULE_EOL )* otherlv_6= 'END_VAR'
            {
            otherlv_0=(Token)match(input,120,FOLLOW_61); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getVarDeclarationsAccess().getVARKeyword_0());
                  
            }
            // InternalIec.g:6510:1: ( (lv_constant_1_0= 'CONSTANT' ) )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==121) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // InternalIec.g:6511:1: (lv_constant_1_0= 'CONSTANT' )
                    {
                    // InternalIec.g:6511:1: (lv_constant_1_0= 'CONSTANT' )
                    // InternalIec.g:6512:3: lv_constant_1_0= 'CONSTANT'
                    {
                    lv_constant_1_0=(Token)match(input,121,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_constant_1_0, grammarAccess.getVarDeclarationsAccess().getConstantCONSTANTKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVarDeclarationsRule());
                      	        }
                             		setWithLastConsumed(current, "constant", true, "CONSTANT");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalIec.g:6525:3: ( (lv_initDecls_2_0= ruleVarInitDecl ) )
            // InternalIec.g:6526:1: (lv_initDecls_2_0= ruleVarInitDecl )
            {
            // InternalIec.g:6526:1: (lv_initDecls_2_0= ruleVarInitDecl )
            // InternalIec.g:6527:3: lv_initDecls_2_0= ruleVarInitDecl
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVarDeclarationsAccess().getInitDeclsVarInitDeclParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_initDecls_2_0=ruleVarInitDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVarDeclarationsRule());
              	        }
                     		add(
                     			current, 
                     			"initDecls",
                      		lv_initDecls_2_0, 
                      		"com.bichler.iec.Iec.VarInitDecl");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            this_EOL_3=(Token)match(input,RULE_EOL,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_EOL_3, grammarAccess.getVarDeclarationsAccess().getEOLTerminalRuleCall_3()); 
                  
            }
            // InternalIec.g:6547:1: ( ( (lv_initDecls_4_0= ruleVarInitDecl ) ) this_EOL_5= RULE_EOL )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( ((LA95_0>=RULE_LETTER && LA95_0<=RULE_ID)) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // InternalIec.g:6547:2: ( (lv_initDecls_4_0= ruleVarInitDecl ) ) this_EOL_5= RULE_EOL
            	    {
            	    // InternalIec.g:6547:2: ( (lv_initDecls_4_0= ruleVarInitDecl ) )
            	    // InternalIec.g:6548:1: (lv_initDecls_4_0= ruleVarInitDecl )
            	    {
            	    // InternalIec.g:6548:1: (lv_initDecls_4_0= ruleVarInitDecl )
            	    // InternalIec.g:6549:3: lv_initDecls_4_0= ruleVarInitDecl
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVarDeclarationsAccess().getInitDeclsVarInitDeclParserRuleCall_4_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_initDecls_4_0=ruleVarInitDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVarDeclarationsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"initDecls",
            	              		lv_initDecls_4_0, 
            	              		"com.bichler.iec.Iec.VarInitDecl");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    this_EOL_5=(Token)match(input,RULE_EOL,FOLLOW_43); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_EOL_5, grammarAccess.getVarDeclarationsAccess().getEOLTerminalRuleCall_4_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);

            otherlv_6=(Token)match(input,100,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getVarDeclarationsAccess().getEND_VARKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVarDeclarations"


    // $ANTLR start "entryRuleFunctionBlockBody"
    // InternalIec.g:6581:1: entryRuleFunctionBlockBody returns [EObject current=null] : iv_ruleFunctionBlockBody= ruleFunctionBlockBody EOF ;
    public final EObject entryRuleFunctionBlockBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionBlockBody = null;


        try {
            // InternalIec.g:6582:2: (iv_ruleFunctionBlockBody= ruleFunctionBlockBody EOF )
            // InternalIec.g:6583:2: iv_ruleFunctionBlockBody= ruleFunctionBlockBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionBlockBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionBlockBody=ruleFunctionBlockBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionBlockBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionBlockBody"


    // $ANTLR start "ruleFunctionBlockBody"
    // InternalIec.g:6590:1: ruleFunctionBlockBody returns [EObject current=null] : (this_InstructionList_0= ruleInstructionList | this_StatementList_1= ruleStatementList ) ;
    public final EObject ruleFunctionBlockBody() throws RecognitionException {
        EObject current = null;

        EObject this_InstructionList_0 = null;

        EObject this_StatementList_1 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:6593:28: ( (this_InstructionList_0= ruleInstructionList | this_StatementList_1= ruleStatementList ) )
            // InternalIec.g:6594:1: (this_InstructionList_0= ruleInstructionList | this_StatementList_1= ruleStatementList )
            {
            // InternalIec.g:6594:1: (this_InstructionList_0= ruleInstructionList | this_StatementList_1= ruleStatementList )
            int alt96=2;
            switch ( input.LA(1) ) {
            case RULE_LETTER:
                {
                int LA96_1 = input.LA(2);

                if ( (LA96_1==66) ) {
                    alt96=2;
                }
                else if ( (LA96_1==64) ) {
                    alt96=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 96, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA96_2 = input.LA(2);

                if ( (LA96_2==66) ) {
                    alt96=2;
                }
                else if ( (LA96_2==64) ) {
                    alt96=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 96, 2, input);

                    throw nvae;
                }
                }
                break;
            case 81:
            case 82:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
                {
                alt96=1;
                }
                break;
            case 111:
            case 116:
                {
                alt96=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 96, 0, input);

                throw nvae;
            }

            switch (alt96) {
                case 1 :
                    // InternalIec.g:6595:5: this_InstructionList_0= ruleInstructionList
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionBlockBodyAccess().getInstructionListParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_InstructionList_0=ruleInstructionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_InstructionList_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:6605:5: this_StatementList_1= ruleStatementList
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionBlockBodyAccess().getStatementListParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_StatementList_1=ruleStatementList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StatementList_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionBlockBody"


    // $ANTLR start "entryRuleProgramDeclaration"
    // InternalIec.g:6621:1: entryRuleProgramDeclaration returns [EObject current=null] : iv_ruleProgramDeclaration= ruleProgramDeclaration EOF ;
    public final EObject entryRuleProgramDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProgramDeclaration = null;


        try {
            // InternalIec.g:6622:2: (iv_ruleProgramDeclaration= ruleProgramDeclaration EOF )
            // InternalIec.g:6623:2: iv_ruleProgramDeclaration= ruleProgramDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProgramDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleProgramDeclaration=ruleProgramDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProgramDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProgramDeclaration"


    // $ANTLR start "ruleProgramDeclaration"
    // InternalIec.g:6630:1: ruleProgramDeclaration returns [EObject current=null] : (otherlv_0= 'PROGRAM' ( (lv_name_1_0= ruleIdentifier ) ) ( (lv_varDeclarations_2_0= ruleProgramVarDeclarations ) )* ( (lv_body_3_0= ruleFunctionBlockBody ) )? otherlv_4= 'END_PROGRAM' ) ;
    public final EObject ruleProgramDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_varDeclarations_2_0 = null;

        EObject lv_body_3_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:6633:28: ( (otherlv_0= 'PROGRAM' ( (lv_name_1_0= ruleIdentifier ) ) ( (lv_varDeclarations_2_0= ruleProgramVarDeclarations ) )* ( (lv_body_3_0= ruleFunctionBlockBody ) )? otherlv_4= 'END_PROGRAM' ) )
            // InternalIec.g:6634:1: (otherlv_0= 'PROGRAM' ( (lv_name_1_0= ruleIdentifier ) ) ( (lv_varDeclarations_2_0= ruleProgramVarDeclarations ) )* ( (lv_body_3_0= ruleFunctionBlockBody ) )? otherlv_4= 'END_PROGRAM' )
            {
            // InternalIec.g:6634:1: (otherlv_0= 'PROGRAM' ( (lv_name_1_0= ruleIdentifier ) ) ( (lv_varDeclarations_2_0= ruleProgramVarDeclarations ) )* ( (lv_body_3_0= ruleFunctionBlockBody ) )? otherlv_4= 'END_PROGRAM' )
            // InternalIec.g:6634:3: otherlv_0= 'PROGRAM' ( (lv_name_1_0= ruleIdentifier ) ) ( (lv_varDeclarations_2_0= ruleProgramVarDeclarations ) )* ( (lv_body_3_0= ruleFunctionBlockBody ) )? otherlv_4= 'END_PROGRAM'
            {
            otherlv_0=(Token)match(input,122,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getProgramDeclarationAccess().getPROGRAMKeyword_0());
                  
            }
            // InternalIec.g:6638:1: ( (lv_name_1_0= ruleIdentifier ) )
            // InternalIec.g:6639:1: (lv_name_1_0= ruleIdentifier )
            {
            // InternalIec.g:6639:1: (lv_name_1_0= ruleIdentifier )
            // InternalIec.g:6640:3: lv_name_1_0= ruleIdentifier
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getProgramDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_62);
            lv_name_1_0=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getProgramDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"com.bichler.iec.Iec.Identifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:6656:2: ( (lv_varDeclarations_2_0= ruleProgramVarDeclarations ) )*
            loop97:
            do {
                int alt97=2;
                int LA97_0 = input.LA(1);

                if ( (LA97_0==97||(LA97_0>=103 && LA97_0<=104)||LA97_0==120||LA97_0==125) ) {
                    alt97=1;
                }


                switch (alt97) {
            	case 1 :
            	    // InternalIec.g:6657:1: (lv_varDeclarations_2_0= ruleProgramVarDeclarations )
            	    {
            	    // InternalIec.g:6657:1: (lv_varDeclarations_2_0= ruleProgramVarDeclarations )
            	    // InternalIec.g:6658:3: lv_varDeclarations_2_0= ruleProgramVarDeclarations
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getProgramDeclarationAccess().getVarDeclarationsProgramVarDeclarationsParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_62);
            	    lv_varDeclarations_2_0=ruleProgramVarDeclarations();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getProgramDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"varDeclarations",
            	              		lv_varDeclarations_2_0, 
            	              		"com.bichler.iec.Iec.ProgramVarDeclarations");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);

            // InternalIec.g:6674:3: ( (lv_body_3_0= ruleFunctionBlockBody ) )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( ((LA98_0>=RULE_LETTER && LA98_0<=RULE_ID)||(LA98_0>=81 && LA98_0<=82)||(LA98_0>=105 && LA98_0<=111)||LA98_0==116) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalIec.g:6675:1: (lv_body_3_0= ruleFunctionBlockBody )
                    {
                    // InternalIec.g:6675:1: (lv_body_3_0= ruleFunctionBlockBody )
                    // InternalIec.g:6676:3: lv_body_3_0= ruleFunctionBlockBody
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getProgramDeclarationAccess().getBodyFunctionBlockBodyParserRuleCall_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_63);
                    lv_body_3_0=ruleFunctionBlockBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getProgramDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_3_0, 
                              		"com.bichler.iec.Iec.FunctionBlockBody");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,123,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getProgramDeclarationAccess().getEND_PROGRAMKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProgramDeclaration"


    // $ANTLR start "entryRuleProgramVarDeclarations"
    // InternalIec.g:6704:1: entryRuleProgramVarDeclarations returns [EObject current=null] : iv_ruleProgramVarDeclarations= ruleProgramVarDeclarations EOF ;
    public final EObject entryRuleProgramVarDeclarations() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProgramVarDeclarations = null;


        try {
            // InternalIec.g:6705:2: (iv_ruleProgramVarDeclarations= ruleProgramVarDeclarations EOF )
            // InternalIec.g:6706:2: iv_ruleProgramVarDeclarations= ruleProgramVarDeclarations EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProgramVarDeclarationsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleProgramVarDeclarations=ruleProgramVarDeclarations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProgramVarDeclarations; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProgramVarDeclarations"


    // $ANTLR start "ruleProgramVarDeclarations"
    // InternalIec.g:6713:1: ruleProgramVarDeclarations returns [EObject current=null] : (this_IoVarDeclarations_0= ruleIoVarDeclarations | this_OtherVarDeclarations_1= ruleOtherVarDeclarations | this_LocatedVarDeclarations_2= ruleLocatedVarDeclarations | this_ProgramAccessDecls_3= ruleProgramAccessDecls ) ;
    public final EObject ruleProgramVarDeclarations() throws RecognitionException {
        EObject current = null;

        EObject this_IoVarDeclarations_0 = null;

        EObject this_OtherVarDeclarations_1 = null;

        EObject this_LocatedVarDeclarations_2 = null;

        EObject this_ProgramAccessDecls_3 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:6716:28: ( (this_IoVarDeclarations_0= ruleIoVarDeclarations | this_OtherVarDeclarations_1= ruleOtherVarDeclarations | this_LocatedVarDeclarations_2= ruleLocatedVarDeclarations | this_ProgramAccessDecls_3= ruleProgramAccessDecls ) )
            // InternalIec.g:6717:1: (this_IoVarDeclarations_0= ruleIoVarDeclarations | this_OtherVarDeclarations_1= ruleOtherVarDeclarations | this_LocatedVarDeclarations_2= ruleLocatedVarDeclarations | this_ProgramAccessDecls_3= ruleProgramAccessDecls )
            {
            // InternalIec.g:6717:1: (this_IoVarDeclarations_0= ruleIoVarDeclarations | this_OtherVarDeclarations_1= ruleOtherVarDeclarations | this_LocatedVarDeclarations_2= ruleLocatedVarDeclarations | this_ProgramAccessDecls_3= ruleProgramAccessDecls )
            int alt99=4;
            switch ( input.LA(1) ) {
            case 97:
            case 103:
            case 104:
                {
                alt99=1;
                }
                break;
            case 120:
                {
                switch ( input.LA(2) ) {
                case 121:
                    {
                    switch ( input.LA(3) ) {
                    case RULE_LETTER:
                        {
                        int LA99_7 = input.LA(4);

                        if ( (LA99_7==64||LA99_7==71) ) {
                            alt99=2;
                        }
                        else if ( (LA99_7==124) ) {
                            alt99=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 99, 7, input);

                            throw nvae;
                        }
                        }
                        break;
                    case RULE_ID:
                        {
                        int LA99_8 = input.LA(4);

                        if ( (LA99_8==124) ) {
                            alt99=3;
                        }
                        else if ( (LA99_8==64||LA99_8==71) ) {
                            alt99=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 99, 8, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 124:
                        {
                        alt99=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 99, 4, input);

                        throw nvae;
                    }

                    }
                    break;
                case RULE_LETTER:
                case RULE_ID:
                    {
                    alt99=2;
                    }
                    break;
                case 98:
                case 99:
                    {
                    alt99=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 99, 2, input);

                    throw nvae;
                }

                }
                break;
            case 125:
                {
                alt99=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 99, 0, input);

                throw nvae;
            }

            switch (alt99) {
                case 1 :
                    // InternalIec.g:6718:5: this_IoVarDeclarations_0= ruleIoVarDeclarations
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getProgramVarDeclarationsAccess().getIoVarDeclarationsParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IoVarDeclarations_0=ruleIoVarDeclarations();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_IoVarDeclarations_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:6728:5: this_OtherVarDeclarations_1= ruleOtherVarDeclarations
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getProgramVarDeclarationsAccess().getOtherVarDeclarationsParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_OtherVarDeclarations_1=ruleOtherVarDeclarations();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_OtherVarDeclarations_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIec.g:6738:5: this_LocatedVarDeclarations_2= ruleLocatedVarDeclarations
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getProgramVarDeclarationsAccess().getLocatedVarDeclarationsParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_LocatedVarDeclarations_2=ruleLocatedVarDeclarations();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_LocatedVarDeclarations_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalIec.g:6748:5: this_ProgramAccessDecls_3= ruleProgramAccessDecls
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getProgramVarDeclarationsAccess().getProgramAccessDeclsParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ProgramAccessDecls_3=ruleProgramAccessDecls();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ProgramAccessDecls_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProgramVarDeclarations"


    // $ANTLR start "entryRuleLocatedVarDeclarations"
    // InternalIec.g:6764:1: entryRuleLocatedVarDeclarations returns [EObject current=null] : iv_ruleLocatedVarDeclarations= ruleLocatedVarDeclarations EOF ;
    public final EObject entryRuleLocatedVarDeclarations() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLocatedVarDeclarations = null;


        try {
            // InternalIec.g:6765:2: (iv_ruleLocatedVarDeclarations= ruleLocatedVarDeclarations EOF )
            // InternalIec.g:6766:2: iv_ruleLocatedVarDeclarations= ruleLocatedVarDeclarations EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocatedVarDeclarationsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLocatedVarDeclarations=ruleLocatedVarDeclarations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocatedVarDeclarations; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocatedVarDeclarations"


    // $ANTLR start "ruleLocatedVarDeclarations"
    // InternalIec.g:6773:1: ruleLocatedVarDeclarations returns [EObject current=null] : (otherlv_0= 'VAR' (otherlv_1= 'CONSTANT' | otherlv_2= 'RETAIN' | otherlv_3= 'NON_RETAIN' ) ( (lv_locatedVarDeclaration_4_0= ruleLocatedVarDeclaration ) ) this_EOL_5= RULE_EOL ( ( (lv_locatedVarDeclaration_6_0= ruleLocatedVarDeclaration ) ) this_EOL_7= RULE_EOL )* otherlv_8= 'END_VAR' ) ;
    public final EObject ruleLocatedVarDeclarations() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token this_EOL_5=null;
        Token this_EOL_7=null;
        Token otherlv_8=null;
        EObject lv_locatedVarDeclaration_4_0 = null;

        EObject lv_locatedVarDeclaration_6_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:6776:28: ( (otherlv_0= 'VAR' (otherlv_1= 'CONSTANT' | otherlv_2= 'RETAIN' | otherlv_3= 'NON_RETAIN' ) ( (lv_locatedVarDeclaration_4_0= ruleLocatedVarDeclaration ) ) this_EOL_5= RULE_EOL ( ( (lv_locatedVarDeclaration_6_0= ruleLocatedVarDeclaration ) ) this_EOL_7= RULE_EOL )* otherlv_8= 'END_VAR' ) )
            // InternalIec.g:6777:1: (otherlv_0= 'VAR' (otherlv_1= 'CONSTANT' | otherlv_2= 'RETAIN' | otherlv_3= 'NON_RETAIN' ) ( (lv_locatedVarDeclaration_4_0= ruleLocatedVarDeclaration ) ) this_EOL_5= RULE_EOL ( ( (lv_locatedVarDeclaration_6_0= ruleLocatedVarDeclaration ) ) this_EOL_7= RULE_EOL )* otherlv_8= 'END_VAR' )
            {
            // InternalIec.g:6777:1: (otherlv_0= 'VAR' (otherlv_1= 'CONSTANT' | otherlv_2= 'RETAIN' | otherlv_3= 'NON_RETAIN' ) ( (lv_locatedVarDeclaration_4_0= ruleLocatedVarDeclaration ) ) this_EOL_5= RULE_EOL ( ( (lv_locatedVarDeclaration_6_0= ruleLocatedVarDeclaration ) ) this_EOL_7= RULE_EOL )* otherlv_8= 'END_VAR' )
            // InternalIec.g:6777:3: otherlv_0= 'VAR' (otherlv_1= 'CONSTANT' | otherlv_2= 'RETAIN' | otherlv_3= 'NON_RETAIN' ) ( (lv_locatedVarDeclaration_4_0= ruleLocatedVarDeclaration ) ) this_EOL_5= RULE_EOL ( ( (lv_locatedVarDeclaration_6_0= ruleLocatedVarDeclaration ) ) this_EOL_7= RULE_EOL )* otherlv_8= 'END_VAR'
            {
            otherlv_0=(Token)match(input,120,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getLocatedVarDeclarationsAccess().getVARKeyword_0());
                  
            }
            // InternalIec.g:6781:1: (otherlv_1= 'CONSTANT' | otherlv_2= 'RETAIN' | otherlv_3= 'NON_RETAIN' )
            int alt100=3;
            switch ( input.LA(1) ) {
            case 121:
                {
                alt100=1;
                }
                break;
            case 98:
                {
                alt100=2;
                }
                break;
            case 99:
                {
                alt100=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 100, 0, input);

                throw nvae;
            }

            switch (alt100) {
                case 1 :
                    // InternalIec.g:6781:3: otherlv_1= 'CONSTANT'
                    {
                    otherlv_1=(Token)match(input,121,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getLocatedVarDeclarationsAccess().getCONSTANTKeyword_1_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:6786:7: otherlv_2= 'RETAIN'
                    {
                    otherlv_2=(Token)match(input,98,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getLocatedVarDeclarationsAccess().getRETAINKeyword_1_1());
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIec.g:6791:7: otherlv_3= 'NON_RETAIN'
                    {
                    otherlv_3=(Token)match(input,99,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getLocatedVarDeclarationsAccess().getNON_RETAINKeyword_1_2());
                          
                    }

                    }
                    break;

            }

            // InternalIec.g:6795:2: ( (lv_locatedVarDeclaration_4_0= ruleLocatedVarDeclaration ) )
            // InternalIec.g:6796:1: (lv_locatedVarDeclaration_4_0= ruleLocatedVarDeclaration )
            {
            // InternalIec.g:6796:1: (lv_locatedVarDeclaration_4_0= ruleLocatedVarDeclaration )
            // InternalIec.g:6797:3: lv_locatedVarDeclaration_4_0= ruleLocatedVarDeclaration
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLocatedVarDeclarationsAccess().getLocatedVarDeclarationLocatedVarDeclarationParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_locatedVarDeclaration_4_0=ruleLocatedVarDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLocatedVarDeclarationsRule());
              	        }
                     		add(
                     			current, 
                     			"locatedVarDeclaration",
                      		lv_locatedVarDeclaration_4_0, 
                      		"com.bichler.iec.Iec.LocatedVarDeclaration");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            this_EOL_5=(Token)match(input,RULE_EOL,FOLLOW_66); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_EOL_5, grammarAccess.getLocatedVarDeclarationsAccess().getEOLTerminalRuleCall_3()); 
                  
            }
            // InternalIec.g:6817:1: ( ( (lv_locatedVarDeclaration_6_0= ruleLocatedVarDeclaration ) ) this_EOL_7= RULE_EOL )*
            loop101:
            do {
                int alt101=2;
                int LA101_0 = input.LA(1);

                if ( ((LA101_0>=RULE_LETTER && LA101_0<=RULE_ID)||LA101_0==124) ) {
                    alt101=1;
                }


                switch (alt101) {
            	case 1 :
            	    // InternalIec.g:6817:2: ( (lv_locatedVarDeclaration_6_0= ruleLocatedVarDeclaration ) ) this_EOL_7= RULE_EOL
            	    {
            	    // InternalIec.g:6817:2: ( (lv_locatedVarDeclaration_6_0= ruleLocatedVarDeclaration ) )
            	    // InternalIec.g:6818:1: (lv_locatedVarDeclaration_6_0= ruleLocatedVarDeclaration )
            	    {
            	    // InternalIec.g:6818:1: (lv_locatedVarDeclaration_6_0= ruleLocatedVarDeclaration )
            	    // InternalIec.g:6819:3: lv_locatedVarDeclaration_6_0= ruleLocatedVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLocatedVarDeclarationsAccess().getLocatedVarDeclarationLocatedVarDeclarationParserRuleCall_4_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_locatedVarDeclaration_6_0=ruleLocatedVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLocatedVarDeclarationsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"locatedVarDeclaration",
            	              		lv_locatedVarDeclaration_6_0, 
            	              		"com.bichler.iec.Iec.LocatedVarDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    this_EOL_7=(Token)match(input,RULE_EOL,FOLLOW_66); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_EOL_7, grammarAccess.getLocatedVarDeclarationsAccess().getEOLTerminalRuleCall_4_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop101;
                }
            } while (true);

            otherlv_8=(Token)match(input,100,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getLocatedVarDeclarationsAccess().getEND_VARKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocatedVarDeclarations"


    // $ANTLR start "entryRuleLocatedVarDeclaration"
    // InternalIec.g:6851:1: entryRuleLocatedVarDeclaration returns [EObject current=null] : iv_ruleLocatedVarDeclaration= ruleLocatedVarDeclaration EOF ;
    public final EObject entryRuleLocatedVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLocatedVarDeclaration = null;


        try {
            // InternalIec.g:6852:2: (iv_ruleLocatedVarDeclaration= ruleLocatedVarDeclaration EOF )
            // InternalIec.g:6853:2: iv_ruleLocatedVarDeclaration= ruleLocatedVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocatedVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLocatedVarDeclaration=ruleLocatedVarDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocatedVarDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocatedVarDeclaration"


    // $ANTLR start "ruleLocatedVarDeclaration"
    // InternalIec.g:6860:1: ruleLocatedVarDeclaration returns [EObject current=null] : ( ( (lv_name_0_0= ruleIdentifier ) )? ( (lv_location_1_0= ruleLocation ) ) otherlv_2= ':' ( (lv_specInit_3_0= ruleSpecInit ) ) ) ;
    public final EObject ruleLocatedVarDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_location_1_0 = null;

        EObject lv_specInit_3_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:6863:28: ( ( ( (lv_name_0_0= ruleIdentifier ) )? ( (lv_location_1_0= ruleLocation ) ) otherlv_2= ':' ( (lv_specInit_3_0= ruleSpecInit ) ) ) )
            // InternalIec.g:6864:1: ( ( (lv_name_0_0= ruleIdentifier ) )? ( (lv_location_1_0= ruleLocation ) ) otherlv_2= ':' ( (lv_specInit_3_0= ruleSpecInit ) ) )
            {
            // InternalIec.g:6864:1: ( ( (lv_name_0_0= ruleIdentifier ) )? ( (lv_location_1_0= ruleLocation ) ) otherlv_2= ':' ( (lv_specInit_3_0= ruleSpecInit ) ) )
            // InternalIec.g:6864:2: ( (lv_name_0_0= ruleIdentifier ) )? ( (lv_location_1_0= ruleLocation ) ) otherlv_2= ':' ( (lv_specInit_3_0= ruleSpecInit ) )
            {
            // InternalIec.g:6864:2: ( (lv_name_0_0= ruleIdentifier ) )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( ((LA102_0>=RULE_LETTER && LA102_0<=RULE_ID)) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalIec.g:6865:1: (lv_name_0_0= ruleIdentifier )
                    {
                    // InternalIec.g:6865:1: (lv_name_0_0= ruleIdentifier )
                    // InternalIec.g:6866:3: lv_name_0_0= ruleIdentifier
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLocatedVarDeclarationAccess().getNameIdentifierParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_65);
                    lv_name_0_0=ruleIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLocatedVarDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_0_0, 
                              		"com.bichler.iec.Iec.Identifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalIec.g:6882:3: ( (lv_location_1_0= ruleLocation ) )
            // InternalIec.g:6883:1: (lv_location_1_0= ruleLocation )
            {
            // InternalIec.g:6883:1: (lv_location_1_0= ruleLocation )
            // InternalIec.g:6884:3: lv_location_1_0= ruleLocation
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLocatedVarDeclarationAccess().getLocationLocationParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_5);
            lv_location_1_0=ruleLocation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLocatedVarDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"location",
                      		lv_location_1_0, 
                      		"com.bichler.iec.Iec.Location");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,64,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getLocatedVarDeclarationAccess().getColonKeyword_2());
                  
            }
            // InternalIec.g:6904:1: ( (lv_specInit_3_0= ruleSpecInit ) )
            // InternalIec.g:6905:1: (lv_specInit_3_0= ruleSpecInit )
            {
            // InternalIec.g:6905:1: (lv_specInit_3_0= ruleSpecInit )
            // InternalIec.g:6906:3: lv_specInit_3_0= ruleSpecInit
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLocatedVarDeclarationAccess().getSpecInitSpecInitParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_specInit_3_0=ruleSpecInit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLocatedVarDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"specInit",
                      		lv_specInit_3_0, 
                      		"com.bichler.iec.Iec.SpecInit");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocatedVarDeclaration"


    // $ANTLR start "entryRuleLocation"
    // InternalIec.g:6930:1: entryRuleLocation returns [EObject current=null] : iv_ruleLocation= ruleLocation EOF ;
    public final EObject entryRuleLocation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLocation = null;


        try {
            // InternalIec.g:6931:2: (iv_ruleLocation= ruleLocation EOF )
            // InternalIec.g:6932:2: iv_ruleLocation= ruleLocation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLocation=ruleLocation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocation"


    // $ANTLR start "ruleLocation"
    // InternalIec.g:6939:1: ruleLocation returns [EObject current=null] : (otherlv_0= 'AT' ( (lv_directVariable_1_0= ruleDirectVariable ) ) ) ;
    public final EObject ruleLocation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_directVariable_1_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:6942:28: ( (otherlv_0= 'AT' ( (lv_directVariable_1_0= ruleDirectVariable ) ) ) )
            // InternalIec.g:6943:1: (otherlv_0= 'AT' ( (lv_directVariable_1_0= ruleDirectVariable ) ) )
            {
            // InternalIec.g:6943:1: (otherlv_0= 'AT' ( (lv_directVariable_1_0= ruleDirectVariable ) ) )
            // InternalIec.g:6943:3: otherlv_0= 'AT' ( (lv_directVariable_1_0= ruleDirectVariable ) )
            {
            otherlv_0=(Token)match(input,124,FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getLocationAccess().getATKeyword_0());
                  
            }
            // InternalIec.g:6947:1: ( (lv_directVariable_1_0= ruleDirectVariable ) )
            // InternalIec.g:6948:1: (lv_directVariable_1_0= ruleDirectVariable )
            {
            // InternalIec.g:6948:1: (lv_directVariable_1_0= ruleDirectVariable )
            // InternalIec.g:6949:3: lv_directVariable_1_0= ruleDirectVariable
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLocationAccess().getDirectVariableDirectVariableParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_directVariable_1_0=ruleDirectVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLocationRule());
              	        }
                     		set(
                     			current, 
                     			"directVariable",
                      		lv_directVariable_1_0, 
                      		"com.bichler.iec.Iec.DirectVariable");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocation"


    // $ANTLR start "entryRuleProgramAccessDecls"
    // InternalIec.g:6973:1: entryRuleProgramAccessDecls returns [EObject current=null] : iv_ruleProgramAccessDecls= ruleProgramAccessDecls EOF ;
    public final EObject entryRuleProgramAccessDecls() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProgramAccessDecls = null;


        try {
            // InternalIec.g:6974:2: (iv_ruleProgramAccessDecls= ruleProgramAccessDecls EOF )
            // InternalIec.g:6975:2: iv_ruleProgramAccessDecls= ruleProgramAccessDecls EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProgramAccessDeclsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleProgramAccessDecls=ruleProgramAccessDecls();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProgramAccessDecls; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProgramAccessDecls"


    // $ANTLR start "ruleProgramAccessDecls"
    // InternalIec.g:6982:1: ruleProgramAccessDecls returns [EObject current=null] : (otherlv_0= 'VAR_ACCESS' ( (lv_programAccessDecl_1_0= ruleProgramAccessDecl ) ) this_EOL_2= RULE_EOL ( ( (lv_programAccessDecl_3_0= ruleProgramAccessDecl ) ) this_EOL_4= RULE_EOL )* otherlv_5= 'END_VAR' ) ;
    public final EObject ruleProgramAccessDecls() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_EOL_2=null;
        Token this_EOL_4=null;
        Token otherlv_5=null;
        EObject lv_programAccessDecl_1_0 = null;

        EObject lv_programAccessDecl_3_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:6985:28: ( (otherlv_0= 'VAR_ACCESS' ( (lv_programAccessDecl_1_0= ruleProgramAccessDecl ) ) this_EOL_2= RULE_EOL ( ( (lv_programAccessDecl_3_0= ruleProgramAccessDecl ) ) this_EOL_4= RULE_EOL )* otherlv_5= 'END_VAR' ) )
            // InternalIec.g:6986:1: (otherlv_0= 'VAR_ACCESS' ( (lv_programAccessDecl_1_0= ruleProgramAccessDecl ) ) this_EOL_2= RULE_EOL ( ( (lv_programAccessDecl_3_0= ruleProgramAccessDecl ) ) this_EOL_4= RULE_EOL )* otherlv_5= 'END_VAR' )
            {
            // InternalIec.g:6986:1: (otherlv_0= 'VAR_ACCESS' ( (lv_programAccessDecl_1_0= ruleProgramAccessDecl ) ) this_EOL_2= RULE_EOL ( ( (lv_programAccessDecl_3_0= ruleProgramAccessDecl ) ) this_EOL_4= RULE_EOL )* otherlv_5= 'END_VAR' )
            // InternalIec.g:6986:3: otherlv_0= 'VAR_ACCESS' ( (lv_programAccessDecl_1_0= ruleProgramAccessDecl ) ) this_EOL_2= RULE_EOL ( ( (lv_programAccessDecl_3_0= ruleProgramAccessDecl ) ) this_EOL_4= RULE_EOL )* otherlv_5= 'END_VAR'
            {
            otherlv_0=(Token)match(input,125,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getProgramAccessDeclsAccess().getVAR_ACCESSKeyword_0());
                  
            }
            // InternalIec.g:6990:1: ( (lv_programAccessDecl_1_0= ruleProgramAccessDecl ) )
            // InternalIec.g:6991:1: (lv_programAccessDecl_1_0= ruleProgramAccessDecl )
            {
            // InternalIec.g:6991:1: (lv_programAccessDecl_1_0= ruleProgramAccessDecl )
            // InternalIec.g:6992:3: lv_programAccessDecl_1_0= ruleProgramAccessDecl
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getProgramAccessDeclsAccess().getProgramAccessDeclProgramAccessDeclParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_programAccessDecl_1_0=ruleProgramAccessDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getProgramAccessDeclsRule());
              	        }
                     		add(
                     			current, 
                     			"programAccessDecl",
                      		lv_programAccessDecl_1_0, 
                      		"com.bichler.iec.Iec.ProgramAccessDecl");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            this_EOL_2=(Token)match(input,RULE_EOL,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_EOL_2, grammarAccess.getProgramAccessDeclsAccess().getEOLTerminalRuleCall_2()); 
                  
            }
            // InternalIec.g:7012:1: ( ( (lv_programAccessDecl_3_0= ruleProgramAccessDecl ) ) this_EOL_4= RULE_EOL )*
            loop103:
            do {
                int alt103=2;
                int LA103_0 = input.LA(1);

                if ( ((LA103_0>=RULE_LETTER && LA103_0<=RULE_ID)) ) {
                    alt103=1;
                }


                switch (alt103) {
            	case 1 :
            	    // InternalIec.g:7012:2: ( (lv_programAccessDecl_3_0= ruleProgramAccessDecl ) ) this_EOL_4= RULE_EOL
            	    {
            	    // InternalIec.g:7012:2: ( (lv_programAccessDecl_3_0= ruleProgramAccessDecl ) )
            	    // InternalIec.g:7013:1: (lv_programAccessDecl_3_0= ruleProgramAccessDecl )
            	    {
            	    // InternalIec.g:7013:1: (lv_programAccessDecl_3_0= ruleProgramAccessDecl )
            	    // InternalIec.g:7014:3: lv_programAccessDecl_3_0= ruleProgramAccessDecl
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getProgramAccessDeclsAccess().getProgramAccessDeclProgramAccessDeclParserRuleCall_3_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_programAccessDecl_3_0=ruleProgramAccessDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getProgramAccessDeclsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"programAccessDecl",
            	              		lv_programAccessDecl_3_0, 
            	              		"com.bichler.iec.Iec.ProgramAccessDecl");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    this_EOL_4=(Token)match(input,RULE_EOL,FOLLOW_43); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_EOL_4, grammarAccess.getProgramAccessDeclsAccess().getEOLTerminalRuleCall_3_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop103;
                }
            } while (true);

            otherlv_5=(Token)match(input,100,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getProgramAccessDeclsAccess().getEND_VARKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProgramAccessDecls"


    // $ANTLR start "entryRuleProgramAccessDecl"
    // InternalIec.g:7046:1: entryRuleProgramAccessDecl returns [EObject current=null] : iv_ruleProgramAccessDecl= ruleProgramAccessDecl EOF ;
    public final EObject entryRuleProgramAccessDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProgramAccessDecl = null;


        try {
            // InternalIec.g:7047:2: (iv_ruleProgramAccessDecl= ruleProgramAccessDecl EOF )
            // InternalIec.g:7048:2: iv_ruleProgramAccessDecl= ruleProgramAccessDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProgramAccessDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleProgramAccessDecl=ruleProgramAccessDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProgramAccessDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProgramAccessDecl"


    // $ANTLR start "ruleProgramAccessDecl"
    // InternalIec.g:7055:1: ruleProgramAccessDecl returns [EObject current=null] : ( ( (lv_accessName_0_0= ruleVariable ) ) otherlv_1= ':' ( (lv_symbolicVariable_2_0= ruleNamedVariableAccess ) ) otherlv_3= ':' ( (lv_typeName_4_0= ruleNonGenericType ) ) ( (lv_direction_5_0= ruleDirection ) )? ) ;
    public final EObject ruleProgramAccessDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_accessName_0_0 = null;

        EObject lv_symbolicVariable_2_0 = null;

        EObject lv_typeName_4_0 = null;

        AntlrDatatypeRuleToken lv_direction_5_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:7058:28: ( ( ( (lv_accessName_0_0= ruleVariable ) ) otherlv_1= ':' ( (lv_symbolicVariable_2_0= ruleNamedVariableAccess ) ) otherlv_3= ':' ( (lv_typeName_4_0= ruleNonGenericType ) ) ( (lv_direction_5_0= ruleDirection ) )? ) )
            // InternalIec.g:7059:1: ( ( (lv_accessName_0_0= ruleVariable ) ) otherlv_1= ':' ( (lv_symbolicVariable_2_0= ruleNamedVariableAccess ) ) otherlv_3= ':' ( (lv_typeName_4_0= ruleNonGenericType ) ) ( (lv_direction_5_0= ruleDirection ) )? )
            {
            // InternalIec.g:7059:1: ( ( (lv_accessName_0_0= ruleVariable ) ) otherlv_1= ':' ( (lv_symbolicVariable_2_0= ruleNamedVariableAccess ) ) otherlv_3= ':' ( (lv_typeName_4_0= ruleNonGenericType ) ) ( (lv_direction_5_0= ruleDirection ) )? )
            // InternalIec.g:7059:2: ( (lv_accessName_0_0= ruleVariable ) ) otherlv_1= ':' ( (lv_symbolicVariable_2_0= ruleNamedVariableAccess ) ) otherlv_3= ':' ( (lv_typeName_4_0= ruleNonGenericType ) ) ( (lv_direction_5_0= ruleDirection ) )?
            {
            // InternalIec.g:7059:2: ( (lv_accessName_0_0= ruleVariable ) )
            // InternalIec.g:7060:1: (lv_accessName_0_0= ruleVariable )
            {
            // InternalIec.g:7060:1: (lv_accessName_0_0= ruleVariable )
            // InternalIec.g:7061:3: lv_accessName_0_0= ruleVariable
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getProgramAccessDeclAccess().getAccessNameVariableParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_5);
            lv_accessName_0_0=ruleVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getProgramAccessDeclRule());
              	        }
                     		set(
                     			current, 
                     			"accessName",
                      		lv_accessName_0_0, 
                      		"com.bichler.iec.Iec.Variable");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,64,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getProgramAccessDeclAccess().getColonKeyword_1());
                  
            }
            // InternalIec.g:7081:1: ( (lv_symbolicVariable_2_0= ruleNamedVariableAccess ) )
            // InternalIec.g:7082:1: (lv_symbolicVariable_2_0= ruleNamedVariableAccess )
            {
            // InternalIec.g:7082:1: (lv_symbolicVariable_2_0= ruleNamedVariableAccess )
            // InternalIec.g:7083:3: lv_symbolicVariable_2_0= ruleNamedVariableAccess
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getProgramAccessDeclAccess().getSymbolicVariableNamedVariableAccessParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_5);
            lv_symbolicVariable_2_0=ruleNamedVariableAccess();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getProgramAccessDeclRule());
              	        }
                     		set(
                     			current, 
                     			"symbolicVariable",
                      		lv_symbolicVariable_2_0, 
                      		"com.bichler.iec.Iec.NamedVariableAccess");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,64,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getProgramAccessDeclAccess().getColonKeyword_3());
                  
            }
            // InternalIec.g:7103:1: ( (lv_typeName_4_0= ruleNonGenericType ) )
            // InternalIec.g:7104:1: (lv_typeName_4_0= ruleNonGenericType )
            {
            // InternalIec.g:7104:1: (lv_typeName_4_0= ruleNonGenericType )
            // InternalIec.g:7105:3: lv_typeName_4_0= ruleNonGenericType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getProgramAccessDeclAccess().getTypeNameNonGenericTypeParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_68);
            lv_typeName_4_0=ruleNonGenericType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getProgramAccessDeclRule());
              	        }
                     		set(
                     			current, 
                     			"typeName",
                      		lv_typeName_4_0, 
                      		"com.bichler.iec.Iec.NonGenericType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:7121:2: ( (lv_direction_5_0= ruleDirection ) )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( ((LA104_0>=126 && LA104_0<=127)) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalIec.g:7122:1: (lv_direction_5_0= ruleDirection )
                    {
                    // InternalIec.g:7122:1: (lv_direction_5_0= ruleDirection )
                    // InternalIec.g:7123:3: lv_direction_5_0= ruleDirection
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getProgramAccessDeclAccess().getDirectionDirectionParserRuleCall_5_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_direction_5_0=ruleDirection();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getProgramAccessDeclRule());
                      	        }
                             		set(
                             			current, 
                             			"direction",
                              		lv_direction_5_0, 
                              		"com.bichler.iec.Iec.Direction");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProgramAccessDecl"


    // $ANTLR start "entryRuleDirection"
    // InternalIec.g:7147:1: entryRuleDirection returns [String current=null] : iv_ruleDirection= ruleDirection EOF ;
    public final String entryRuleDirection() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDirection = null;


        try {
            // InternalIec.g:7148:2: (iv_ruleDirection= ruleDirection EOF )
            // InternalIec.g:7149:2: iv_ruleDirection= ruleDirection EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDirectionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDirection=ruleDirection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDirection.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDirection"


    // $ANTLR start "ruleDirection"
    // InternalIec.g:7156:1: ruleDirection returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'READ_WRITE' | kw= 'READ_ONLY' ) ;
    public final AntlrDatatypeRuleToken ruleDirection() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalIec.g:7159:28: ( (kw= 'READ_WRITE' | kw= 'READ_ONLY' ) )
            // InternalIec.g:7160:1: (kw= 'READ_WRITE' | kw= 'READ_ONLY' )
            {
            // InternalIec.g:7160:1: (kw= 'READ_WRITE' | kw= 'READ_ONLY' )
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==126) ) {
                alt105=1;
            }
            else if ( (LA105_0==127) ) {
                alt105=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 105, 0, input);

                throw nvae;
            }
            switch (alt105) {
                case 1 :
                    // InternalIec.g:7161:2: kw= 'READ_WRITE'
                    {
                    kw=(Token)match(input,126,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getDirectionAccess().getREAD_WRITEKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:7168:2: kw= 'READ_ONLY'
                    {
                    kw=(Token)match(input,127,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getDirectionAccess().getREAD_ONLYKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDirection"


    // $ANTLR start "entryRuleConfigurationDeclaration"
    // InternalIec.g:7181:1: entryRuleConfigurationDeclaration returns [EObject current=null] : iv_ruleConfigurationDeclaration= ruleConfigurationDeclaration EOF ;
    public final EObject entryRuleConfigurationDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConfigurationDeclaration = null;


        try {
            // InternalIec.g:7182:2: (iv_ruleConfigurationDeclaration= ruleConfigurationDeclaration EOF )
            // InternalIec.g:7183:2: iv_ruleConfigurationDeclaration= ruleConfigurationDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConfigurationDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConfigurationDeclaration=ruleConfigurationDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConfigurationDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConfigurationDeclaration"


    // $ANTLR start "ruleConfigurationDeclaration"
    // InternalIec.g:7190:1: ruleConfigurationDeclaration returns [EObject current=null] : (otherlv_0= 'CONFIGURATION' ( (lv_name_1_0= ruleIdentifier ) ) ( (lv_globalVarDeclarations_2_0= ruleGlobalVarDeclarations ) )? ( (lv_resdecl_3_0= ruleResourceDeclaration ) ) otherlv_4= 'END_CONFIGURATION' ) ;
    public final EObject ruleConfigurationDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_globalVarDeclarations_2_0 = null;

        EObject lv_resdecl_3_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:7193:28: ( (otherlv_0= 'CONFIGURATION' ( (lv_name_1_0= ruleIdentifier ) ) ( (lv_globalVarDeclarations_2_0= ruleGlobalVarDeclarations ) )? ( (lv_resdecl_3_0= ruleResourceDeclaration ) ) otherlv_4= 'END_CONFIGURATION' ) )
            // InternalIec.g:7194:1: (otherlv_0= 'CONFIGURATION' ( (lv_name_1_0= ruleIdentifier ) ) ( (lv_globalVarDeclarations_2_0= ruleGlobalVarDeclarations ) )? ( (lv_resdecl_3_0= ruleResourceDeclaration ) ) otherlv_4= 'END_CONFIGURATION' )
            {
            // InternalIec.g:7194:1: (otherlv_0= 'CONFIGURATION' ( (lv_name_1_0= ruleIdentifier ) ) ( (lv_globalVarDeclarations_2_0= ruleGlobalVarDeclarations ) )? ( (lv_resdecl_3_0= ruleResourceDeclaration ) ) otherlv_4= 'END_CONFIGURATION' )
            // InternalIec.g:7194:3: otherlv_0= 'CONFIGURATION' ( (lv_name_1_0= ruleIdentifier ) ) ( (lv_globalVarDeclarations_2_0= ruleGlobalVarDeclarations ) )? ( (lv_resdecl_3_0= ruleResourceDeclaration ) ) otherlv_4= 'END_CONFIGURATION'
            {
            otherlv_0=(Token)match(input,128,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getConfigurationDeclarationAccess().getCONFIGURATIONKeyword_0());
                  
            }
            // InternalIec.g:7198:1: ( (lv_name_1_0= ruleIdentifier ) )
            // InternalIec.g:7199:1: (lv_name_1_0= ruleIdentifier )
            {
            // InternalIec.g:7199:1: (lv_name_1_0= ruleIdentifier )
            // InternalIec.g:7200:3: lv_name_1_0= ruleIdentifier
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getConfigurationDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_69);
            lv_name_1_0=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getConfigurationDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"com.bichler.iec.Iec.Identifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:7216:2: ( (lv_globalVarDeclarations_2_0= ruleGlobalVarDeclarations ) )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==136) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalIec.g:7217:1: (lv_globalVarDeclarations_2_0= ruleGlobalVarDeclarations )
                    {
                    // InternalIec.g:7217:1: (lv_globalVarDeclarations_2_0= ruleGlobalVarDeclarations )
                    // InternalIec.g:7218:3: lv_globalVarDeclarations_2_0= ruleGlobalVarDeclarations
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConfigurationDeclarationAccess().getGlobalVarDeclarationsGlobalVarDeclarationsParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_70);
                    lv_globalVarDeclarations_2_0=ruleGlobalVarDeclarations();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConfigurationDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"globalVarDeclarations",
                              		lv_globalVarDeclarations_2_0, 
                              		"com.bichler.iec.Iec.GlobalVarDeclarations");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalIec.g:7234:3: ( (lv_resdecl_3_0= ruleResourceDeclaration ) )
            // InternalIec.g:7235:1: (lv_resdecl_3_0= ruleResourceDeclaration )
            {
            // InternalIec.g:7235:1: (lv_resdecl_3_0= ruleResourceDeclaration )
            // InternalIec.g:7236:3: lv_resdecl_3_0= ruleResourceDeclaration
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getConfigurationDeclarationAccess().getResdeclResourceDeclarationParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_71);
            lv_resdecl_3_0=ruleResourceDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getConfigurationDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"resdecl",
                      		lv_resdecl_3_0, 
                      		"com.bichler.iec.Iec.ResourceDeclaration");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,129,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getConfigurationDeclarationAccess().getEND_CONFIGURATIONKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConfigurationDeclaration"


    // $ANTLR start "entryRuleResourceDeclaration"
    // InternalIec.g:7264:1: entryRuleResourceDeclaration returns [EObject current=null] : iv_ruleResourceDeclaration= ruleResourceDeclaration EOF ;
    public final EObject entryRuleResourceDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleResourceDeclaration = null;


        try {
            // InternalIec.g:7265:2: (iv_ruleResourceDeclaration= ruleResourceDeclaration EOF )
            // InternalIec.g:7266:2: iv_ruleResourceDeclaration= ruleResourceDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getResourceDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleResourceDeclaration=ruleResourceDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleResourceDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleResourceDeclaration"


    // $ANTLR start "ruleResourceDeclaration"
    // InternalIec.g:7273:1: ruleResourceDeclaration returns [EObject current=null] : (otherlv_0= 'RESOURCE' ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= 'ON' ( (lv_resname_3_0= ruleIdentifier ) ) ( (lv_globalVarDeclarations_4_0= ruleGlobalVarDeclarations ) )? ( (lv_singleresource_5_0= ruleSingleResourceDeclaration ) ) otherlv_6= 'END_RESOURCE' ) ;
    public final EObject ruleResourceDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_resname_3_0 = null;

        EObject lv_globalVarDeclarations_4_0 = null;

        EObject lv_singleresource_5_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:7276:28: ( (otherlv_0= 'RESOURCE' ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= 'ON' ( (lv_resname_3_0= ruleIdentifier ) ) ( (lv_globalVarDeclarations_4_0= ruleGlobalVarDeclarations ) )? ( (lv_singleresource_5_0= ruleSingleResourceDeclaration ) ) otherlv_6= 'END_RESOURCE' ) )
            // InternalIec.g:7277:1: (otherlv_0= 'RESOURCE' ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= 'ON' ( (lv_resname_3_0= ruleIdentifier ) ) ( (lv_globalVarDeclarations_4_0= ruleGlobalVarDeclarations ) )? ( (lv_singleresource_5_0= ruleSingleResourceDeclaration ) ) otherlv_6= 'END_RESOURCE' )
            {
            // InternalIec.g:7277:1: (otherlv_0= 'RESOURCE' ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= 'ON' ( (lv_resname_3_0= ruleIdentifier ) ) ( (lv_globalVarDeclarations_4_0= ruleGlobalVarDeclarations ) )? ( (lv_singleresource_5_0= ruleSingleResourceDeclaration ) ) otherlv_6= 'END_RESOURCE' )
            // InternalIec.g:7277:3: otherlv_0= 'RESOURCE' ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= 'ON' ( (lv_resname_3_0= ruleIdentifier ) ) ( (lv_globalVarDeclarations_4_0= ruleGlobalVarDeclarations ) )? ( (lv_singleresource_5_0= ruleSingleResourceDeclaration ) ) otherlv_6= 'END_RESOURCE'
            {
            otherlv_0=(Token)match(input,130,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getResourceDeclarationAccess().getRESOURCEKeyword_0());
                  
            }
            // InternalIec.g:7281:1: ( (lv_name_1_0= ruleIdentifier ) )
            // InternalIec.g:7282:1: (lv_name_1_0= ruleIdentifier )
            {
            // InternalIec.g:7282:1: (lv_name_1_0= ruleIdentifier )
            // InternalIec.g:7283:3: lv_name_1_0= ruleIdentifier
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getResourceDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_72);
            lv_name_1_0=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getResourceDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"com.bichler.iec.Iec.Identifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,131,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getResourceDeclarationAccess().getONKeyword_2());
                  
            }
            // InternalIec.g:7303:1: ( (lv_resname_3_0= ruleIdentifier ) )
            // InternalIec.g:7304:1: (lv_resname_3_0= ruleIdentifier )
            {
            // InternalIec.g:7304:1: (lv_resname_3_0= ruleIdentifier )
            // InternalIec.g:7305:3: lv_resname_3_0= ruleIdentifier
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getResourceDeclarationAccess().getResnameIdentifierParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_73);
            lv_resname_3_0=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getResourceDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"resname",
                      		lv_resname_3_0, 
                      		"com.bichler.iec.Iec.Identifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:7321:2: ( (lv_globalVarDeclarations_4_0= ruleGlobalVarDeclarations ) )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==136) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalIec.g:7322:1: (lv_globalVarDeclarations_4_0= ruleGlobalVarDeclarations )
                    {
                    // InternalIec.g:7322:1: (lv_globalVarDeclarations_4_0= ruleGlobalVarDeclarations )
                    // InternalIec.g:7323:3: lv_globalVarDeclarations_4_0= ruleGlobalVarDeclarations
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getResourceDeclarationAccess().getGlobalVarDeclarationsGlobalVarDeclarationsParserRuleCall_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_73);
                    lv_globalVarDeclarations_4_0=ruleGlobalVarDeclarations();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getResourceDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"globalVarDeclarations",
                              		lv_globalVarDeclarations_4_0, 
                              		"com.bichler.iec.Iec.GlobalVarDeclarations");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalIec.g:7339:3: ( (lv_singleresource_5_0= ruleSingleResourceDeclaration ) )
            // InternalIec.g:7340:1: (lv_singleresource_5_0= ruleSingleResourceDeclaration )
            {
            // InternalIec.g:7340:1: (lv_singleresource_5_0= ruleSingleResourceDeclaration )
            // InternalIec.g:7341:3: lv_singleresource_5_0= ruleSingleResourceDeclaration
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getResourceDeclarationAccess().getSingleresourceSingleResourceDeclarationParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_74);
            lv_singleresource_5_0=ruleSingleResourceDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getResourceDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"singleresource",
                      		lv_singleresource_5_0, 
                      		"com.bichler.iec.Iec.SingleResourceDeclaration");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_6=(Token)match(input,132,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getResourceDeclarationAccess().getEND_RESOURCEKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleResourceDeclaration"


    // $ANTLR start "entryRuleSingleResourceDeclaration"
    // InternalIec.g:7369:1: entryRuleSingleResourceDeclaration returns [EObject current=null] : iv_ruleSingleResourceDeclaration= ruleSingleResourceDeclaration EOF ;
    public final EObject entryRuleSingleResourceDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSingleResourceDeclaration = null;


        try {
            // InternalIec.g:7370:2: (iv_ruleSingleResourceDeclaration= ruleSingleResourceDeclaration EOF )
            // InternalIec.g:7371:2: iv_ruleSingleResourceDeclaration= ruleSingleResourceDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSingleResourceDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSingleResourceDeclaration=ruleSingleResourceDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSingleResourceDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSingleResourceDeclaration"


    // $ANTLR start "ruleSingleResourceDeclaration"
    // InternalIec.g:7378:1: ruleSingleResourceDeclaration returns [EObject current=null] : ( ( ( (lv_taskConf_0_0= ruleTaskConfiguration ) ) this_EOL_1= RULE_EOL )? ( ( (lv_programConf_2_0= ruleProgramConfiguration ) ) this_EOL_3= RULE_EOL ) ( ( (lv_programConf_4_0= ruleProgramConfiguration ) ) this_EOL_5= RULE_EOL )? ) ;
    public final EObject ruleSingleResourceDeclaration() throws RecognitionException {
        EObject current = null;

        Token this_EOL_1=null;
        Token this_EOL_3=null;
        Token this_EOL_5=null;
        EObject lv_taskConf_0_0 = null;

        EObject lv_programConf_2_0 = null;

        EObject lv_programConf_4_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:7381:28: ( ( ( ( (lv_taskConf_0_0= ruleTaskConfiguration ) ) this_EOL_1= RULE_EOL )? ( ( (lv_programConf_2_0= ruleProgramConfiguration ) ) this_EOL_3= RULE_EOL ) ( ( (lv_programConf_4_0= ruleProgramConfiguration ) ) this_EOL_5= RULE_EOL )? ) )
            // InternalIec.g:7382:1: ( ( ( (lv_taskConf_0_0= ruleTaskConfiguration ) ) this_EOL_1= RULE_EOL )? ( ( (lv_programConf_2_0= ruleProgramConfiguration ) ) this_EOL_3= RULE_EOL ) ( ( (lv_programConf_4_0= ruleProgramConfiguration ) ) this_EOL_5= RULE_EOL )? )
            {
            // InternalIec.g:7382:1: ( ( ( (lv_taskConf_0_0= ruleTaskConfiguration ) ) this_EOL_1= RULE_EOL )? ( ( (lv_programConf_2_0= ruleProgramConfiguration ) ) this_EOL_3= RULE_EOL ) ( ( (lv_programConf_4_0= ruleProgramConfiguration ) ) this_EOL_5= RULE_EOL )? )
            // InternalIec.g:7382:2: ( ( (lv_taskConf_0_0= ruleTaskConfiguration ) ) this_EOL_1= RULE_EOL )? ( ( (lv_programConf_2_0= ruleProgramConfiguration ) ) this_EOL_3= RULE_EOL ) ( ( (lv_programConf_4_0= ruleProgramConfiguration ) ) this_EOL_5= RULE_EOL )?
            {
            // InternalIec.g:7382:2: ( ( (lv_taskConf_0_0= ruleTaskConfiguration ) ) this_EOL_1= RULE_EOL )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==137) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalIec.g:7382:3: ( (lv_taskConf_0_0= ruleTaskConfiguration ) ) this_EOL_1= RULE_EOL
                    {
                    // InternalIec.g:7382:3: ( (lv_taskConf_0_0= ruleTaskConfiguration ) )
                    // InternalIec.g:7383:1: (lv_taskConf_0_0= ruleTaskConfiguration )
                    {
                    // InternalIec.g:7383:1: (lv_taskConf_0_0= ruleTaskConfiguration )
                    // InternalIec.g:7384:3: lv_taskConf_0_0= ruleTaskConfiguration
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSingleResourceDeclarationAccess().getTaskConfTaskConfigurationParserRuleCall_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_6);
                    lv_taskConf_0_0=ruleTaskConfiguration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSingleResourceDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"taskConf",
                              		lv_taskConf_0_0, 
                              		"com.bichler.iec.Iec.TaskConfiguration");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    this_EOL_1=(Token)match(input,RULE_EOL,FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_EOL_1, grammarAccess.getSingleResourceDeclarationAccess().getEOLTerminalRuleCall_0_1()); 
                          
                    }

                    }
                    break;

            }

            // InternalIec.g:7404:3: ( ( (lv_programConf_2_0= ruleProgramConfiguration ) ) this_EOL_3= RULE_EOL )
            // InternalIec.g:7404:4: ( (lv_programConf_2_0= ruleProgramConfiguration ) ) this_EOL_3= RULE_EOL
            {
            // InternalIec.g:7404:4: ( (lv_programConf_2_0= ruleProgramConfiguration ) )
            // InternalIec.g:7405:1: (lv_programConf_2_0= ruleProgramConfiguration )
            {
            // InternalIec.g:7405:1: (lv_programConf_2_0= ruleProgramConfiguration )
            // InternalIec.g:7406:3: lv_programConf_2_0= ruleProgramConfiguration
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSingleResourceDeclarationAccess().getProgramConfProgramConfigurationParserRuleCall_1_0_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_programConf_2_0=ruleProgramConfiguration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSingleResourceDeclarationRule());
              	        }
                     		add(
                     			current, 
                     			"programConf",
                      		lv_programConf_2_0, 
                      		"com.bichler.iec.Iec.ProgramConfiguration");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            this_EOL_3=(Token)match(input,RULE_EOL,FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_EOL_3, grammarAccess.getSingleResourceDeclarationAccess().getEOLTerminalRuleCall_1_1()); 
                  
            }

            }

            // InternalIec.g:7426:2: ( ( (lv_programConf_4_0= ruleProgramConfiguration ) ) this_EOL_5= RULE_EOL )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==122) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // InternalIec.g:7426:3: ( (lv_programConf_4_0= ruleProgramConfiguration ) ) this_EOL_5= RULE_EOL
                    {
                    // InternalIec.g:7426:3: ( (lv_programConf_4_0= ruleProgramConfiguration ) )
                    // InternalIec.g:7427:1: (lv_programConf_4_0= ruleProgramConfiguration )
                    {
                    // InternalIec.g:7427:1: (lv_programConf_4_0= ruleProgramConfiguration )
                    // InternalIec.g:7428:3: lv_programConf_4_0= ruleProgramConfiguration
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSingleResourceDeclarationAccess().getProgramConfProgramConfigurationParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_6);
                    lv_programConf_4_0=ruleProgramConfiguration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSingleResourceDeclarationRule());
                      	        }
                             		add(
                             			current, 
                             			"programConf",
                              		lv_programConf_4_0, 
                              		"com.bichler.iec.Iec.ProgramConfiguration");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    this_EOL_5=(Token)match(input,RULE_EOL,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_EOL_5, grammarAccess.getSingleResourceDeclarationAccess().getEOLTerminalRuleCall_2_1()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSingleResourceDeclaration"


    // $ANTLR start "entryRuleProgramConfiguration"
    // InternalIec.g:7456:1: entryRuleProgramConfiguration returns [EObject current=null] : iv_ruleProgramConfiguration= ruleProgramConfiguration EOF ;
    public final EObject entryRuleProgramConfiguration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProgramConfiguration = null;


        try {
            // InternalIec.g:7457:2: (iv_ruleProgramConfiguration= ruleProgramConfiguration EOF )
            // InternalIec.g:7458:2: iv_ruleProgramConfiguration= ruleProgramConfiguration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProgramConfigurationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleProgramConfiguration=ruleProgramConfiguration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProgramConfiguration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProgramConfiguration"


    // $ANTLR start "ruleProgramConfiguration"
    // InternalIec.g:7465:1: ruleProgramConfiguration returns [EObject current=null] : (otherlv_0= 'PROGRAM' (otherlv_1= 'RETAIN' | otherlv_2= 'NONRETAIN' )? ( (lv_name_3_0= ruleIdentifier ) ) (otherlv_4= 'WITH' ( ( ruleIdentifier ) ) )? otherlv_6= ':' ( ( ruleIdentifier ) ) (otherlv_8= '(' ( (lv_progConf_9_0= ruleProgConfElements ) ) otherlv_10= ')' )? ) ;
    public final EObject ruleProgramConfiguration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_progConf_9_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:7468:28: ( (otherlv_0= 'PROGRAM' (otherlv_1= 'RETAIN' | otherlv_2= 'NONRETAIN' )? ( (lv_name_3_0= ruleIdentifier ) ) (otherlv_4= 'WITH' ( ( ruleIdentifier ) ) )? otherlv_6= ':' ( ( ruleIdentifier ) ) (otherlv_8= '(' ( (lv_progConf_9_0= ruleProgConfElements ) ) otherlv_10= ')' )? ) )
            // InternalIec.g:7469:1: (otherlv_0= 'PROGRAM' (otherlv_1= 'RETAIN' | otherlv_2= 'NONRETAIN' )? ( (lv_name_3_0= ruleIdentifier ) ) (otherlv_4= 'WITH' ( ( ruleIdentifier ) ) )? otherlv_6= ':' ( ( ruleIdentifier ) ) (otherlv_8= '(' ( (lv_progConf_9_0= ruleProgConfElements ) ) otherlv_10= ')' )? )
            {
            // InternalIec.g:7469:1: (otherlv_0= 'PROGRAM' (otherlv_1= 'RETAIN' | otherlv_2= 'NONRETAIN' )? ( (lv_name_3_0= ruleIdentifier ) ) (otherlv_4= 'WITH' ( ( ruleIdentifier ) ) )? otherlv_6= ':' ( ( ruleIdentifier ) ) (otherlv_8= '(' ( (lv_progConf_9_0= ruleProgConfElements ) ) otherlv_10= ')' )? )
            // InternalIec.g:7469:3: otherlv_0= 'PROGRAM' (otherlv_1= 'RETAIN' | otherlv_2= 'NONRETAIN' )? ( (lv_name_3_0= ruleIdentifier ) ) (otherlv_4= 'WITH' ( ( ruleIdentifier ) ) )? otherlv_6= ':' ( ( ruleIdentifier ) ) (otherlv_8= '(' ( (lv_progConf_9_0= ruleProgConfElements ) ) otherlv_10= ')' )?
            {
            otherlv_0=(Token)match(input,122,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getProgramConfigurationAccess().getPROGRAMKeyword_0());
                  
            }
            // InternalIec.g:7473:1: (otherlv_1= 'RETAIN' | otherlv_2= 'NONRETAIN' )?
            int alt110=3;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==98) ) {
                alt110=1;
            }
            else if ( (LA110_0==133) ) {
                alt110=2;
            }
            switch (alt110) {
                case 1 :
                    // InternalIec.g:7473:3: otherlv_1= 'RETAIN'
                    {
                    otherlv_1=(Token)match(input,98,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getProgramConfigurationAccess().getRETAINKeyword_1_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:7478:7: otherlv_2= 'NONRETAIN'
                    {
                    otherlv_2=(Token)match(input,133,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getProgramConfigurationAccess().getNONRETAINKeyword_1_1());
                          
                    }

                    }
                    break;

            }

            // InternalIec.g:7482:3: ( (lv_name_3_0= ruleIdentifier ) )
            // InternalIec.g:7483:1: (lv_name_3_0= ruleIdentifier )
            {
            // InternalIec.g:7483:1: (lv_name_3_0= ruleIdentifier )
            // InternalIec.g:7484:3: lv_name_3_0= ruleIdentifier
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getProgramConfigurationAccess().getNameIdentifierParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_77);
            lv_name_3_0=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getProgramConfigurationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_3_0, 
                      		"com.bichler.iec.Iec.Identifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:7500:2: (otherlv_4= 'WITH' ( ( ruleIdentifier ) ) )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==134) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalIec.g:7500:4: otherlv_4= 'WITH' ( ( ruleIdentifier ) )
                    {
                    otherlv_4=(Token)match(input,134,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getProgramConfigurationAccess().getWITHKeyword_3_0());
                          
                    }
                    // InternalIec.g:7504:1: ( ( ruleIdentifier ) )
                    // InternalIec.g:7505:1: ( ruleIdentifier )
                    {
                    // InternalIec.g:7505:1: ( ruleIdentifier )
                    // InternalIec.g:7506:3: ruleIdentifier
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getProgramConfigurationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getProgramConfigurationAccess().getTaskTaskConfigurationCrossReference_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_5);
                    ruleIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,64,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getProgramConfigurationAccess().getColonKeyword_4());
                  
            }
            // InternalIec.g:7523:1: ( ( ruleIdentifier ) )
            // InternalIec.g:7524:1: ( ruleIdentifier )
            {
            // InternalIec.g:7524:1: ( ruleIdentifier )
            // InternalIec.g:7525:3: ruleIdentifier
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getProgramConfigurationRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getProgramConfigurationAccess().getProgProgramDeclarationCrossReference_5_0()); 
              	    
            }
            pushFollow(FOLLOW_78);
            ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:7538:2: (otherlv_8= '(' ( (lv_progConf_9_0= ruleProgConfElements ) ) otherlv_10= ')' )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==67) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalIec.g:7538:4: otherlv_8= '(' ( (lv_progConf_9_0= ruleProgConfElements ) ) otherlv_10= ')'
                    {
                    otherlv_8=(Token)match(input,67,FOLLOW_79); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getProgramConfigurationAccess().getLeftParenthesisKeyword_6_0());
                          
                    }
                    // InternalIec.g:7542:1: ( (lv_progConf_9_0= ruleProgConfElements ) )
                    // InternalIec.g:7543:1: (lv_progConf_9_0= ruleProgConfElements )
                    {
                    // InternalIec.g:7543:1: (lv_progConf_9_0= ruleProgConfElements )
                    // InternalIec.g:7544:3: lv_progConf_9_0= ruleProgConfElements
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getProgramConfigurationAccess().getProgConfProgConfElementsParserRuleCall_6_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_13);
                    lv_progConf_9_0=ruleProgConfElements();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getProgramConfigurationRule());
                      	        }
                             		set(
                             			current, 
                             			"progConf",
                              		lv_progConf_9_0, 
                              		"com.bichler.iec.Iec.ProgConfElements");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_10=(Token)match(input,68,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getProgramConfigurationAccess().getRightParenthesisKeyword_6_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProgramConfiguration"


    // $ANTLR start "entryRuleProgConfElements"
    // InternalIec.g:7572:1: entryRuleProgConfElements returns [EObject current=null] : iv_ruleProgConfElements= ruleProgConfElements EOF ;
    public final EObject entryRuleProgConfElements() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProgConfElements = null;


        try {
            // InternalIec.g:7573:2: (iv_ruleProgConfElements= ruleProgConfElements EOF )
            // InternalIec.g:7574:2: iv_ruleProgConfElements= ruleProgConfElements EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProgConfElementsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleProgConfElements=ruleProgConfElements();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProgConfElements; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProgConfElements"


    // $ANTLR start "ruleProgConfElements"
    // InternalIec.g:7581:1: ruleProgConfElements returns [EObject current=null] : ( ( (lv_progconf_0_0= ruleProgConfElement ) ) (otherlv_1= ',' ( (lv_progconf_2_0= ruleProgConfElement ) ) )* ) ;
    public final EObject ruleProgConfElements() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_progconf_0_0 = null;

        EObject lv_progconf_2_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:7584:28: ( ( ( (lv_progconf_0_0= ruleProgConfElement ) ) (otherlv_1= ',' ( (lv_progconf_2_0= ruleProgConfElement ) ) )* ) )
            // InternalIec.g:7585:1: ( ( (lv_progconf_0_0= ruleProgConfElement ) ) (otherlv_1= ',' ( (lv_progconf_2_0= ruleProgConfElement ) ) )* )
            {
            // InternalIec.g:7585:1: ( ( (lv_progconf_0_0= ruleProgConfElement ) ) (otherlv_1= ',' ( (lv_progconf_2_0= ruleProgConfElement ) ) )* )
            // InternalIec.g:7585:2: ( (lv_progconf_0_0= ruleProgConfElement ) ) (otherlv_1= ',' ( (lv_progconf_2_0= ruleProgConfElement ) ) )*
            {
            // InternalIec.g:7585:2: ( (lv_progconf_0_0= ruleProgConfElement ) )
            // InternalIec.g:7586:1: (lv_progconf_0_0= ruleProgConfElement )
            {
            // InternalIec.g:7586:1: (lv_progconf_0_0= ruleProgConfElement )
            // InternalIec.g:7587:3: lv_progconf_0_0= ruleProgConfElement
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getProgConfElementsAccess().getProgconfProgConfElementParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_20);
            lv_progconf_0_0=ruleProgConfElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getProgConfElementsRule());
              	        }
                     		add(
                     			current, 
                     			"progconf",
                      		lv_progconf_0_0, 
                      		"com.bichler.iec.Iec.ProgConfElement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:7603:2: (otherlv_1= ',' ( (lv_progconf_2_0= ruleProgConfElement ) ) )*
            loop113:
            do {
                int alt113=2;
                int LA113_0 = input.LA(1);

                if ( (LA113_0==71) ) {
                    alt113=1;
                }


                switch (alt113) {
            	case 1 :
            	    // InternalIec.g:7603:4: otherlv_1= ',' ( (lv_progconf_2_0= ruleProgConfElement ) )
            	    {
            	    otherlv_1=(Token)match(input,71,FOLLOW_79); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getProgConfElementsAccess().getCommaKeyword_1_0());
            	          
            	    }
            	    // InternalIec.g:7607:1: ( (lv_progconf_2_0= ruleProgConfElement ) )
            	    // InternalIec.g:7608:1: (lv_progconf_2_0= ruleProgConfElement )
            	    {
            	    // InternalIec.g:7608:1: (lv_progconf_2_0= ruleProgConfElement )
            	    // InternalIec.g:7609:3: lv_progconf_2_0= ruleProgConfElement
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getProgConfElementsAccess().getProgconfProgConfElementParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_20);
            	    lv_progconf_2_0=ruleProgConfElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getProgConfElementsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"progconf",
            	              		lv_progconf_2_0, 
            	              		"com.bichler.iec.Iec.ProgConfElement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop113;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProgConfElements"


    // $ANTLR start "entryRuleProgConfElement"
    // InternalIec.g:7633:1: entryRuleProgConfElement returns [EObject current=null] : iv_ruleProgConfElement= ruleProgConfElement EOF ;
    public final EObject entryRuleProgConfElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProgConfElement = null;


        try {
            // InternalIec.g:7634:2: (iv_ruleProgConfElement= ruleProgConfElement EOF )
            // InternalIec.g:7635:2: iv_ruleProgConfElement= ruleProgConfElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProgConfElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleProgConfElement=ruleProgConfElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProgConfElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProgConfElement"


    // $ANTLR start "ruleProgConfElement"
    // InternalIec.g:7642:1: ruleProgConfElement returns [EObject current=null] : (this_FBTask_0= ruleFBTask | this_ProgCNXN_1= ruleProgCNXN ) ;
    public final EObject ruleProgConfElement() throws RecognitionException {
        EObject current = null;

        EObject this_FBTask_0 = null;

        EObject this_ProgCNXN_1 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:7645:28: ( (this_FBTask_0= ruleFBTask | this_ProgCNXN_1= ruleProgCNXN ) )
            // InternalIec.g:7646:1: (this_FBTask_0= ruleFBTask | this_ProgCNXN_1= ruleProgCNXN )
            {
            // InternalIec.g:7646:1: (this_FBTask_0= ruleFBTask | this_ProgCNXN_1= ruleProgCNXN )
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==118) ) {
                alt114=1;
            }
            else if ( ((LA114_0>=RULE_LETTER && LA114_0<=RULE_ID)||LA114_0==135) ) {
                alt114=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 114, 0, input);

                throw nvae;
            }
            switch (alt114) {
                case 1 :
                    // InternalIec.g:7647:5: this_FBTask_0= ruleFBTask
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getProgConfElementAccess().getFBTaskParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FBTask_0=ruleFBTask();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_FBTask_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:7657:5: this_ProgCNXN_1= ruleProgCNXN
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getProgConfElementAccess().getProgCNXNParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ProgCNXN_1=ruleProgCNXN();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ProgCNXN_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProgConfElement"


    // $ANTLR start "entryRuleFBTask"
    // InternalIec.g:7673:1: entryRuleFBTask returns [EObject current=null] : iv_ruleFBTask= ruleFBTask EOF ;
    public final EObject entryRuleFBTask() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFBTask = null;


        try {
            // InternalIec.g:7674:2: (iv_ruleFBTask= ruleFBTask EOF )
            // InternalIec.g:7675:2: iv_ruleFBTask= ruleFBTask EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFBTaskRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFBTask=ruleFBTask();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFBTask; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFBTask"


    // $ANTLR start "ruleFBTask"
    // InternalIec.g:7682:1: ruleFBTask returns [EObject current=null] : ( ( (lv_fbname_0_0= ruleFunctionBlockDeclaration ) ) otherlv_1= 'WITH' ( (lv_task_2_0= ruleTaskConfiguration ) ) ) ;
    public final EObject ruleFBTask() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_fbname_0_0 = null;

        EObject lv_task_2_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:7685:28: ( ( ( (lv_fbname_0_0= ruleFunctionBlockDeclaration ) ) otherlv_1= 'WITH' ( (lv_task_2_0= ruleTaskConfiguration ) ) ) )
            // InternalIec.g:7686:1: ( ( (lv_fbname_0_0= ruleFunctionBlockDeclaration ) ) otherlv_1= 'WITH' ( (lv_task_2_0= ruleTaskConfiguration ) ) )
            {
            // InternalIec.g:7686:1: ( ( (lv_fbname_0_0= ruleFunctionBlockDeclaration ) ) otherlv_1= 'WITH' ( (lv_task_2_0= ruleTaskConfiguration ) ) )
            // InternalIec.g:7686:2: ( (lv_fbname_0_0= ruleFunctionBlockDeclaration ) ) otherlv_1= 'WITH' ( (lv_task_2_0= ruleTaskConfiguration ) )
            {
            // InternalIec.g:7686:2: ( (lv_fbname_0_0= ruleFunctionBlockDeclaration ) )
            // InternalIec.g:7687:1: (lv_fbname_0_0= ruleFunctionBlockDeclaration )
            {
            // InternalIec.g:7687:1: (lv_fbname_0_0= ruleFunctionBlockDeclaration )
            // InternalIec.g:7688:3: lv_fbname_0_0= ruleFunctionBlockDeclaration
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFBTaskAccess().getFbnameFunctionBlockDeclarationParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_80);
            lv_fbname_0_0=ruleFunctionBlockDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFBTaskRule());
              	        }
                     		set(
                     			current, 
                     			"fbname",
                      		lv_fbname_0_0, 
                      		"com.bichler.iec.Iec.FunctionBlockDeclaration");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,134,FOLLOW_81); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getFBTaskAccess().getWITHKeyword_1());
                  
            }
            // InternalIec.g:7708:1: ( (lv_task_2_0= ruleTaskConfiguration ) )
            // InternalIec.g:7709:1: (lv_task_2_0= ruleTaskConfiguration )
            {
            // InternalIec.g:7709:1: (lv_task_2_0= ruleTaskConfiguration )
            // InternalIec.g:7710:3: lv_task_2_0= ruleTaskConfiguration
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFBTaskAccess().getTaskTaskConfigurationParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_task_2_0=ruleTaskConfiguration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFBTaskRule());
              	        }
                     		set(
                     			current, 
                     			"task",
                      		lv_task_2_0, 
                      		"com.bichler.iec.Iec.TaskConfiguration");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFBTask"


    // $ANTLR start "entryRuleProgCNXN"
    // InternalIec.g:7734:1: entryRuleProgCNXN returns [EObject current=null] : iv_ruleProgCNXN= ruleProgCNXN EOF ;
    public final EObject entryRuleProgCNXN() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProgCNXN = null;


        try {
            // InternalIec.g:7735:2: (iv_ruleProgCNXN= ruleProgCNXN EOF )
            // InternalIec.g:7736:2: iv_ruleProgCNXN= ruleProgCNXN EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProgCNXNRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleProgCNXN=ruleProgCNXN();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProgCNXN; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProgCNXN"


    // $ANTLR start "ruleProgCNXN"
    // InternalIec.g:7743:1: ruleProgCNXN returns [EObject current=null] : ( ( ( (lv_variablename_0_0= ruleIdentifier ) ) (otherlv_1= ':=' ( (lv_progd_2_0= ruleProgDataSource ) ) ) ) | (otherlv_3= '=>' ( (lv_progd_4_0= ruleDataSink ) ) ) ) ;
    public final EObject ruleProgCNXN() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_variablename_0_0 = null;

        EObject lv_progd_2_0 = null;

        EObject lv_progd_4_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:7746:28: ( ( ( ( (lv_variablename_0_0= ruleIdentifier ) ) (otherlv_1= ':=' ( (lv_progd_2_0= ruleProgDataSource ) ) ) ) | (otherlv_3= '=>' ( (lv_progd_4_0= ruleDataSink ) ) ) ) )
            // InternalIec.g:7747:1: ( ( ( (lv_variablename_0_0= ruleIdentifier ) ) (otherlv_1= ':=' ( (lv_progd_2_0= ruleProgDataSource ) ) ) ) | (otherlv_3= '=>' ( (lv_progd_4_0= ruleDataSink ) ) ) )
            {
            // InternalIec.g:7747:1: ( ( ( (lv_variablename_0_0= ruleIdentifier ) ) (otherlv_1= ':=' ( (lv_progd_2_0= ruleProgDataSource ) ) ) ) | (otherlv_3= '=>' ( (lv_progd_4_0= ruleDataSink ) ) ) )
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( ((LA115_0>=RULE_LETTER && LA115_0<=RULE_ID)) ) {
                alt115=1;
            }
            else if ( (LA115_0==135) ) {
                alt115=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 115, 0, input);

                throw nvae;
            }
            switch (alt115) {
                case 1 :
                    // InternalIec.g:7747:2: ( ( (lv_variablename_0_0= ruleIdentifier ) ) (otherlv_1= ':=' ( (lv_progd_2_0= ruleProgDataSource ) ) ) )
                    {
                    // InternalIec.g:7747:2: ( ( (lv_variablename_0_0= ruleIdentifier ) ) (otherlv_1= ':=' ( (lv_progd_2_0= ruleProgDataSource ) ) ) )
                    // InternalIec.g:7747:3: ( (lv_variablename_0_0= ruleIdentifier ) ) (otherlv_1= ':=' ( (lv_progd_2_0= ruleProgDataSource ) ) )
                    {
                    // InternalIec.g:7747:3: ( (lv_variablename_0_0= ruleIdentifier ) )
                    // InternalIec.g:7748:1: (lv_variablename_0_0= ruleIdentifier )
                    {
                    // InternalIec.g:7748:1: (lv_variablename_0_0= ruleIdentifier )
                    // InternalIec.g:7749:3: lv_variablename_0_0= ruleIdentifier
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getProgCNXNAccess().getVariablenameIdentifierParserRuleCall_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_25);
                    lv_variablename_0_0=ruleIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getProgCNXNRule());
                      	        }
                             		set(
                             			current, 
                             			"variablename",
                              		lv_variablename_0_0, 
                              		"com.bichler.iec.Iec.Identifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalIec.g:7765:2: (otherlv_1= ':=' ( (lv_progd_2_0= ruleProgDataSource ) ) )
                    // InternalIec.g:7765:4: otherlv_1= ':=' ( (lv_progd_2_0= ruleProgDataSource ) )
                    {
                    otherlv_1=(Token)match(input,66,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getProgCNXNAccess().getColonEqualsSignKeyword_0_1_0());
                          
                    }
                    // InternalIec.g:7769:1: ( (lv_progd_2_0= ruleProgDataSource ) )
                    // InternalIec.g:7770:1: (lv_progd_2_0= ruleProgDataSource )
                    {
                    // InternalIec.g:7770:1: (lv_progd_2_0= ruleProgDataSource )
                    // InternalIec.g:7771:3: lv_progd_2_0= ruleProgDataSource
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getProgCNXNAccess().getProgdProgDataSourceParserRuleCall_0_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_progd_2_0=ruleProgDataSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getProgCNXNRule());
                      	        }
                             		set(
                             			current, 
                             			"progd",
                              		lv_progd_2_0, 
                              		"com.bichler.iec.Iec.ProgDataSource");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIec.g:7788:6: (otherlv_3= '=>' ( (lv_progd_4_0= ruleDataSink ) ) )
                    {
                    // InternalIec.g:7788:6: (otherlv_3= '=>' ( (lv_progd_4_0= ruleDataSink ) ) )
                    // InternalIec.g:7788:8: otherlv_3= '=>' ( (lv_progd_4_0= ruleDataSink ) )
                    {
                    otherlv_3=(Token)match(input,135,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getProgCNXNAccess().getEqualsSignGreaterThanSignKeyword_1_0());
                          
                    }
                    // InternalIec.g:7792:1: ( (lv_progd_4_0= ruleDataSink ) )
                    // InternalIec.g:7793:1: (lv_progd_4_0= ruleDataSink )
                    {
                    // InternalIec.g:7793:1: (lv_progd_4_0= ruleDataSink )
                    // InternalIec.g:7794:3: lv_progd_4_0= ruleDataSink
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getProgCNXNAccess().getProgdDataSinkParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_progd_4_0=ruleDataSink();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getProgCNXNRule());
                      	        }
                             		set(
                             			current, 
                             			"progd",
                              		lv_progd_4_0, 
                              		"com.bichler.iec.Iec.DataSink");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProgCNXN"


    // $ANTLR start "entryRuleDataSink"
    // InternalIec.g:7818:1: entryRuleDataSink returns [EObject current=null] : iv_ruleDataSink= ruleDataSink EOF ;
    public final EObject entryRuleDataSink() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDataSink = null;


        try {
            // InternalIec.g:7819:2: (iv_ruleDataSink= ruleDataSink EOF )
            // InternalIec.g:7820:2: iv_ruleDataSink= ruleDataSink EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDataSinkRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDataSink=ruleDataSink();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDataSink; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDataSink"


    // $ANTLR start "ruleDataSink"
    // InternalIec.g:7827:1: ruleDataSink returns [EObject current=null] : ( ( (lv_globvar_0_0= ruleGlobalVar ) ) | ( (lv_dirvar_1_0= ruleDirectVariable ) ) ) ;
    public final EObject ruleDataSink() throws RecognitionException {
        EObject current = null;

        EObject lv_globvar_0_0 = null;

        EObject lv_dirvar_1_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:7830:28: ( ( ( (lv_globvar_0_0= ruleGlobalVar ) ) | ( (lv_dirvar_1_0= ruleDirectVariable ) ) ) )
            // InternalIec.g:7831:1: ( ( (lv_globvar_0_0= ruleGlobalVar ) ) | ( (lv_dirvar_1_0= ruleDirectVariable ) ) )
            {
            // InternalIec.g:7831:1: ( ( (lv_globvar_0_0= ruleGlobalVar ) ) | ( (lv_dirvar_1_0= ruleDirectVariable ) ) )
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( ((LA116_0>=RULE_LETTER && LA116_0<=RULE_ID)) ) {
                alt116=1;
            }
            else if ( (LA116_0==RULE_DIRECT_VARIABLE_ID) ) {
                alt116=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 116, 0, input);

                throw nvae;
            }
            switch (alt116) {
                case 1 :
                    // InternalIec.g:7831:2: ( (lv_globvar_0_0= ruleGlobalVar ) )
                    {
                    // InternalIec.g:7831:2: ( (lv_globvar_0_0= ruleGlobalVar ) )
                    // InternalIec.g:7832:1: (lv_globvar_0_0= ruleGlobalVar )
                    {
                    // InternalIec.g:7832:1: (lv_globvar_0_0= ruleGlobalVar )
                    // InternalIec.g:7833:3: lv_globvar_0_0= ruleGlobalVar
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDataSinkAccess().getGlobvarGlobalVarParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_globvar_0_0=ruleGlobalVar();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDataSinkRule());
                      	        }
                             		set(
                             			current, 
                             			"globvar",
                              		lv_globvar_0_0, 
                              		"com.bichler.iec.Iec.GlobalVar");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIec.g:7850:6: ( (lv_dirvar_1_0= ruleDirectVariable ) )
                    {
                    // InternalIec.g:7850:6: ( (lv_dirvar_1_0= ruleDirectVariable ) )
                    // InternalIec.g:7851:1: (lv_dirvar_1_0= ruleDirectVariable )
                    {
                    // InternalIec.g:7851:1: (lv_dirvar_1_0= ruleDirectVariable )
                    // InternalIec.g:7852:3: lv_dirvar_1_0= ruleDirectVariable
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDataSinkAccess().getDirvarDirectVariableParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_dirvar_1_0=ruleDirectVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDataSinkRule());
                      	        }
                             		set(
                             			current, 
                             			"dirvar",
                              		lv_dirvar_1_0, 
                              		"com.bichler.iec.Iec.DirectVariable");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataSink"


    // $ANTLR start "entryRuleProgDataSource"
    // InternalIec.g:7876:1: entryRuleProgDataSource returns [EObject current=null] : iv_ruleProgDataSource= ruleProgDataSource EOF ;
    public final EObject entryRuleProgDataSource() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProgDataSource = null;


        try {
            // InternalIec.g:7877:2: (iv_ruleProgDataSource= ruleProgDataSource EOF )
            // InternalIec.g:7878:2: iv_ruleProgDataSource= ruleProgDataSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProgDataSourceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleProgDataSource=ruleProgDataSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProgDataSource; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProgDataSource"


    // $ANTLR start "ruleProgDataSource"
    // InternalIec.g:7885:1: ruleProgDataSource returns [EObject current=null] : (this_Constant_0= ruleConstant | this_DirectVariable_1= ruleDirectVariable ) ;
    public final EObject ruleProgDataSource() throws RecognitionException {
        EObject current = null;

        EObject this_Constant_0 = null;

        EObject this_DirectVariable_1 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:7888:28: ( (this_Constant_0= ruleConstant | this_DirectVariable_1= ruleDirectVariable ) )
            // InternalIec.g:7889:1: (this_Constant_0= ruleConstant | this_DirectVariable_1= ruleDirectVariable )
            {
            // InternalIec.g:7889:1: (this_Constant_0= ruleConstant | this_DirectVariable_1= ruleDirectVariable )
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( ((LA117_0>=RULE_INT && LA117_0<=RULE_FIXED_POINT)||(LA117_0>=RULE_SINGLE_BYTE_STRING && LA117_0<=RULE_DOUBLE_BYTE_STRING)||LA117_0==RULE_DIGIT||(LA117_0>=33 && LA117_0<=42)||(LA117_0>=74 && LA117_0<=75)||(LA117_0>=141 && LA117_0<=156)) ) {
                alt117=1;
            }
            else if ( (LA117_0==RULE_DIRECT_VARIABLE_ID) ) {
                alt117=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 117, 0, input);

                throw nvae;
            }
            switch (alt117) {
                case 1 :
                    // InternalIec.g:7890:5: this_Constant_0= ruleConstant
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getProgDataSourceAccess().getConstantParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Constant_0=ruleConstant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Constant_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:7900:5: this_DirectVariable_1= ruleDirectVariable
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getProgDataSourceAccess().getDirectVariableParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DirectVariable_1=ruleDirectVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_DirectVariable_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProgDataSource"


    // $ANTLR start "entryRuleGlobalVarDeclarations"
    // InternalIec.g:7916:1: entryRuleGlobalVarDeclarations returns [EObject current=null] : iv_ruleGlobalVarDeclarations= ruleGlobalVarDeclarations EOF ;
    public final EObject entryRuleGlobalVarDeclarations() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGlobalVarDeclarations = null;


        try {
            // InternalIec.g:7917:2: (iv_ruleGlobalVarDeclarations= ruleGlobalVarDeclarations EOF )
            // InternalIec.g:7918:2: iv_ruleGlobalVarDeclarations= ruleGlobalVarDeclarations EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGlobalVarDeclarationsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGlobalVarDeclarations=ruleGlobalVarDeclarations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGlobalVarDeclarations; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGlobalVarDeclarations"


    // $ANTLR start "ruleGlobalVarDeclarations"
    // InternalIec.g:7925:1: ruleGlobalVarDeclarations returns [EObject current=null] : (otherlv_0= 'VAR_GLOBAL' (otherlv_1= 'CONSTANT' | otherlv_2= 'RETAIN' )? ( (lv_globalVarDecl_3_0= ruleGlobalVarDecl ) ) ( (lv_globalVarDecl_4_0= ruleGlobalVarDecl ) )* otherlv_5= 'END_VAR' ) ;
    public final EObject ruleGlobalVarDeclarations() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_globalVarDecl_3_0 = null;

        EObject lv_globalVarDecl_4_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:7928:28: ( (otherlv_0= 'VAR_GLOBAL' (otherlv_1= 'CONSTANT' | otherlv_2= 'RETAIN' )? ( (lv_globalVarDecl_3_0= ruleGlobalVarDecl ) ) ( (lv_globalVarDecl_4_0= ruleGlobalVarDecl ) )* otherlv_5= 'END_VAR' ) )
            // InternalIec.g:7929:1: (otherlv_0= 'VAR_GLOBAL' (otherlv_1= 'CONSTANT' | otherlv_2= 'RETAIN' )? ( (lv_globalVarDecl_3_0= ruleGlobalVarDecl ) ) ( (lv_globalVarDecl_4_0= ruleGlobalVarDecl ) )* otherlv_5= 'END_VAR' )
            {
            // InternalIec.g:7929:1: (otherlv_0= 'VAR_GLOBAL' (otherlv_1= 'CONSTANT' | otherlv_2= 'RETAIN' )? ( (lv_globalVarDecl_3_0= ruleGlobalVarDecl ) ) ( (lv_globalVarDecl_4_0= ruleGlobalVarDecl ) )* otherlv_5= 'END_VAR' )
            // InternalIec.g:7929:3: otherlv_0= 'VAR_GLOBAL' (otherlv_1= 'CONSTANT' | otherlv_2= 'RETAIN' )? ( (lv_globalVarDecl_3_0= ruleGlobalVarDecl ) ) ( (lv_globalVarDecl_4_0= ruleGlobalVarDecl ) )* otherlv_5= 'END_VAR'
            {
            otherlv_0=(Token)match(input,136,FOLLOW_84); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getGlobalVarDeclarationsAccess().getVAR_GLOBALKeyword_0());
                  
            }
            // InternalIec.g:7933:1: (otherlv_1= 'CONSTANT' | otherlv_2= 'RETAIN' )?
            int alt118=3;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==121) ) {
                alt118=1;
            }
            else if ( (LA118_0==98) ) {
                alt118=2;
            }
            switch (alt118) {
                case 1 :
                    // InternalIec.g:7933:3: otherlv_1= 'CONSTANT'
                    {
                    otherlv_1=(Token)match(input,121,FOLLOW_84); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getGlobalVarDeclarationsAccess().getCONSTANTKeyword_1_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:7938:7: otherlv_2= 'RETAIN'
                    {
                    otherlv_2=(Token)match(input,98,FOLLOW_84); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getGlobalVarDeclarationsAccess().getRETAINKeyword_1_1());
                          
                    }

                    }
                    break;

            }

            // InternalIec.g:7942:3: ( (lv_globalVarDecl_3_0= ruleGlobalVarDecl ) )
            // InternalIec.g:7943:1: (lv_globalVarDecl_3_0= ruleGlobalVarDecl )
            {
            // InternalIec.g:7943:1: (lv_globalVarDecl_3_0= ruleGlobalVarDecl )
            // InternalIec.g:7944:3: lv_globalVarDecl_3_0= ruleGlobalVarDecl
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getGlobalVarDeclarationsAccess().getGlobalVarDeclGlobalVarDeclParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_85);
            lv_globalVarDecl_3_0=ruleGlobalVarDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGlobalVarDeclarationsRule());
              	        }
                     		add(
                     			current, 
                     			"globalVarDecl",
                      		lv_globalVarDecl_3_0, 
                      		"com.bichler.iec.Iec.GlobalVarDecl");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:7960:2: ( (lv_globalVarDecl_4_0= ruleGlobalVarDecl ) )*
            loop119:
            do {
                int alt119=2;
                int LA119_0 = input.LA(1);

                if ( ((LA119_0>=RULE_LETTER && LA119_0<=RULE_ID)||LA119_0==124) ) {
                    alt119=1;
                }


                switch (alt119) {
            	case 1 :
            	    // InternalIec.g:7961:1: (lv_globalVarDecl_4_0= ruleGlobalVarDecl )
            	    {
            	    // InternalIec.g:7961:1: (lv_globalVarDecl_4_0= ruleGlobalVarDecl )
            	    // InternalIec.g:7962:3: lv_globalVarDecl_4_0= ruleGlobalVarDecl
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getGlobalVarDeclarationsAccess().getGlobalVarDeclGlobalVarDeclParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_85);
            	    lv_globalVarDecl_4_0=ruleGlobalVarDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getGlobalVarDeclarationsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"globalVarDecl",
            	              		lv_globalVarDecl_4_0, 
            	              		"com.bichler.iec.Iec.GlobalVarDecl");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop119;
                }
            } while (true);

            otherlv_5=(Token)match(input,100,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getGlobalVarDeclarationsAccess().getEND_VARKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGlobalVarDeclarations"


    // $ANTLR start "entryRuleGlobalVarDecl"
    // InternalIec.g:7990:1: entryRuleGlobalVarDecl returns [EObject current=null] : iv_ruleGlobalVarDecl= ruleGlobalVarDecl EOF ;
    public final EObject entryRuleGlobalVarDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGlobalVarDecl = null;


        try {
            // InternalIec.g:7991:2: (iv_ruleGlobalVarDecl= ruleGlobalVarDecl EOF )
            // InternalIec.g:7992:2: iv_ruleGlobalVarDecl= ruleGlobalVarDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGlobalVarDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGlobalVarDecl=ruleGlobalVarDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGlobalVarDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGlobalVarDecl"


    // $ANTLR start "ruleGlobalVarDecl"
    // InternalIec.g:7999:1: ruleGlobalVarDecl returns [EObject current=null] : ( ( (lv_spec_0_0= ruleGlobalVarSpec ) ) otherlv_1= ':' ( (lv_specInit_2_0= ruleSpecInit ) )? this_EOL_3= RULE_EOL ) ;
    public final EObject ruleGlobalVarDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_EOL_3=null;
        EObject lv_spec_0_0 = null;

        EObject lv_specInit_2_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:8002:28: ( ( ( (lv_spec_0_0= ruleGlobalVarSpec ) ) otherlv_1= ':' ( (lv_specInit_2_0= ruleSpecInit ) )? this_EOL_3= RULE_EOL ) )
            // InternalIec.g:8003:1: ( ( (lv_spec_0_0= ruleGlobalVarSpec ) ) otherlv_1= ':' ( (lv_specInit_2_0= ruleSpecInit ) )? this_EOL_3= RULE_EOL )
            {
            // InternalIec.g:8003:1: ( ( (lv_spec_0_0= ruleGlobalVarSpec ) ) otherlv_1= ':' ( (lv_specInit_2_0= ruleSpecInit ) )? this_EOL_3= RULE_EOL )
            // InternalIec.g:8003:2: ( (lv_spec_0_0= ruleGlobalVarSpec ) ) otherlv_1= ':' ( (lv_specInit_2_0= ruleSpecInit ) )? this_EOL_3= RULE_EOL
            {
            // InternalIec.g:8003:2: ( (lv_spec_0_0= ruleGlobalVarSpec ) )
            // InternalIec.g:8004:1: (lv_spec_0_0= ruleGlobalVarSpec )
            {
            // InternalIec.g:8004:1: (lv_spec_0_0= ruleGlobalVarSpec )
            // InternalIec.g:8005:3: lv_spec_0_0= ruleGlobalVarSpec
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getGlobalVarDeclAccess().getSpecGlobalVarSpecParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_5);
            lv_spec_0_0=ruleGlobalVarSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGlobalVarDeclRule());
              	        }
                     		set(
                     			current, 
                     			"spec",
                      		lv_spec_0_0, 
                      		"com.bichler.iec.Iec.GlobalVarSpec");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,64,FOLLOW_86); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getGlobalVarDeclAccess().getColonKeyword_1());
                  
            }
            // InternalIec.g:8025:1: ( (lv_specInit_2_0= ruleSpecInit ) )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( ((LA120_0>=RULE_LETTER && LA120_0<=RULE_ID)||(LA120_0>=30 && LA120_0<=52)) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // InternalIec.g:8026:1: (lv_specInit_2_0= ruleSpecInit )
                    {
                    // InternalIec.g:8026:1: (lv_specInit_2_0= ruleSpecInit )
                    // InternalIec.g:8027:3: lv_specInit_2_0= ruleSpecInit
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getGlobalVarDeclAccess().getSpecInitSpecInitParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_6);
                    lv_specInit_2_0=ruleSpecInit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getGlobalVarDeclRule());
                      	        }
                             		set(
                             			current, 
                             			"specInit",
                              		lv_specInit_2_0, 
                              		"com.bichler.iec.Iec.SpecInit");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            this_EOL_3=(Token)match(input,RULE_EOL,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_EOL_3, grammarAccess.getGlobalVarDeclAccess().getEOLTerminalRuleCall_3()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGlobalVarDecl"


    // $ANTLR start "entryRuleGlobalVarSpec"
    // InternalIec.g:8055:1: entryRuleGlobalVarSpec returns [EObject current=null] : iv_ruleGlobalVarSpec= ruleGlobalVarSpec EOF ;
    public final EObject entryRuleGlobalVarSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGlobalVarSpec = null;


        try {
            // InternalIec.g:8056:2: (iv_ruleGlobalVarSpec= ruleGlobalVarSpec EOF )
            // InternalIec.g:8057:2: iv_ruleGlobalVarSpec= ruleGlobalVarSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGlobalVarSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGlobalVarSpec=ruleGlobalVarSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGlobalVarSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGlobalVarSpec"


    // $ANTLR start "ruleGlobalVarSpec"
    // InternalIec.g:8064:1: ruleGlobalVarSpec returns [EObject current=null] : (this_GlobalVarList_0= ruleGlobalVarList | ( ( (lv_variable_1_0= ruleGlobalVar ) )? ( (lv_location_2_0= ruleLocation ) ) ) ) ;
    public final EObject ruleGlobalVarSpec() throws RecognitionException {
        EObject current = null;

        EObject this_GlobalVarList_0 = null;

        EObject lv_variable_1_0 = null;

        EObject lv_location_2_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:8067:28: ( (this_GlobalVarList_0= ruleGlobalVarList | ( ( (lv_variable_1_0= ruleGlobalVar ) )? ( (lv_location_2_0= ruleLocation ) ) ) ) )
            // InternalIec.g:8068:1: (this_GlobalVarList_0= ruleGlobalVarList | ( ( (lv_variable_1_0= ruleGlobalVar ) )? ( (lv_location_2_0= ruleLocation ) ) ) )
            {
            // InternalIec.g:8068:1: (this_GlobalVarList_0= ruleGlobalVarList | ( ( (lv_variable_1_0= ruleGlobalVar ) )? ( (lv_location_2_0= ruleLocation ) ) ) )
            int alt122=2;
            switch ( input.LA(1) ) {
            case RULE_LETTER:
                {
                int LA122_1 = input.LA(2);

                if ( (LA122_1==EOF||LA122_1==64||LA122_1==71) ) {
                    alt122=1;
                }
                else if ( (LA122_1==124) ) {
                    alt122=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 122, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA122_2 = input.LA(2);

                if ( (LA122_2==124) ) {
                    alt122=2;
                }
                else if ( (LA122_2==EOF||LA122_2==64||LA122_2==71) ) {
                    alt122=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 122, 2, input);

                    throw nvae;
                }
                }
                break;
            case 124:
                {
                alt122=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 122, 0, input);

                throw nvae;
            }

            switch (alt122) {
                case 1 :
                    // InternalIec.g:8069:5: this_GlobalVarList_0= ruleGlobalVarList
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getGlobalVarSpecAccess().getGlobalVarListParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_GlobalVarList_0=ruleGlobalVarList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_GlobalVarList_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:8078:6: ( ( (lv_variable_1_0= ruleGlobalVar ) )? ( (lv_location_2_0= ruleLocation ) ) )
                    {
                    // InternalIec.g:8078:6: ( ( (lv_variable_1_0= ruleGlobalVar ) )? ( (lv_location_2_0= ruleLocation ) ) )
                    // InternalIec.g:8078:7: ( (lv_variable_1_0= ruleGlobalVar ) )? ( (lv_location_2_0= ruleLocation ) )
                    {
                    // InternalIec.g:8078:7: ( (lv_variable_1_0= ruleGlobalVar ) )?
                    int alt121=2;
                    int LA121_0 = input.LA(1);

                    if ( ((LA121_0>=RULE_LETTER && LA121_0<=RULE_ID)) ) {
                        alt121=1;
                    }
                    switch (alt121) {
                        case 1 :
                            // InternalIec.g:8079:1: (lv_variable_1_0= ruleGlobalVar )
                            {
                            // InternalIec.g:8079:1: (lv_variable_1_0= ruleGlobalVar )
                            // InternalIec.g:8080:3: lv_variable_1_0= ruleGlobalVar
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getGlobalVarSpecAccess().getVariableGlobalVarParserRuleCall_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_65);
                            lv_variable_1_0=ruleGlobalVar();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getGlobalVarSpecRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"variable",
                                      		lv_variable_1_0, 
                                      		"com.bichler.iec.Iec.GlobalVar");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalIec.g:8096:3: ( (lv_location_2_0= ruleLocation ) )
                    // InternalIec.g:8097:1: (lv_location_2_0= ruleLocation )
                    {
                    // InternalIec.g:8097:1: (lv_location_2_0= ruleLocation )
                    // InternalIec.g:8098:3: lv_location_2_0= ruleLocation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getGlobalVarSpecAccess().getLocationLocationParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_location_2_0=ruleLocation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getGlobalVarSpecRule());
                      	        }
                             		set(
                             			current, 
                             			"location",
                              		lv_location_2_0, 
                              		"com.bichler.iec.Iec.Location");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGlobalVarSpec"


    // $ANTLR start "entryRuleGlobalVarList"
    // InternalIec.g:8122:1: entryRuleGlobalVarList returns [EObject current=null] : iv_ruleGlobalVarList= ruleGlobalVarList EOF ;
    public final EObject entryRuleGlobalVarList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGlobalVarList = null;


        try {
            // InternalIec.g:8123:2: (iv_ruleGlobalVarList= ruleGlobalVarList EOF )
            // InternalIec.g:8124:2: iv_ruleGlobalVarList= ruleGlobalVarList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGlobalVarListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGlobalVarList=ruleGlobalVarList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGlobalVarList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGlobalVarList"


    // $ANTLR start "ruleGlobalVarList"
    // InternalIec.g:8131:1: ruleGlobalVarList returns [EObject current=null] : ( ( (lv_variables_0_0= ruleGlobalVar ) ) (otherlv_1= ',' ( (lv_variables_2_0= ruleGlobalVar ) ) )* ) ;
    public final EObject ruleGlobalVarList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_variables_0_0 = null;

        EObject lv_variables_2_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:8134:28: ( ( ( (lv_variables_0_0= ruleGlobalVar ) ) (otherlv_1= ',' ( (lv_variables_2_0= ruleGlobalVar ) ) )* ) )
            // InternalIec.g:8135:1: ( ( (lv_variables_0_0= ruleGlobalVar ) ) (otherlv_1= ',' ( (lv_variables_2_0= ruleGlobalVar ) ) )* )
            {
            // InternalIec.g:8135:1: ( ( (lv_variables_0_0= ruleGlobalVar ) ) (otherlv_1= ',' ( (lv_variables_2_0= ruleGlobalVar ) ) )* )
            // InternalIec.g:8135:2: ( (lv_variables_0_0= ruleGlobalVar ) ) (otherlv_1= ',' ( (lv_variables_2_0= ruleGlobalVar ) ) )*
            {
            // InternalIec.g:8135:2: ( (lv_variables_0_0= ruleGlobalVar ) )
            // InternalIec.g:8136:1: (lv_variables_0_0= ruleGlobalVar )
            {
            // InternalIec.g:8136:1: (lv_variables_0_0= ruleGlobalVar )
            // InternalIec.g:8137:3: lv_variables_0_0= ruleGlobalVar
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getGlobalVarListAccess().getVariablesGlobalVarParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_20);
            lv_variables_0_0=ruleGlobalVar();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGlobalVarListRule());
              	        }
                     		add(
                     			current, 
                     			"variables",
                      		lv_variables_0_0, 
                      		"com.bichler.iec.Iec.GlobalVar");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:8153:2: (otherlv_1= ',' ( (lv_variables_2_0= ruleGlobalVar ) ) )*
            loop123:
            do {
                int alt123=2;
                int LA123_0 = input.LA(1);

                if ( (LA123_0==71) ) {
                    alt123=1;
                }


                switch (alt123) {
            	case 1 :
            	    // InternalIec.g:8153:4: otherlv_1= ',' ( (lv_variables_2_0= ruleGlobalVar ) )
            	    {
            	    otherlv_1=(Token)match(input,71,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getGlobalVarListAccess().getCommaKeyword_1_0());
            	          
            	    }
            	    // InternalIec.g:8157:1: ( (lv_variables_2_0= ruleGlobalVar ) )
            	    // InternalIec.g:8158:1: (lv_variables_2_0= ruleGlobalVar )
            	    {
            	    // InternalIec.g:8158:1: (lv_variables_2_0= ruleGlobalVar )
            	    // InternalIec.g:8159:3: lv_variables_2_0= ruleGlobalVar
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getGlobalVarListAccess().getVariablesGlobalVarParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_20);
            	    lv_variables_2_0=ruleGlobalVar();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getGlobalVarListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"variables",
            	              		lv_variables_2_0, 
            	              		"com.bichler.iec.Iec.GlobalVar");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop123;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGlobalVarList"


    // $ANTLR start "entryRuleGlobalVar"
    // InternalIec.g:8183:1: entryRuleGlobalVar returns [EObject current=null] : iv_ruleGlobalVar= ruleGlobalVar EOF ;
    public final EObject entryRuleGlobalVar() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGlobalVar = null;


        try {
            // InternalIec.g:8184:2: (iv_ruleGlobalVar= ruleGlobalVar EOF )
            // InternalIec.g:8185:2: iv_ruleGlobalVar= ruleGlobalVar EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGlobalVarRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGlobalVar=ruleGlobalVar();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGlobalVar; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGlobalVar"


    // $ANTLR start "ruleGlobalVar"
    // InternalIec.g:8192:1: ruleGlobalVar returns [EObject current=null] : ( (lv_name_0_0= ruleIdentifier ) ) ;
    public final EObject ruleGlobalVar() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:8195:28: ( ( (lv_name_0_0= ruleIdentifier ) ) )
            // InternalIec.g:8196:1: ( (lv_name_0_0= ruleIdentifier ) )
            {
            // InternalIec.g:8196:1: ( (lv_name_0_0= ruleIdentifier ) )
            // InternalIec.g:8197:1: (lv_name_0_0= ruleIdentifier )
            {
            // InternalIec.g:8197:1: (lv_name_0_0= ruleIdentifier )
            // InternalIec.g:8198:3: lv_name_0_0= ruleIdentifier
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getGlobalVarAccess().getNameIdentifierParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGlobalVarRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"com.bichler.iec.Iec.Identifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGlobalVar"


    // $ANTLR start "entryRuleTaskConfiguration"
    // InternalIec.g:8222:1: entryRuleTaskConfiguration returns [EObject current=null] : iv_ruleTaskConfiguration= ruleTaskConfiguration EOF ;
    public final EObject entryRuleTaskConfiguration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTaskConfiguration = null;


        try {
            // InternalIec.g:8223:2: (iv_ruleTaskConfiguration= ruleTaskConfiguration EOF )
            // InternalIec.g:8224:2: iv_ruleTaskConfiguration= ruleTaskConfiguration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTaskConfigurationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTaskConfiguration=ruleTaskConfiguration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTaskConfiguration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTaskConfiguration"


    // $ANTLR start "ruleTaskConfiguration"
    // InternalIec.g:8231:1: ruleTaskConfiguration returns [EObject current=null] : (otherlv_0= 'TASK' ( (lv_name_1_0= ruleIdentifier ) ) ( (lv_taskInit_2_0= ruleTaskInitialization ) ) ) ;
    public final EObject ruleTaskConfiguration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_taskInit_2_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:8234:28: ( (otherlv_0= 'TASK' ( (lv_name_1_0= ruleIdentifier ) ) ( (lv_taskInit_2_0= ruleTaskInitialization ) ) ) )
            // InternalIec.g:8235:1: (otherlv_0= 'TASK' ( (lv_name_1_0= ruleIdentifier ) ) ( (lv_taskInit_2_0= ruleTaskInitialization ) ) )
            {
            // InternalIec.g:8235:1: (otherlv_0= 'TASK' ( (lv_name_1_0= ruleIdentifier ) ) ( (lv_taskInit_2_0= ruleTaskInitialization ) ) )
            // InternalIec.g:8235:3: otherlv_0= 'TASK' ( (lv_name_1_0= ruleIdentifier ) ) ( (lv_taskInit_2_0= ruleTaskInitialization ) )
            {
            otherlv_0=(Token)match(input,137,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTaskConfigurationAccess().getTASKKeyword_0());
                  
            }
            // InternalIec.g:8239:1: ( (lv_name_1_0= ruleIdentifier ) )
            // InternalIec.g:8240:1: (lv_name_1_0= ruleIdentifier )
            {
            // InternalIec.g:8240:1: (lv_name_1_0= ruleIdentifier )
            // InternalIec.g:8241:3: lv_name_1_0= ruleIdentifier
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTaskConfigurationAccess().getNameIdentifierParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_11);
            lv_name_1_0=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTaskConfigurationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"com.bichler.iec.Iec.Identifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIec.g:8257:2: ( (lv_taskInit_2_0= ruleTaskInitialization ) )
            // InternalIec.g:8258:1: (lv_taskInit_2_0= ruleTaskInitialization )
            {
            // InternalIec.g:8258:1: (lv_taskInit_2_0= ruleTaskInitialization )
            // InternalIec.g:8259:3: lv_taskInit_2_0= ruleTaskInitialization
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTaskConfigurationAccess().getTaskInitTaskInitializationParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_taskInit_2_0=ruleTaskInitialization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTaskConfigurationRule());
              	        }
                     		set(
                     			current, 
                     			"taskInit",
                      		lv_taskInit_2_0, 
                      		"com.bichler.iec.Iec.TaskInitialization");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTaskConfiguration"


    // $ANTLR start "entryRuleTaskInitialization"
    // InternalIec.g:8283:1: entryRuleTaskInitialization returns [EObject current=null] : iv_ruleTaskInitialization= ruleTaskInitialization EOF ;
    public final EObject entryRuleTaskInitialization() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTaskInitialization = null;


        try {
            // InternalIec.g:8284:2: (iv_ruleTaskInitialization= ruleTaskInitialization EOF )
            // InternalIec.g:8285:2: iv_ruleTaskInitialization= ruleTaskInitialization EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTaskInitializationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTaskInitialization=ruleTaskInitialization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTaskInitialization; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTaskInitialization"


    // $ANTLR start "ruleTaskInitialization"
    // InternalIec.g:8292:1: ruleTaskInitialization returns [EObject current=null] : (otherlv_0= '(' (otherlv_1= 'SINGLE' otherlv_2= ':=' ( (lv_single_3_0= ruleDataSource ) ) )? (otherlv_4= 'INTERVAL' otherlv_5= ':=' ( (lv_interval_6_0= ruleDataSource ) ) )? otherlv_7= 'PRIORITY' otherlv_8= ':=' ( (lv_prior_9_0= RULE_INT ) ) otherlv_10= ')' ) ;
    public final EObject ruleTaskInitialization() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_prior_9_0=null;
        Token otherlv_10=null;
        EObject lv_single_3_0 = null;

        EObject lv_interval_6_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:8295:28: ( (otherlv_0= '(' (otherlv_1= 'SINGLE' otherlv_2= ':=' ( (lv_single_3_0= ruleDataSource ) ) )? (otherlv_4= 'INTERVAL' otherlv_5= ':=' ( (lv_interval_6_0= ruleDataSource ) ) )? otherlv_7= 'PRIORITY' otherlv_8= ':=' ( (lv_prior_9_0= RULE_INT ) ) otherlv_10= ')' ) )
            // InternalIec.g:8296:1: (otherlv_0= '(' (otherlv_1= 'SINGLE' otherlv_2= ':=' ( (lv_single_3_0= ruleDataSource ) ) )? (otherlv_4= 'INTERVAL' otherlv_5= ':=' ( (lv_interval_6_0= ruleDataSource ) ) )? otherlv_7= 'PRIORITY' otherlv_8= ':=' ( (lv_prior_9_0= RULE_INT ) ) otherlv_10= ')' )
            {
            // InternalIec.g:8296:1: (otherlv_0= '(' (otherlv_1= 'SINGLE' otherlv_2= ':=' ( (lv_single_3_0= ruleDataSource ) ) )? (otherlv_4= 'INTERVAL' otherlv_5= ':=' ( (lv_interval_6_0= ruleDataSource ) ) )? otherlv_7= 'PRIORITY' otherlv_8= ':=' ( (lv_prior_9_0= RULE_INT ) ) otherlv_10= ')' )
            // InternalIec.g:8296:3: otherlv_0= '(' (otherlv_1= 'SINGLE' otherlv_2= ':=' ( (lv_single_3_0= ruleDataSource ) ) )? (otherlv_4= 'INTERVAL' otherlv_5= ':=' ( (lv_interval_6_0= ruleDataSource ) ) )? otherlv_7= 'PRIORITY' otherlv_8= ':=' ( (lv_prior_9_0= RULE_INT ) ) otherlv_10= ')'
            {
            otherlv_0=(Token)match(input,67,FOLLOW_87); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTaskInitializationAccess().getLeftParenthesisKeyword_0());
                  
            }
            // InternalIec.g:8300:1: (otherlv_1= 'SINGLE' otherlv_2= ':=' ( (lv_single_3_0= ruleDataSource ) ) )?
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==138) ) {
                alt124=1;
            }
            switch (alt124) {
                case 1 :
                    // InternalIec.g:8300:3: otherlv_1= 'SINGLE' otherlv_2= ':=' ( (lv_single_3_0= ruleDataSource ) )
                    {
                    otherlv_1=(Token)match(input,138,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTaskInitializationAccess().getSINGLEKeyword_1_0());
                          
                    }
                    otherlv_2=(Token)match(input,66,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getTaskInitializationAccess().getColonEqualsSignKeyword_1_1());
                          
                    }
                    // InternalIec.g:8308:1: ( (lv_single_3_0= ruleDataSource ) )
                    // InternalIec.g:8309:1: (lv_single_3_0= ruleDataSource )
                    {
                    // InternalIec.g:8309:1: (lv_single_3_0= ruleDataSource )
                    // InternalIec.g:8310:3: lv_single_3_0= ruleDataSource
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTaskInitializationAccess().getSingleDataSourceParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_88);
                    lv_single_3_0=ruleDataSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTaskInitializationRule());
                      	        }
                             		set(
                             			current, 
                             			"single",
                              		lv_single_3_0, 
                              		"com.bichler.iec.Iec.DataSource");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalIec.g:8326:4: (otherlv_4= 'INTERVAL' otherlv_5= ':=' ( (lv_interval_6_0= ruleDataSource ) ) )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==139) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalIec.g:8326:6: otherlv_4= 'INTERVAL' otherlv_5= ':=' ( (lv_interval_6_0= ruleDataSource ) )
                    {
                    otherlv_4=(Token)match(input,139,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getTaskInitializationAccess().getINTERVALKeyword_2_0());
                          
                    }
                    otherlv_5=(Token)match(input,66,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getTaskInitializationAccess().getColonEqualsSignKeyword_2_1());
                          
                    }
                    // InternalIec.g:8334:1: ( (lv_interval_6_0= ruleDataSource ) )
                    // InternalIec.g:8335:1: (lv_interval_6_0= ruleDataSource )
                    {
                    // InternalIec.g:8335:1: (lv_interval_6_0= ruleDataSource )
                    // InternalIec.g:8336:3: lv_interval_6_0= ruleDataSource
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTaskInitializationAccess().getIntervalDataSourceParserRuleCall_2_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_89);
                    lv_interval_6_0=ruleDataSource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTaskInitializationRule());
                      	        }
                             		set(
                             			current, 
                             			"interval",
                              		lv_interval_6_0, 
                              		"com.bichler.iec.Iec.DataSource");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,140,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getTaskInitializationAccess().getPRIORITYKeyword_3());
                  
            }
            otherlv_8=(Token)match(input,66,FOLLOW_90); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getTaskInitializationAccess().getColonEqualsSignKeyword_4());
                  
            }
            // InternalIec.g:8360:1: ( (lv_prior_9_0= RULE_INT ) )
            // InternalIec.g:8361:1: (lv_prior_9_0= RULE_INT )
            {
            // InternalIec.g:8361:1: (lv_prior_9_0= RULE_INT )
            // InternalIec.g:8362:3: lv_prior_9_0= RULE_INT
            {
            lv_prior_9_0=(Token)match(input,RULE_INT,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_prior_9_0, grammarAccess.getTaskInitializationAccess().getPriorINTTerminalRuleCall_5_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTaskInitializationRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"prior",
                      		lv_prior_9_0, 
                      		"com.bichler.iec.Iec.INT");
              	    
            }

            }


            }

            otherlv_10=(Token)match(input,68,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_10, grammarAccess.getTaskInitializationAccess().getRightParenthesisKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTaskInitialization"


    // $ANTLR start "entryRuleDataSource"
    // InternalIec.g:8390:1: entryRuleDataSource returns [EObject current=null] : iv_ruleDataSource= ruleDataSource EOF ;
    public final EObject entryRuleDataSource() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDataSource = null;


        try {
            // InternalIec.g:8391:2: (iv_ruleDataSource= ruleDataSource EOF )
            // InternalIec.g:8392:2: iv_ruleDataSource= ruleDataSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDataSourceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDataSource=ruleDataSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDataSource; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDataSource"


    // $ANTLR start "ruleDataSource"
    // InternalIec.g:8399:1: ruleDataSource returns [EObject current=null] : (this_Constant_0= ruleConstant | this_DirectVariable_1= ruleDirectVariable ) ;
    public final EObject ruleDataSource() throws RecognitionException {
        EObject current = null;

        EObject this_Constant_0 = null;

        EObject this_DirectVariable_1 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:8402:28: ( (this_Constant_0= ruleConstant | this_DirectVariable_1= ruleDirectVariable ) )
            // InternalIec.g:8403:1: (this_Constant_0= ruleConstant | this_DirectVariable_1= ruleDirectVariable )
            {
            // InternalIec.g:8403:1: (this_Constant_0= ruleConstant | this_DirectVariable_1= ruleDirectVariable )
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( ((LA126_0>=RULE_INT && LA126_0<=RULE_FIXED_POINT)||(LA126_0>=RULE_SINGLE_BYTE_STRING && LA126_0<=RULE_DOUBLE_BYTE_STRING)||LA126_0==RULE_DIGIT||(LA126_0>=33 && LA126_0<=42)||(LA126_0>=74 && LA126_0<=75)||(LA126_0>=141 && LA126_0<=156)) ) {
                alt126=1;
            }
            else if ( (LA126_0==RULE_DIRECT_VARIABLE_ID) ) {
                alt126=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 126, 0, input);

                throw nvae;
            }
            switch (alt126) {
                case 1 :
                    // InternalIec.g:8404:5: this_Constant_0= ruleConstant
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDataSourceAccess().getConstantParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Constant_0=ruleConstant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Constant_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:8414:5: this_DirectVariable_1= ruleDirectVariable
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDataSourceAccess().getDirectVariableParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DirectVariable_1=ruleDirectVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_DirectVariable_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataSource"


    // $ANTLR start "entryRuleConstant"
    // InternalIec.g:8430:1: entryRuleConstant returns [EObject current=null] : iv_ruleConstant= ruleConstant EOF ;
    public final EObject entryRuleConstant() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstant = null;


        try {
            // InternalIec.g:8431:2: (iv_ruleConstant= ruleConstant EOF )
            // InternalIec.g:8432:2: iv_ruleConstant= ruleConstant EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstantRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstant=ruleConstant();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstant; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstant"


    // $ANTLR start "ruleConstant"
    // InternalIec.g:8439:1: ruleConstant returns [EObject current=null] : (this_NumericLiteral_0= ruleNumericLiteral | this_CharacterString_1= ruleCharacterString | this_TimeLiteral_2= ruleTimeLiteral | this_BitString_3= ruleBitString | this_Boolean_4= ruleBoolean ) ;
    public final EObject ruleConstant() throws RecognitionException {
        EObject current = null;

        EObject this_NumericLiteral_0 = null;

        EObject this_CharacterString_1 = null;

        EObject this_TimeLiteral_2 = null;

        EObject this_BitString_3 = null;

        EObject this_Boolean_4 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:8442:28: ( (this_NumericLiteral_0= ruleNumericLiteral | this_CharacterString_1= ruleCharacterString | this_TimeLiteral_2= ruleTimeLiteral | this_BitString_3= ruleBitString | this_Boolean_4= ruleBoolean ) )
            // InternalIec.g:8443:1: (this_NumericLiteral_0= ruleNumericLiteral | this_CharacterString_1= ruleCharacterString | this_TimeLiteral_2= ruleTimeLiteral | this_BitString_3= ruleBitString | this_Boolean_4= ruleBoolean )
            {
            // InternalIec.g:8443:1: (this_NumericLiteral_0= ruleNumericLiteral | this_CharacterString_1= ruleCharacterString | this_TimeLiteral_2= ruleTimeLiteral | this_BitString_3= ruleBitString | this_Boolean_4= ruleBoolean )
            int alt127=5;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case RULE_BINT:
            case RULE_OINT:
            case RULE_HINT:
            case RULE_FIXED_POINT:
            case RULE_DIGIT:
            case 33:
            case 34:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 74:
            case 75:
                {
                alt127=1;
                }
                break;
            case RULE_SINGLE_BYTE_STRING:
            case RULE_DOUBLE_BYTE_STRING:
                {
                alt127=2;
                }
                break;
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
                {
                alt127=3;
                }
                break;
            case 141:
            case 142:
            case 143:
            case 144:
                {
                alt127=4;
                }
                break;
            case 145:
            case 146:
            case 147:
                {
                alt127=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 127, 0, input);

                throw nvae;
            }

            switch (alt127) {
                case 1 :
                    // InternalIec.g:8444:5: this_NumericLiteral_0= ruleNumericLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConstantAccess().getNumericLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_NumericLiteral_0=ruleNumericLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_NumericLiteral_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:8454:5: this_CharacterString_1= ruleCharacterString
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConstantAccess().getCharacterStringParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_CharacterString_1=ruleCharacterString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_CharacterString_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIec.g:8464:5: this_TimeLiteral_2= ruleTimeLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConstantAccess().getTimeLiteralParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TimeLiteral_2=ruleTimeLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TimeLiteral_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalIec.g:8474:5: this_BitString_3= ruleBitString
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConstantAccess().getBitStringParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_BitString_3=ruleBitString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_BitString_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalIec.g:8484:5: this_Boolean_4= ruleBoolean
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConstantAccess().getBooleanParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Boolean_4=ruleBoolean();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Boolean_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstant"


    // $ANTLR start "entryRuleNumericLiteral"
    // InternalIec.g:8500:1: entryRuleNumericLiteral returns [EObject current=null] : iv_ruleNumericLiteral= ruleNumericLiteral EOF ;
    public final EObject entryRuleNumericLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNumericLiteral = null;


        try {
            // InternalIec.g:8501:2: (iv_ruleNumericLiteral= ruleNumericLiteral EOF )
            // InternalIec.g:8502:2: iv_ruleNumericLiteral= ruleNumericLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumericLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumericLiteral=ruleNumericLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumericLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumericLiteral"


    // $ANTLR start "ruleNumericLiteral"
    // InternalIec.g:8509:1: ruleNumericLiteral returns [EObject current=null] : (this_IntegerLiteral_0= ruleIntegerLiteral | this_RealLiteral_1= ruleRealLiteral ) ;
    public final EObject ruleNumericLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_IntegerLiteral_0 = null;

        EObject this_RealLiteral_1 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:8512:28: ( (this_IntegerLiteral_0= ruleIntegerLiteral | this_RealLiteral_1= ruleRealLiteral ) )
            // InternalIec.g:8513:1: (this_IntegerLiteral_0= ruleIntegerLiteral | this_RealLiteral_1= ruleRealLiteral )
            {
            // InternalIec.g:8513:1: (this_IntegerLiteral_0= ruleIntegerLiteral | this_RealLiteral_1= ruleRealLiteral )
            int alt128=2;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case RULE_BINT:
            case RULE_OINT:
            case RULE_HINT:
            case RULE_DIGIT:
            case 33:
            case 34:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
                {
                alt128=1;
                }
                break;
            case 74:
                {
                int LA128_2 = input.LA(2);

                if ( (LA128_2==RULE_FIXED_POINT) ) {
                    alt128=2;
                }
                else if ( (LA128_2==RULE_INT||LA128_2==RULE_DIGIT) ) {
                    alt128=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 128, 2, input);

                    throw nvae;
                }
                }
                break;
            case 75:
                {
                int LA128_3 = input.LA(2);

                if ( (LA128_3==RULE_FIXED_POINT) ) {
                    alt128=2;
                }
                else if ( (LA128_3==RULE_INT||LA128_3==RULE_DIGIT) ) {
                    alt128=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 128, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_FIXED_POINT:
            case 41:
            case 42:
                {
                alt128=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 128, 0, input);

                throw nvae;
            }

            switch (alt128) {
                case 1 :
                    // InternalIec.g:8514:5: this_IntegerLiteral_0= ruleIntegerLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericLiteralAccess().getIntegerLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IntegerLiteral_0=ruleIntegerLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_IntegerLiteral_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:8524:5: this_RealLiteral_1= ruleRealLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericLiteralAccess().getRealLiteralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_RealLiteral_1=ruleRealLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_RealLiteral_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumericLiteral"


    // $ANTLR start "entryRuleIntegerLiteral"
    // InternalIec.g:8540:1: entryRuleIntegerLiteral returns [EObject current=null] : iv_ruleIntegerLiteral= ruleIntegerLiteral EOF ;
    public final EObject entryRuleIntegerLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntegerLiteral = null;


        try {
            // InternalIec.g:8541:2: (iv_ruleIntegerLiteral= ruleIntegerLiteral EOF )
            // InternalIec.g:8542:2: iv_ruleIntegerLiteral= ruleIntegerLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntegerLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIntegerLiteral=ruleIntegerLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntegerLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntegerLiteral"


    // $ANTLR start "ruleIntegerLiteral"
    // InternalIec.g:8549:1: ruleIntegerLiteral returns [EObject current=null] : ( ( ( (lv_type_0_0= ruleIntegerType ) ) otherlv_1= '#' )? ( (lv_value_2_0= ruleIntegerValue ) ) ) ;
    public final EObject ruleIntegerLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_type_0_0 = null;

        AntlrDatatypeRuleToken lv_value_2_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:8552:28: ( ( ( ( (lv_type_0_0= ruleIntegerType ) ) otherlv_1= '#' )? ( (lv_value_2_0= ruleIntegerValue ) ) ) )
            // InternalIec.g:8553:1: ( ( ( (lv_type_0_0= ruleIntegerType ) ) otherlv_1= '#' )? ( (lv_value_2_0= ruleIntegerValue ) ) )
            {
            // InternalIec.g:8553:1: ( ( ( (lv_type_0_0= ruleIntegerType ) ) otherlv_1= '#' )? ( (lv_value_2_0= ruleIntegerValue ) ) )
            // InternalIec.g:8553:2: ( ( (lv_type_0_0= ruleIntegerType ) ) otherlv_1= '#' )? ( (lv_value_2_0= ruleIntegerValue ) )
            {
            // InternalIec.g:8553:2: ( ( (lv_type_0_0= ruleIntegerType ) ) otherlv_1= '#' )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( ((LA129_0>=33 && LA129_0<=40)) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalIec.g:8553:3: ( (lv_type_0_0= ruleIntegerType ) ) otherlv_1= '#'
                    {
                    // InternalIec.g:8553:3: ( (lv_type_0_0= ruleIntegerType ) )
                    // InternalIec.g:8554:1: (lv_type_0_0= ruleIntegerType )
                    {
                    // InternalIec.g:8554:1: (lv_type_0_0= ruleIntegerType )
                    // InternalIec.g:8555:3: lv_type_0_0= ruleIntegerType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIntegerLiteralAccess().getTypeIntegerTypeParserRuleCall_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_21);
                    lv_type_0_0=ruleIntegerType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIntegerLiteralRule());
                      	        }
                             		set(
                             			current, 
                             			"type",
                              		lv_type_0_0, 
                              		"com.bichler.iec.Iec.IntegerType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,76,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getIntegerLiteralAccess().getNumberSignKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalIec.g:8575:3: ( (lv_value_2_0= ruleIntegerValue ) )
            // InternalIec.g:8576:1: (lv_value_2_0= ruleIntegerValue )
            {
            // InternalIec.g:8576:1: (lv_value_2_0= ruleIntegerValue )
            // InternalIec.g:8577:3: lv_value_2_0= ruleIntegerValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIntegerLiteralAccess().getValueIntegerValueParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleIntegerValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIntegerLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_2_0, 
                      		"com.bichler.iec.Iec.IntegerValue");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntegerLiteral"


    // $ANTLR start "entryRuleRealLiteral"
    // InternalIec.g:8601:1: entryRuleRealLiteral returns [EObject current=null] : iv_ruleRealLiteral= ruleRealLiteral EOF ;
    public final EObject entryRuleRealLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRealLiteral = null;


        try {
            // InternalIec.g:8602:2: (iv_ruleRealLiteral= ruleRealLiteral EOF )
            // InternalIec.g:8603:2: iv_ruleRealLiteral= ruleRealLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRealLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRealLiteral=ruleRealLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRealLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRealLiteral"


    // $ANTLR start "ruleRealLiteral"
    // InternalIec.g:8610:1: ruleRealLiteral returns [EObject current=null] : ( ( ( (lv_type_0_0= ruleRealType ) ) otherlv_1= '#' )? ( (lv_value_2_0= ruleRealValue ) ) ) ;
    public final EObject ruleRealLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_type_0_0 = null;

        AntlrDatatypeRuleToken lv_value_2_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:8613:28: ( ( ( ( (lv_type_0_0= ruleRealType ) ) otherlv_1= '#' )? ( (lv_value_2_0= ruleRealValue ) ) ) )
            // InternalIec.g:8614:1: ( ( ( (lv_type_0_0= ruleRealType ) ) otherlv_1= '#' )? ( (lv_value_2_0= ruleRealValue ) ) )
            {
            // InternalIec.g:8614:1: ( ( ( (lv_type_0_0= ruleRealType ) ) otherlv_1= '#' )? ( (lv_value_2_0= ruleRealValue ) ) )
            // InternalIec.g:8614:2: ( ( (lv_type_0_0= ruleRealType ) ) otherlv_1= '#' )? ( (lv_value_2_0= ruleRealValue ) )
            {
            // InternalIec.g:8614:2: ( ( (lv_type_0_0= ruleRealType ) ) otherlv_1= '#' )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( ((LA130_0>=41 && LA130_0<=42)) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // InternalIec.g:8614:3: ( (lv_type_0_0= ruleRealType ) ) otherlv_1= '#'
                    {
                    // InternalIec.g:8614:3: ( (lv_type_0_0= ruleRealType ) )
                    // InternalIec.g:8615:1: (lv_type_0_0= ruleRealType )
                    {
                    // InternalIec.g:8615:1: (lv_type_0_0= ruleRealType )
                    // InternalIec.g:8616:3: lv_type_0_0= ruleRealType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getRealLiteralAccess().getTypeRealTypeParserRuleCall_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_21);
                    lv_type_0_0=ruleRealType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getRealLiteralRule());
                      	        }
                             		set(
                             			current, 
                             			"type",
                              		lv_type_0_0, 
                              		"com.bichler.iec.Iec.RealType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,76,FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getRealLiteralAccess().getNumberSignKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalIec.g:8636:3: ( (lv_value_2_0= ruleRealValue ) )
            // InternalIec.g:8637:1: (lv_value_2_0= ruleRealValue )
            {
            // InternalIec.g:8637:1: (lv_value_2_0= ruleRealValue )
            // InternalIec.g:8638:3: lv_value_2_0= ruleRealValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRealLiteralAccess().getValueRealValueParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleRealValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRealLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_2_0, 
                      		"com.bichler.iec.Iec.RealValue");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRealLiteral"


    // $ANTLR start "entryRuleIntegerValue"
    // InternalIec.g:8662:1: entryRuleIntegerValue returns [String current=null] : iv_ruleIntegerValue= ruleIntegerValue EOF ;
    public final String entryRuleIntegerValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIntegerValue = null;


        try {
            // InternalIec.g:8663:2: (iv_ruleIntegerValue= ruleIntegerValue EOF )
            // InternalIec.g:8664:2: iv_ruleIntegerValue= ruleIntegerValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntegerValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIntegerValue=ruleIntegerValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntegerValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntegerValue"


    // $ANTLR start "ruleIntegerValue"
    // InternalIec.g:8671:1: ruleIntegerValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_SignedInteger_0= ruleSignedInteger | this_BinaryInteger_1= ruleBinaryInteger | this_OctalInteger_2= ruleOctalInteger | this_HexInteger_3= ruleHexInteger ) ;
    public final AntlrDatatypeRuleToken ruleIntegerValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_SignedInteger_0 = null;

        AntlrDatatypeRuleToken this_BinaryInteger_1 = null;

        AntlrDatatypeRuleToken this_OctalInteger_2 = null;

        AntlrDatatypeRuleToken this_HexInteger_3 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:8674:28: ( (this_SignedInteger_0= ruleSignedInteger | this_BinaryInteger_1= ruleBinaryInteger | this_OctalInteger_2= ruleOctalInteger | this_HexInteger_3= ruleHexInteger ) )
            // InternalIec.g:8675:1: (this_SignedInteger_0= ruleSignedInteger | this_BinaryInteger_1= ruleBinaryInteger | this_OctalInteger_2= ruleOctalInteger | this_HexInteger_3= ruleHexInteger )
            {
            // InternalIec.g:8675:1: (this_SignedInteger_0= ruleSignedInteger | this_BinaryInteger_1= ruleBinaryInteger | this_OctalInteger_2= ruleOctalInteger | this_HexInteger_3= ruleHexInteger )
            int alt131=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case RULE_DIGIT:
            case 74:
            case 75:
                {
                alt131=1;
                }
                break;
            case RULE_BINT:
                {
                alt131=2;
                }
                break;
            case RULE_OINT:
                {
                alt131=3;
                }
                break;
            case RULE_HINT:
                {
                alt131=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 131, 0, input);

                throw nvae;
            }

            switch (alt131) {
                case 1 :
                    // InternalIec.g:8676:5: this_SignedInteger_0= ruleSignedInteger
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIntegerValueAccess().getSignedIntegerParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SignedInteger_0=ruleSignedInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_SignedInteger_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:8688:5: this_BinaryInteger_1= ruleBinaryInteger
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIntegerValueAccess().getBinaryIntegerParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_BinaryInteger_1=ruleBinaryInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_BinaryInteger_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIec.g:8700:5: this_OctalInteger_2= ruleOctalInteger
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIntegerValueAccess().getOctalIntegerParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_OctalInteger_2=ruleOctalInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OctalInteger_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalIec.g:8712:5: this_HexInteger_3= ruleHexInteger
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIntegerValueAccess().getHexIntegerParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_HexInteger_3=ruleHexInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_HexInteger_3);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntegerValue"


    // $ANTLR start "entryRuleSignedInteger"
    // InternalIec.g:8730:1: entryRuleSignedInteger returns [String current=null] : iv_ruleSignedInteger= ruleSignedInteger EOF ;
    public final String entryRuleSignedInteger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSignedInteger = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        	
        try {
            // InternalIec.g:8734:2: (iv_ruleSignedInteger= ruleSignedInteger EOF )
            // InternalIec.g:8735:2: iv_ruleSignedInteger= ruleSignedInteger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignedIntegerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSignedInteger=ruleSignedInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignedInteger.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleSignedInteger"


    // $ANTLR start "ruleSignedInteger"
    // InternalIec.g:8745:1: ruleSignedInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '+' | kw= '-' )? this_Integer_2= ruleInteger ) ;
    public final AntlrDatatypeRuleToken ruleSignedInteger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Integer_2 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            // InternalIec.g:8749:28: ( ( (kw= '+' | kw= '-' )? this_Integer_2= ruleInteger ) )
            // InternalIec.g:8750:1: ( (kw= '+' | kw= '-' )? this_Integer_2= ruleInteger )
            {
            // InternalIec.g:8750:1: ( (kw= '+' | kw= '-' )? this_Integer_2= ruleInteger )
            // InternalIec.g:8750:2: (kw= '+' | kw= '-' )? this_Integer_2= ruleInteger
            {
            // InternalIec.g:8750:2: (kw= '+' | kw= '-' )?
            int alt132=3;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==74) ) {
                alt132=1;
            }
            else if ( (LA132_0==75) ) {
                alt132=2;
            }
            switch (alt132) {
                case 1 :
                    // InternalIec.g:8751:2: kw= '+'
                    {
                    kw=(Token)match(input,74,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getSignedIntegerAccess().getPlusSignKeyword_0_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:8758:2: kw= '-'
                    {
                    kw=(Token)match(input,75,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getSignedIntegerAccess().getHyphenMinusKeyword_0_1()); 
                          
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getSignedIntegerAccess().getIntegerParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_Integer_2=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_Integer_2);
                  
            }
            if ( state.backtracking==0 ) {
               
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleSignedInteger"


    // $ANTLR start "entryRuleBinaryInteger"
    // InternalIec.g:8785:1: entryRuleBinaryInteger returns [String current=null] : iv_ruleBinaryInteger= ruleBinaryInteger EOF ;
    public final String entryRuleBinaryInteger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBinaryInteger = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        	
        try {
            // InternalIec.g:8789:2: (iv_ruleBinaryInteger= ruleBinaryInteger EOF )
            // InternalIec.g:8790:2: iv_ruleBinaryInteger= ruleBinaryInteger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBinaryIntegerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBinaryInteger=ruleBinaryInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBinaryInteger.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleBinaryInteger"


    // $ANTLR start "ruleBinaryInteger"
    // InternalIec.g:8800:1: ruleBinaryInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_BINT_0= RULE_BINT ;
    public final AntlrDatatypeRuleToken ruleBinaryInteger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_BINT_0=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            // InternalIec.g:8804:28: (this_BINT_0= RULE_BINT )
            // InternalIec.g:8805:5: this_BINT_0= RULE_BINT
            {
            this_BINT_0=(Token)match(input,RULE_BINT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_BINT_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_BINT_0, grammarAccess.getBinaryIntegerAccess().getBINTTerminalRuleCall()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleBinaryInteger"


    // $ANTLR start "entryRuleOctalInteger"
    // InternalIec.g:8823:1: entryRuleOctalInteger returns [String current=null] : iv_ruleOctalInteger= ruleOctalInteger EOF ;
    public final String entryRuleOctalInteger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOctalInteger = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        	
        try {
            // InternalIec.g:8827:2: (iv_ruleOctalInteger= ruleOctalInteger EOF )
            // InternalIec.g:8828:2: iv_ruleOctalInteger= ruleOctalInteger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOctalIntegerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOctalInteger=ruleOctalInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOctalInteger.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleOctalInteger"


    // $ANTLR start "ruleOctalInteger"
    // InternalIec.g:8838:1: ruleOctalInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_OINT_0= RULE_OINT ;
    public final AntlrDatatypeRuleToken ruleOctalInteger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_OINT_0=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            // InternalIec.g:8842:28: (this_OINT_0= RULE_OINT )
            // InternalIec.g:8843:5: this_OINT_0= RULE_OINT
            {
            this_OINT_0=(Token)match(input,RULE_OINT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_OINT_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_OINT_0, grammarAccess.getOctalIntegerAccess().getOINTTerminalRuleCall()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleOctalInteger"


    // $ANTLR start "entryRuleHexInteger"
    // InternalIec.g:8861:1: entryRuleHexInteger returns [String current=null] : iv_ruleHexInteger= ruleHexInteger EOF ;
    public final String entryRuleHexInteger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleHexInteger = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        	
        try {
            // InternalIec.g:8865:2: (iv_ruleHexInteger= ruleHexInteger EOF )
            // InternalIec.g:8866:2: iv_ruleHexInteger= ruleHexInteger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHexIntegerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHexInteger=ruleHexInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHexInteger.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleHexInteger"


    // $ANTLR start "ruleHexInteger"
    // InternalIec.g:8876:1: ruleHexInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_HINT_0= RULE_HINT ;
    public final AntlrDatatypeRuleToken ruleHexInteger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_HINT_0=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            // InternalIec.g:8880:28: (this_HINT_0= RULE_HINT )
            // InternalIec.g:8881:5: this_HINT_0= RULE_HINT
            {
            this_HINT_0=(Token)match(input,RULE_HINT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_HINT_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_HINT_0, grammarAccess.getHexIntegerAccess().getHINTTerminalRuleCall()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleHexInteger"


    // $ANTLR start "entryRuleRealValue"
    // InternalIec.g:8899:1: entryRuleRealValue returns [String current=null] : iv_ruleRealValue= ruleRealValue EOF ;
    public final String entryRuleRealValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleRealValue = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        	
        try {
            // InternalIec.g:8903:2: (iv_ruleRealValue= ruleRealValue EOF )
            // InternalIec.g:8904:2: iv_ruleRealValue= ruleRealValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRealValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRealValue=ruleRealValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRealValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleRealValue"


    // $ANTLR start "ruleRealValue"
    // InternalIec.g:8914:1: ruleRealValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '+' | kw= '-' )? this_FIXED_POINT_2= RULE_FIXED_POINT (this_EXPONENT_3= RULE_EXPONENT )? ) ;
    public final AntlrDatatypeRuleToken ruleRealValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_FIXED_POINT_2=null;
        Token this_EXPONENT_3=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            // InternalIec.g:8918:28: ( ( (kw= '+' | kw= '-' )? this_FIXED_POINT_2= RULE_FIXED_POINT (this_EXPONENT_3= RULE_EXPONENT )? ) )
            // InternalIec.g:8919:1: ( (kw= '+' | kw= '-' )? this_FIXED_POINT_2= RULE_FIXED_POINT (this_EXPONENT_3= RULE_EXPONENT )? )
            {
            // InternalIec.g:8919:1: ( (kw= '+' | kw= '-' )? this_FIXED_POINT_2= RULE_FIXED_POINT (this_EXPONENT_3= RULE_EXPONENT )? )
            // InternalIec.g:8919:2: (kw= '+' | kw= '-' )? this_FIXED_POINT_2= RULE_FIXED_POINT (this_EXPONENT_3= RULE_EXPONENT )?
            {
            // InternalIec.g:8919:2: (kw= '+' | kw= '-' )?
            int alt133=3;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==74) ) {
                alt133=1;
            }
            else if ( (LA133_0==75) ) {
                alt133=2;
            }
            switch (alt133) {
                case 1 :
                    // InternalIec.g:8920:2: kw= '+'
                    {
                    kw=(Token)match(input,74,FOLLOW_93); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRealValueAccess().getPlusSignKeyword_0_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:8927:2: kw= '-'
                    {
                    kw=(Token)match(input,75,FOLLOW_93); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRealValueAccess().getHyphenMinusKeyword_0_1()); 
                          
                    }

                    }
                    break;

            }

            this_FIXED_POINT_2=(Token)match(input,RULE_FIXED_POINT,FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_FIXED_POINT_2);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_FIXED_POINT_2, grammarAccess.getRealValueAccess().getFIXED_POINTTerminalRuleCall_1()); 
                  
            }
            // InternalIec.g:8939:1: (this_EXPONENT_3= RULE_EXPONENT )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==RULE_EXPONENT) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalIec.g:8939:6: this_EXPONENT_3= RULE_EXPONENT
                    {
                    this_EXPONENT_3=(Token)match(input,RULE_EXPONENT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_EXPONENT_3);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_EXPONENT_3, grammarAccess.getRealValueAccess().getEXPONENTTerminalRuleCall_2()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleRealValue"


    // $ANTLR start "entryRuleCharacterString"
    // InternalIec.g:8957:1: entryRuleCharacterString returns [EObject current=null] : iv_ruleCharacterString= ruleCharacterString EOF ;
    public final EObject entryRuleCharacterString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCharacterString = null;


        try {
            // InternalIec.g:8958:2: (iv_ruleCharacterString= ruleCharacterString EOF )
            // InternalIec.g:8959:2: iv_ruleCharacterString= ruleCharacterString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCharacterStringRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCharacterString=ruleCharacterString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCharacterString; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCharacterString"


    // $ANTLR start "ruleCharacterString"
    // InternalIec.g:8966:1: ruleCharacterString returns [EObject current=null] : ( ( (lv_value_0_0= RULE_SINGLE_BYTE_STRING ) ) | ( (lv_value_1_0= RULE_DOUBLE_BYTE_STRING ) ) ) ;
    public final EObject ruleCharacterString() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;
        Token lv_value_1_0=null;

         enterRule(); 
            
        try {
            // InternalIec.g:8969:28: ( ( ( (lv_value_0_0= RULE_SINGLE_BYTE_STRING ) ) | ( (lv_value_1_0= RULE_DOUBLE_BYTE_STRING ) ) ) )
            // InternalIec.g:8970:1: ( ( (lv_value_0_0= RULE_SINGLE_BYTE_STRING ) ) | ( (lv_value_1_0= RULE_DOUBLE_BYTE_STRING ) ) )
            {
            // InternalIec.g:8970:1: ( ( (lv_value_0_0= RULE_SINGLE_BYTE_STRING ) ) | ( (lv_value_1_0= RULE_DOUBLE_BYTE_STRING ) ) )
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==RULE_SINGLE_BYTE_STRING) ) {
                alt135=1;
            }
            else if ( (LA135_0==RULE_DOUBLE_BYTE_STRING) ) {
                alt135=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 135, 0, input);

                throw nvae;
            }
            switch (alt135) {
                case 1 :
                    // InternalIec.g:8970:2: ( (lv_value_0_0= RULE_SINGLE_BYTE_STRING ) )
                    {
                    // InternalIec.g:8970:2: ( (lv_value_0_0= RULE_SINGLE_BYTE_STRING ) )
                    // InternalIec.g:8971:1: (lv_value_0_0= RULE_SINGLE_BYTE_STRING )
                    {
                    // InternalIec.g:8971:1: (lv_value_0_0= RULE_SINGLE_BYTE_STRING )
                    // InternalIec.g:8972:3: lv_value_0_0= RULE_SINGLE_BYTE_STRING
                    {
                    lv_value_0_0=(Token)match(input,RULE_SINGLE_BYTE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_value_0_0, grammarAccess.getCharacterStringAccess().getValueSINGLE_BYTE_STRINGTerminalRuleCall_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getCharacterStringRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"value",
                              		lv_value_0_0, 
                              		"com.bichler.iec.Iec.SINGLE_BYTE_STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIec.g:8989:6: ( (lv_value_1_0= RULE_DOUBLE_BYTE_STRING ) )
                    {
                    // InternalIec.g:8989:6: ( (lv_value_1_0= RULE_DOUBLE_BYTE_STRING ) )
                    // InternalIec.g:8990:1: (lv_value_1_0= RULE_DOUBLE_BYTE_STRING )
                    {
                    // InternalIec.g:8990:1: (lv_value_1_0= RULE_DOUBLE_BYTE_STRING )
                    // InternalIec.g:8991:3: lv_value_1_0= RULE_DOUBLE_BYTE_STRING
                    {
                    lv_value_1_0=(Token)match(input,RULE_DOUBLE_BYTE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_value_1_0, grammarAccess.getCharacterStringAccess().getValueDOUBLE_BYTE_STRINGTerminalRuleCall_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getCharacterStringRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"value",
                              		lv_value_1_0, 
                              		"com.bichler.iec.Iec.DOUBLE_BYTE_STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCharacterString"


    // $ANTLR start "entryRuleBitString"
    // InternalIec.g:9015:1: entryRuleBitString returns [EObject current=null] : iv_ruleBitString= ruleBitString EOF ;
    public final EObject entryRuleBitString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitString = null;


        try {
            // InternalIec.g:9016:2: (iv_ruleBitString= ruleBitString EOF )
            // InternalIec.g:9017:2: iv_ruleBitString= ruleBitString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitStringRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBitString=ruleBitString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitString; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitString"


    // $ANTLR start "ruleBitString"
    // InternalIec.g:9024:1: ruleBitString returns [EObject current=null] : ( (otherlv_0= 'BYTE#' | otherlv_1= 'WORD#' | otherlv_2= 'DWORD#' | otherlv_3= 'LWORD#' ) ( (lv_value_4_0= ruleBitStringValue ) ) ) ;
    public final EObject ruleBitString() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_value_4_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:9027:28: ( ( (otherlv_0= 'BYTE#' | otherlv_1= 'WORD#' | otherlv_2= 'DWORD#' | otherlv_3= 'LWORD#' ) ( (lv_value_4_0= ruleBitStringValue ) ) ) )
            // InternalIec.g:9028:1: ( (otherlv_0= 'BYTE#' | otherlv_1= 'WORD#' | otherlv_2= 'DWORD#' | otherlv_3= 'LWORD#' ) ( (lv_value_4_0= ruleBitStringValue ) ) )
            {
            // InternalIec.g:9028:1: ( (otherlv_0= 'BYTE#' | otherlv_1= 'WORD#' | otherlv_2= 'DWORD#' | otherlv_3= 'LWORD#' ) ( (lv_value_4_0= ruleBitStringValue ) ) )
            // InternalIec.g:9028:2: (otherlv_0= 'BYTE#' | otherlv_1= 'WORD#' | otherlv_2= 'DWORD#' | otherlv_3= 'LWORD#' ) ( (lv_value_4_0= ruleBitStringValue ) )
            {
            // InternalIec.g:9028:2: (otherlv_0= 'BYTE#' | otherlv_1= 'WORD#' | otherlv_2= 'DWORD#' | otherlv_3= 'LWORD#' )
            int alt136=4;
            switch ( input.LA(1) ) {
            case 141:
                {
                alt136=1;
                }
                break;
            case 142:
                {
                alt136=2;
                }
                break;
            case 143:
                {
                alt136=3;
                }
                break;
            case 144:
                {
                alt136=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 136, 0, input);

                throw nvae;
            }

            switch (alt136) {
                case 1 :
                    // InternalIec.g:9028:4: otherlv_0= 'BYTE#'
                    {
                    otherlv_0=(Token)match(input,141,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getBitStringAccess().getBYTEKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:9033:7: otherlv_1= 'WORD#'
                    {
                    otherlv_1=(Token)match(input,142,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getBitStringAccess().getWORDKeyword_0_1());
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIec.g:9038:7: otherlv_2= 'DWORD#'
                    {
                    otherlv_2=(Token)match(input,143,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getBitStringAccess().getDWORDKeyword_0_2());
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalIec.g:9043:7: otherlv_3= 'LWORD#'
                    {
                    otherlv_3=(Token)match(input,144,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getBitStringAccess().getLWORDKeyword_0_3());
                          
                    }

                    }
                    break;

            }

            // InternalIec.g:9047:2: ( (lv_value_4_0= ruleBitStringValue ) )
            // InternalIec.g:9048:1: (lv_value_4_0= ruleBitStringValue )
            {
            // InternalIec.g:9048:1: (lv_value_4_0= ruleBitStringValue )
            // InternalIec.g:9049:3: lv_value_4_0= ruleBitStringValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getBitStringAccess().getValueBitStringValueParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_value_4_0=ruleBitStringValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getBitStringRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_4_0, 
                      		"com.bichler.iec.Iec.BitStringValue");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitString"


    // $ANTLR start "entryRuleBitStringValue"
    // InternalIec.g:9073:1: entryRuleBitStringValue returns [String current=null] : iv_ruleBitStringValue= ruleBitStringValue EOF ;
    public final String entryRuleBitStringValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBitStringValue = null;


        try {
            // InternalIec.g:9074:2: (iv_ruleBitStringValue= ruleBitStringValue EOF )
            // InternalIec.g:9075:2: iv_ruleBitStringValue= ruleBitStringValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitStringValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBitStringValue=ruleBitStringValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitStringValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitStringValue"


    // $ANTLR start "ruleBitStringValue"
    // InternalIec.g:9082:1: ruleBitStringValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_0= RULE_INT | this_BinaryInteger_1= ruleBinaryInteger | this_OctalInteger_2= ruleOctalInteger | this_HexInteger_3= ruleHexInteger ) ;
    public final AntlrDatatypeRuleToken ruleBitStringValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;
        AntlrDatatypeRuleToken this_BinaryInteger_1 = null;

        AntlrDatatypeRuleToken this_OctalInteger_2 = null;

        AntlrDatatypeRuleToken this_HexInteger_3 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:9085:28: ( (this_INT_0= RULE_INT | this_BinaryInteger_1= ruleBinaryInteger | this_OctalInteger_2= ruleOctalInteger | this_HexInteger_3= ruleHexInteger ) )
            // InternalIec.g:9086:1: (this_INT_0= RULE_INT | this_BinaryInteger_1= ruleBinaryInteger | this_OctalInteger_2= ruleOctalInteger | this_HexInteger_3= ruleHexInteger )
            {
            // InternalIec.g:9086:1: (this_INT_0= RULE_INT | this_BinaryInteger_1= ruleBinaryInteger | this_OctalInteger_2= ruleOctalInteger | this_HexInteger_3= ruleHexInteger )
            int alt137=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt137=1;
                }
                break;
            case RULE_BINT:
                {
                alt137=2;
                }
                break;
            case RULE_OINT:
                {
                alt137=3;
                }
                break;
            case RULE_HINT:
                {
                alt137=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 137, 0, input);

                throw nvae;
            }

            switch (alt137) {
                case 1 :
                    // InternalIec.g:9086:6: this_INT_0= RULE_INT
                    {
                    this_INT_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_INT_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_INT_0, grammarAccess.getBitStringValueAccess().getINTTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:9095:5: this_BinaryInteger_1= ruleBinaryInteger
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBitStringValueAccess().getBinaryIntegerParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_BinaryInteger_1=ruleBinaryInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_BinaryInteger_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIec.g:9107:5: this_OctalInteger_2= ruleOctalInteger
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBitStringValueAccess().getOctalIntegerParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_OctalInteger_2=ruleOctalInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OctalInteger_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalIec.g:9119:5: this_HexInteger_3= ruleHexInteger
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBitStringValueAccess().getHexIntegerParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_HexInteger_3=ruleHexInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_HexInteger_3);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitStringValue"


    // $ANTLR start "entryRuleBoolean"
    // InternalIec.g:9137:1: entryRuleBoolean returns [EObject current=null] : iv_ruleBoolean= ruleBoolean EOF ;
    public final EObject entryRuleBoolean() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolean = null;


        try {
            // InternalIec.g:9138:2: (iv_ruleBoolean= ruleBoolean EOF )
            // InternalIec.g:9139:2: iv_ruleBoolean= ruleBoolean EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBoolean=ruleBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolean; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolean"


    // $ANTLR start "ruleBoolean"
    // InternalIec.g:9146:1: ruleBoolean returns [EObject current=null] : ( () ( (otherlv_1= 'BOOL#' ( (lv_boolInt_2_0= ruleInteger ) ) ) | ( ( (lv_true_3_0= 'TRUE' ) ) | otherlv_4= 'FALSE' ) ) ) ;
    public final EObject ruleBoolean() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_true_3_0=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_boolInt_2_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:9149:28: ( ( () ( (otherlv_1= 'BOOL#' ( (lv_boolInt_2_0= ruleInteger ) ) ) | ( ( (lv_true_3_0= 'TRUE' ) ) | otherlv_4= 'FALSE' ) ) ) )
            // InternalIec.g:9150:1: ( () ( (otherlv_1= 'BOOL#' ( (lv_boolInt_2_0= ruleInteger ) ) ) | ( ( (lv_true_3_0= 'TRUE' ) ) | otherlv_4= 'FALSE' ) ) )
            {
            // InternalIec.g:9150:1: ( () ( (otherlv_1= 'BOOL#' ( (lv_boolInt_2_0= ruleInteger ) ) ) | ( ( (lv_true_3_0= 'TRUE' ) ) | otherlv_4= 'FALSE' ) ) )
            // InternalIec.g:9150:2: () ( (otherlv_1= 'BOOL#' ( (lv_boolInt_2_0= ruleInteger ) ) ) | ( ( (lv_true_3_0= 'TRUE' ) ) | otherlv_4= 'FALSE' ) )
            {
            // InternalIec.g:9150:2: ()
            // InternalIec.g:9151:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getBooleanAccess().getBooleanAction_0(),
                          current);
                  
            }

            }

            // InternalIec.g:9156:2: ( (otherlv_1= 'BOOL#' ( (lv_boolInt_2_0= ruleInteger ) ) ) | ( ( (lv_true_3_0= 'TRUE' ) ) | otherlv_4= 'FALSE' ) )
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==145) ) {
                alt139=1;
            }
            else if ( ((LA139_0>=146 && LA139_0<=147)) ) {
                alt139=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 139, 0, input);

                throw nvae;
            }
            switch (alt139) {
                case 1 :
                    // InternalIec.g:9156:3: (otherlv_1= 'BOOL#' ( (lv_boolInt_2_0= ruleInteger ) ) )
                    {
                    // InternalIec.g:9156:3: (otherlv_1= 'BOOL#' ( (lv_boolInt_2_0= ruleInteger ) ) )
                    // InternalIec.g:9156:5: otherlv_1= 'BOOL#' ( (lv_boolInt_2_0= ruleInteger ) )
                    {
                    otherlv_1=(Token)match(input,145,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getBooleanAccess().getBOOLKeyword_1_0_0());
                          
                    }
                    // InternalIec.g:9160:1: ( (lv_boolInt_2_0= ruleInteger ) )
                    // InternalIec.g:9161:1: (lv_boolInt_2_0= ruleInteger )
                    {
                    // InternalIec.g:9161:1: (lv_boolInt_2_0= ruleInteger )
                    // InternalIec.g:9162:3: lv_boolInt_2_0= ruleInteger
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBooleanAccess().getBoolIntIntegerParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_boolInt_2_0=ruleInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBooleanRule());
                      	        }
                             		set(
                             			current, 
                             			"boolInt",
                              		lv_boolInt_2_0, 
                              		"com.bichler.iec.Iec.Integer");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIec.g:9179:6: ( ( (lv_true_3_0= 'TRUE' ) ) | otherlv_4= 'FALSE' )
                    {
                    // InternalIec.g:9179:6: ( ( (lv_true_3_0= 'TRUE' ) ) | otherlv_4= 'FALSE' )
                    int alt138=2;
                    int LA138_0 = input.LA(1);

                    if ( (LA138_0==146) ) {
                        alt138=1;
                    }
                    else if ( (LA138_0==147) ) {
                        alt138=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 138, 0, input);

                        throw nvae;
                    }
                    switch (alt138) {
                        case 1 :
                            // InternalIec.g:9179:7: ( (lv_true_3_0= 'TRUE' ) )
                            {
                            // InternalIec.g:9179:7: ( (lv_true_3_0= 'TRUE' ) )
                            // InternalIec.g:9180:1: (lv_true_3_0= 'TRUE' )
                            {
                            // InternalIec.g:9180:1: (lv_true_3_0= 'TRUE' )
                            // InternalIec.g:9181:3: lv_true_3_0= 'TRUE'
                            {
                            lv_true_3_0=(Token)match(input,146,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_true_3_0, grammarAccess.getBooleanAccess().getTrueTRUEKeyword_1_1_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getBooleanRule());
                              	        }
                                     		setWithLastConsumed(current, "true", true, "TRUE");
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalIec.g:9195:7: otherlv_4= 'FALSE'
                            {
                            otherlv_4=(Token)match(input,147,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getBooleanAccess().getFALSEKeyword_1_1_1());
                                  
                            }

                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolean"


    // $ANTLR start "entryRuleTimeLiteral"
    // InternalIec.g:9207:1: entryRuleTimeLiteral returns [EObject current=null] : iv_ruleTimeLiteral= ruleTimeLiteral EOF ;
    public final EObject entryRuleTimeLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTimeLiteral = null;


        try {
            // InternalIec.g:9208:2: (iv_ruleTimeLiteral= ruleTimeLiteral EOF )
            // InternalIec.g:9209:2: iv_ruleTimeLiteral= ruleTimeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTimeLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTimeLiteral=ruleTimeLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTimeLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTimeLiteral"


    // $ANTLR start "ruleTimeLiteral"
    // InternalIec.g:9216:1: ruleTimeLiteral returns [EObject current=null] : (this_DurationLiteral_0= ruleDurationLiteral | this_TimeOfDayLiteral_1= ruleTimeOfDayLiteral | this_DateLiteral_2= ruleDateLiteral | this_DateAndTimeLiteral_3= ruleDateAndTimeLiteral ) ;
    public final EObject ruleTimeLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_DurationLiteral_0 = null;

        EObject this_TimeOfDayLiteral_1 = null;

        EObject this_DateLiteral_2 = null;

        EObject this_DateAndTimeLiteral_3 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:9219:28: ( (this_DurationLiteral_0= ruleDurationLiteral | this_TimeOfDayLiteral_1= ruleTimeOfDayLiteral | this_DateLiteral_2= ruleDateLiteral | this_DateAndTimeLiteral_3= ruleDateAndTimeLiteral ) )
            // InternalIec.g:9220:1: (this_DurationLiteral_0= ruleDurationLiteral | this_TimeOfDayLiteral_1= ruleTimeOfDayLiteral | this_DateLiteral_2= ruleDateLiteral | this_DateAndTimeLiteral_3= ruleDateAndTimeLiteral )
            {
            // InternalIec.g:9220:1: (this_DurationLiteral_0= ruleDurationLiteral | this_TimeOfDayLiteral_1= ruleTimeOfDayLiteral | this_DateLiteral_2= ruleDateLiteral | this_DateAndTimeLiteral_3= ruleDateAndTimeLiteral )
            int alt140=4;
            switch ( input.LA(1) ) {
            case 148:
            case 149:
            case 150:
                {
                alt140=1;
                }
                break;
            case 151:
            case 152:
                {
                alt140=2;
                }
                break;
            case 153:
            case 154:
                {
                alt140=3;
                }
                break;
            case 155:
            case 156:
                {
                alt140=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 140, 0, input);

                throw nvae;
            }

            switch (alt140) {
                case 1 :
                    // InternalIec.g:9221:5: this_DurationLiteral_0= ruleDurationLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTimeLiteralAccess().getDurationLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DurationLiteral_0=ruleDurationLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_DurationLiteral_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:9231:5: this_TimeOfDayLiteral_1= ruleTimeOfDayLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTimeLiteralAccess().getTimeOfDayLiteralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TimeOfDayLiteral_1=ruleTimeOfDayLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TimeOfDayLiteral_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIec.g:9241:5: this_DateLiteral_2= ruleDateLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTimeLiteralAccess().getDateLiteralParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DateLiteral_2=ruleDateLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_DateLiteral_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalIec.g:9251:5: this_DateAndTimeLiteral_3= ruleDateAndTimeLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTimeLiteralAccess().getDateAndTimeLiteralParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DateAndTimeLiteral_3=ruleDateAndTimeLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_DateAndTimeLiteral_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTimeLiteral"


    // $ANTLR start "entryRuleDurationLiteral"
    // InternalIec.g:9267:1: entryRuleDurationLiteral returns [EObject current=null] : iv_ruleDurationLiteral= ruleDurationLiteral EOF ;
    public final EObject entryRuleDurationLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDurationLiteral = null;


        try {
            // InternalIec.g:9268:2: (iv_ruleDurationLiteral= ruleDurationLiteral EOF )
            // InternalIec.g:9269:2: iv_ruleDurationLiteral= ruleDurationLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDurationLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDurationLiteral=ruleDurationLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDurationLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDurationLiteral"


    // $ANTLR start "ruleDurationLiteral"
    // InternalIec.g:9276:1: ruleDurationLiteral returns [EObject current=null] : ( (otherlv_0= 'T#' | otherlv_1= 't#' | otherlv_2= 'TIME#' ) (otherlv_3= '-' )? ( ( (lv_duration_4_0= RULE_DAYS ) ) | ( (lv_duration_5_0= RULE_HOURS ) ) | ( (lv_duration_6_0= RULE_MINUTES ) ) | ( (lv_duration_7_0= RULE_SECONDS ) ) | ( (lv_duration_8_0= RULE_MILLISECONDS ) ) ) ) ;
    public final EObject ruleDurationLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_duration_4_0=null;
        Token lv_duration_5_0=null;
        Token lv_duration_6_0=null;
        Token lv_duration_7_0=null;
        Token lv_duration_8_0=null;

         enterRule(); 
            
        try {
            // InternalIec.g:9279:28: ( ( (otherlv_0= 'T#' | otherlv_1= 't#' | otherlv_2= 'TIME#' ) (otherlv_3= '-' )? ( ( (lv_duration_4_0= RULE_DAYS ) ) | ( (lv_duration_5_0= RULE_HOURS ) ) | ( (lv_duration_6_0= RULE_MINUTES ) ) | ( (lv_duration_7_0= RULE_SECONDS ) ) | ( (lv_duration_8_0= RULE_MILLISECONDS ) ) ) ) )
            // InternalIec.g:9280:1: ( (otherlv_0= 'T#' | otherlv_1= 't#' | otherlv_2= 'TIME#' ) (otherlv_3= '-' )? ( ( (lv_duration_4_0= RULE_DAYS ) ) | ( (lv_duration_5_0= RULE_HOURS ) ) | ( (lv_duration_6_0= RULE_MINUTES ) ) | ( (lv_duration_7_0= RULE_SECONDS ) ) | ( (lv_duration_8_0= RULE_MILLISECONDS ) ) ) )
            {
            // InternalIec.g:9280:1: ( (otherlv_0= 'T#' | otherlv_1= 't#' | otherlv_2= 'TIME#' ) (otherlv_3= '-' )? ( ( (lv_duration_4_0= RULE_DAYS ) ) | ( (lv_duration_5_0= RULE_HOURS ) ) | ( (lv_duration_6_0= RULE_MINUTES ) ) | ( (lv_duration_7_0= RULE_SECONDS ) ) | ( (lv_duration_8_0= RULE_MILLISECONDS ) ) ) )
            // InternalIec.g:9280:2: (otherlv_0= 'T#' | otherlv_1= 't#' | otherlv_2= 'TIME#' ) (otherlv_3= '-' )? ( ( (lv_duration_4_0= RULE_DAYS ) ) | ( (lv_duration_5_0= RULE_HOURS ) ) | ( (lv_duration_6_0= RULE_MINUTES ) ) | ( (lv_duration_7_0= RULE_SECONDS ) ) | ( (lv_duration_8_0= RULE_MILLISECONDS ) ) )
            {
            // InternalIec.g:9280:2: (otherlv_0= 'T#' | otherlv_1= 't#' | otherlv_2= 'TIME#' )
            int alt141=3;
            switch ( input.LA(1) ) {
            case 148:
                {
                alt141=1;
                }
                break;
            case 149:
                {
                alt141=2;
                }
                break;
            case 150:
                {
                alt141=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 141, 0, input);

                throw nvae;
            }

            switch (alt141) {
                case 1 :
                    // InternalIec.g:9280:4: otherlv_0= 'T#'
                    {
                    otherlv_0=(Token)match(input,148,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getDurationLiteralAccess().getTKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:9285:7: otherlv_1= 't#'
                    {
                    otherlv_1=(Token)match(input,149,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getDurationLiteralAccess().getTKeyword_0_1());
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIec.g:9290:7: otherlv_2= 'TIME#'
                    {
                    otherlv_2=(Token)match(input,150,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getDurationLiteralAccess().getTIMEKeyword_0_2());
                          
                    }

                    }
                    break;

            }

            // InternalIec.g:9294:2: (otherlv_3= '-' )?
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==75) ) {
                alt142=1;
            }
            switch (alt142) {
                case 1 :
                    // InternalIec.g:9294:4: otherlv_3= '-'
                    {
                    otherlv_3=(Token)match(input,75,FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getDurationLiteralAccess().getHyphenMinusKeyword_1());
                          
                    }

                    }
                    break;

            }

            // InternalIec.g:9298:3: ( ( (lv_duration_4_0= RULE_DAYS ) ) | ( (lv_duration_5_0= RULE_HOURS ) ) | ( (lv_duration_6_0= RULE_MINUTES ) ) | ( (lv_duration_7_0= RULE_SECONDS ) ) | ( (lv_duration_8_0= RULE_MILLISECONDS ) ) )
            int alt143=5;
            switch ( input.LA(1) ) {
            case RULE_DAYS:
                {
                alt143=1;
                }
                break;
            case RULE_HOURS:
                {
                alt143=2;
                }
                break;
            case RULE_MINUTES:
                {
                alt143=3;
                }
                break;
            case RULE_SECONDS:
                {
                alt143=4;
                }
                break;
            case RULE_MILLISECONDS:
                {
                alt143=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 143, 0, input);

                throw nvae;
            }

            switch (alt143) {
                case 1 :
                    // InternalIec.g:9298:4: ( (lv_duration_4_0= RULE_DAYS ) )
                    {
                    // InternalIec.g:9298:4: ( (lv_duration_4_0= RULE_DAYS ) )
                    // InternalIec.g:9299:1: (lv_duration_4_0= RULE_DAYS )
                    {
                    // InternalIec.g:9299:1: (lv_duration_4_0= RULE_DAYS )
                    // InternalIec.g:9300:3: lv_duration_4_0= RULE_DAYS
                    {
                    lv_duration_4_0=(Token)match(input,RULE_DAYS,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_duration_4_0, grammarAccess.getDurationLiteralAccess().getDurationDAYSTerminalRuleCall_2_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDurationLiteralRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"duration",
                              		lv_duration_4_0, 
                              		"com.bichler.iec.Iec.DAYS");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIec.g:9317:6: ( (lv_duration_5_0= RULE_HOURS ) )
                    {
                    // InternalIec.g:9317:6: ( (lv_duration_5_0= RULE_HOURS ) )
                    // InternalIec.g:9318:1: (lv_duration_5_0= RULE_HOURS )
                    {
                    // InternalIec.g:9318:1: (lv_duration_5_0= RULE_HOURS )
                    // InternalIec.g:9319:3: lv_duration_5_0= RULE_HOURS
                    {
                    lv_duration_5_0=(Token)match(input,RULE_HOURS,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_duration_5_0, grammarAccess.getDurationLiteralAccess().getDurationHOURSTerminalRuleCall_2_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDurationLiteralRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"duration",
                              		lv_duration_5_0, 
                              		"com.bichler.iec.Iec.HOURS");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalIec.g:9336:6: ( (lv_duration_6_0= RULE_MINUTES ) )
                    {
                    // InternalIec.g:9336:6: ( (lv_duration_6_0= RULE_MINUTES ) )
                    // InternalIec.g:9337:1: (lv_duration_6_0= RULE_MINUTES )
                    {
                    // InternalIec.g:9337:1: (lv_duration_6_0= RULE_MINUTES )
                    // InternalIec.g:9338:3: lv_duration_6_0= RULE_MINUTES
                    {
                    lv_duration_6_0=(Token)match(input,RULE_MINUTES,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_duration_6_0, grammarAccess.getDurationLiteralAccess().getDurationMINUTESTerminalRuleCall_2_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDurationLiteralRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"duration",
                              		lv_duration_6_0, 
                              		"com.bichler.iec.Iec.MINUTES");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalIec.g:9355:6: ( (lv_duration_7_0= RULE_SECONDS ) )
                    {
                    // InternalIec.g:9355:6: ( (lv_duration_7_0= RULE_SECONDS ) )
                    // InternalIec.g:9356:1: (lv_duration_7_0= RULE_SECONDS )
                    {
                    // InternalIec.g:9356:1: (lv_duration_7_0= RULE_SECONDS )
                    // InternalIec.g:9357:3: lv_duration_7_0= RULE_SECONDS
                    {
                    lv_duration_7_0=(Token)match(input,RULE_SECONDS,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_duration_7_0, grammarAccess.getDurationLiteralAccess().getDurationSECONDSTerminalRuleCall_2_3_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDurationLiteralRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"duration",
                              		lv_duration_7_0, 
                              		"com.bichler.iec.Iec.SECONDS");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalIec.g:9374:6: ( (lv_duration_8_0= RULE_MILLISECONDS ) )
                    {
                    // InternalIec.g:9374:6: ( (lv_duration_8_0= RULE_MILLISECONDS ) )
                    // InternalIec.g:9375:1: (lv_duration_8_0= RULE_MILLISECONDS )
                    {
                    // InternalIec.g:9375:1: (lv_duration_8_0= RULE_MILLISECONDS )
                    // InternalIec.g:9376:3: lv_duration_8_0= RULE_MILLISECONDS
                    {
                    lv_duration_8_0=(Token)match(input,RULE_MILLISECONDS,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_duration_8_0, grammarAccess.getDurationLiteralAccess().getDurationMILLISECONDSTerminalRuleCall_2_4_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDurationLiteralRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"duration",
                              		lv_duration_8_0, 
                              		"com.bichler.iec.Iec.MILLISECONDS");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDurationLiteral"


    // $ANTLR start "entryRuleTimeOfDayLiteral"
    // InternalIec.g:9400:1: entryRuleTimeOfDayLiteral returns [EObject current=null] : iv_ruleTimeOfDayLiteral= ruleTimeOfDayLiteral EOF ;
    public final EObject entryRuleTimeOfDayLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTimeOfDayLiteral = null;


        try {
            // InternalIec.g:9401:2: (iv_ruleTimeOfDayLiteral= ruleTimeOfDayLiteral EOF )
            // InternalIec.g:9402:2: iv_ruleTimeOfDayLiteral= ruleTimeOfDayLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTimeOfDayLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTimeOfDayLiteral=ruleTimeOfDayLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTimeOfDayLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTimeOfDayLiteral"


    // $ANTLR start "ruleTimeOfDayLiteral"
    // InternalIec.g:9409:1: ruleTimeOfDayLiteral returns [EObject current=null] : ( (otherlv_0= 'TIME_OF_DAY#' | otherlv_1= 'TOD#' ) ( (lv_hour_2_0= ruleInteger ) ) otherlv_3= ':' ( (lv_minute_4_0= ruleInteger ) ) otherlv_5= ':' ( (lv_second_6_0= ruleInteger ) ) ) ;
    public final EObject ruleTimeOfDayLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_hour_2_0 = null;

        AntlrDatatypeRuleToken lv_minute_4_0 = null;

        AntlrDatatypeRuleToken lv_second_6_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:9412:28: ( ( (otherlv_0= 'TIME_OF_DAY#' | otherlv_1= 'TOD#' ) ( (lv_hour_2_0= ruleInteger ) ) otherlv_3= ':' ( (lv_minute_4_0= ruleInteger ) ) otherlv_5= ':' ( (lv_second_6_0= ruleInteger ) ) ) )
            // InternalIec.g:9413:1: ( (otherlv_0= 'TIME_OF_DAY#' | otherlv_1= 'TOD#' ) ( (lv_hour_2_0= ruleInteger ) ) otherlv_3= ':' ( (lv_minute_4_0= ruleInteger ) ) otherlv_5= ':' ( (lv_second_6_0= ruleInteger ) ) )
            {
            // InternalIec.g:9413:1: ( (otherlv_0= 'TIME_OF_DAY#' | otherlv_1= 'TOD#' ) ( (lv_hour_2_0= ruleInteger ) ) otherlv_3= ':' ( (lv_minute_4_0= ruleInteger ) ) otherlv_5= ':' ( (lv_second_6_0= ruleInteger ) ) )
            // InternalIec.g:9413:2: (otherlv_0= 'TIME_OF_DAY#' | otherlv_1= 'TOD#' ) ( (lv_hour_2_0= ruleInteger ) ) otherlv_3= ':' ( (lv_minute_4_0= ruleInteger ) ) otherlv_5= ':' ( (lv_second_6_0= ruleInteger ) )
            {
            // InternalIec.g:9413:2: (otherlv_0= 'TIME_OF_DAY#' | otherlv_1= 'TOD#' )
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==151) ) {
                alt144=1;
            }
            else if ( (LA144_0==152) ) {
                alt144=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 144, 0, input);

                throw nvae;
            }
            switch (alt144) {
                case 1 :
                    // InternalIec.g:9413:4: otherlv_0= 'TIME_OF_DAY#'
                    {
                    otherlv_0=(Token)match(input,151,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getTimeOfDayLiteralAccess().getTIME_OF_DAYKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:9418:7: otherlv_1= 'TOD#'
                    {
                    otherlv_1=(Token)match(input,152,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTimeOfDayLiteralAccess().getTODKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalIec.g:9422:2: ( (lv_hour_2_0= ruleInteger ) )
            // InternalIec.g:9423:1: (lv_hour_2_0= ruleInteger )
            {
            // InternalIec.g:9423:1: (lv_hour_2_0= ruleInteger )
            // InternalIec.g:9424:3: lv_hour_2_0= ruleInteger
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTimeOfDayLiteralAccess().getHourIntegerParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_5);
            lv_hour_2_0=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTimeOfDayLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"hour",
                      		lv_hour_2_0, 
                      		"com.bichler.iec.Iec.Integer");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,64,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getTimeOfDayLiteralAccess().getColonKeyword_2());
                  
            }
            // InternalIec.g:9444:1: ( (lv_minute_4_0= ruleInteger ) )
            // InternalIec.g:9445:1: (lv_minute_4_0= ruleInteger )
            {
            // InternalIec.g:9445:1: (lv_minute_4_0= ruleInteger )
            // InternalIec.g:9446:3: lv_minute_4_0= ruleInteger
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTimeOfDayLiteralAccess().getMinuteIntegerParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_5);
            lv_minute_4_0=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTimeOfDayLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"minute",
                      		lv_minute_4_0, 
                      		"com.bichler.iec.Iec.Integer");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,64,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getTimeOfDayLiteralAccess().getColonKeyword_4());
                  
            }
            // InternalIec.g:9466:1: ( (lv_second_6_0= ruleInteger ) )
            // InternalIec.g:9467:1: (lv_second_6_0= ruleInteger )
            {
            // InternalIec.g:9467:1: (lv_second_6_0= ruleInteger )
            // InternalIec.g:9468:3: lv_second_6_0= ruleInteger
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTimeOfDayLiteralAccess().getSecondIntegerParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_second_6_0=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTimeOfDayLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"second",
                      		lv_second_6_0, 
                      		"com.bichler.iec.Iec.Integer");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTimeOfDayLiteral"


    // $ANTLR start "entryRuleDateLiteral"
    // InternalIec.g:9492:1: entryRuleDateLiteral returns [EObject current=null] : iv_ruleDateLiteral= ruleDateLiteral EOF ;
    public final EObject entryRuleDateLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDateLiteral = null;


        try {
            // InternalIec.g:9493:2: (iv_ruleDateLiteral= ruleDateLiteral EOF )
            // InternalIec.g:9494:2: iv_ruleDateLiteral= ruleDateLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDateLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDateLiteral=ruleDateLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDateLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDateLiteral"


    // $ANTLR start "ruleDateLiteral"
    // InternalIec.g:9501:1: ruleDateLiteral returns [EObject current=null] : ( (otherlv_0= 'DATE#' | otherlv_1= 'D#' ) ( (lv_year_2_0= ruleInteger ) ) otherlv_3= '-' ( (lv_month_4_0= ruleInteger ) ) otherlv_5= '-' ( (lv_day_6_0= ruleInteger ) ) ) ;
    public final EObject ruleDateLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_year_2_0 = null;

        AntlrDatatypeRuleToken lv_month_4_0 = null;

        AntlrDatatypeRuleToken lv_day_6_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:9504:28: ( ( (otherlv_0= 'DATE#' | otherlv_1= 'D#' ) ( (lv_year_2_0= ruleInteger ) ) otherlv_3= '-' ( (lv_month_4_0= ruleInteger ) ) otherlv_5= '-' ( (lv_day_6_0= ruleInteger ) ) ) )
            // InternalIec.g:9505:1: ( (otherlv_0= 'DATE#' | otherlv_1= 'D#' ) ( (lv_year_2_0= ruleInteger ) ) otherlv_3= '-' ( (lv_month_4_0= ruleInteger ) ) otherlv_5= '-' ( (lv_day_6_0= ruleInteger ) ) )
            {
            // InternalIec.g:9505:1: ( (otherlv_0= 'DATE#' | otherlv_1= 'D#' ) ( (lv_year_2_0= ruleInteger ) ) otherlv_3= '-' ( (lv_month_4_0= ruleInteger ) ) otherlv_5= '-' ( (lv_day_6_0= ruleInteger ) ) )
            // InternalIec.g:9505:2: (otherlv_0= 'DATE#' | otherlv_1= 'D#' ) ( (lv_year_2_0= ruleInteger ) ) otherlv_3= '-' ( (lv_month_4_0= ruleInteger ) ) otherlv_5= '-' ( (lv_day_6_0= ruleInteger ) )
            {
            // InternalIec.g:9505:2: (otherlv_0= 'DATE#' | otherlv_1= 'D#' )
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==153) ) {
                alt145=1;
            }
            else if ( (LA145_0==154) ) {
                alt145=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 145, 0, input);

                throw nvae;
            }
            switch (alt145) {
                case 1 :
                    // InternalIec.g:9505:4: otherlv_0= 'DATE#'
                    {
                    otherlv_0=(Token)match(input,153,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getDateLiteralAccess().getDATEKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:9510:7: otherlv_1= 'D#'
                    {
                    otherlv_1=(Token)match(input,154,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getDateLiteralAccess().getDKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalIec.g:9514:2: ( (lv_year_2_0= ruleInteger ) )
            // InternalIec.g:9515:1: (lv_year_2_0= ruleInteger )
            {
            // InternalIec.g:9515:1: (lv_year_2_0= ruleInteger )
            // InternalIec.g:9516:3: lv_year_2_0= ruleInteger
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDateLiteralAccess().getYearIntegerParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_97);
            lv_year_2_0=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDateLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"year",
                      		lv_year_2_0, 
                      		"com.bichler.iec.Iec.Integer");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,75,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getDateLiteralAccess().getHyphenMinusKeyword_2());
                  
            }
            // InternalIec.g:9536:1: ( (lv_month_4_0= ruleInteger ) )
            // InternalIec.g:9537:1: (lv_month_4_0= ruleInteger )
            {
            // InternalIec.g:9537:1: (lv_month_4_0= ruleInteger )
            // InternalIec.g:9538:3: lv_month_4_0= ruleInteger
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDateLiteralAccess().getMonthIntegerParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_97);
            lv_month_4_0=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDateLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"month",
                      		lv_month_4_0, 
                      		"com.bichler.iec.Iec.Integer");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,75,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getDateLiteralAccess().getHyphenMinusKeyword_4());
                  
            }
            // InternalIec.g:9558:1: ( (lv_day_6_0= ruleInteger ) )
            // InternalIec.g:9559:1: (lv_day_6_0= ruleInteger )
            {
            // InternalIec.g:9559:1: (lv_day_6_0= ruleInteger )
            // InternalIec.g:9560:3: lv_day_6_0= ruleInteger
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDateLiteralAccess().getDayIntegerParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_day_6_0=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDateLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"day",
                      		lv_day_6_0, 
                      		"com.bichler.iec.Iec.Integer");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDateLiteral"


    // $ANTLR start "entryRuleDateAndTimeLiteral"
    // InternalIec.g:9584:1: entryRuleDateAndTimeLiteral returns [EObject current=null] : iv_ruleDateAndTimeLiteral= ruleDateAndTimeLiteral EOF ;
    public final EObject entryRuleDateAndTimeLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDateAndTimeLiteral = null;


        try {
            // InternalIec.g:9585:2: (iv_ruleDateAndTimeLiteral= ruleDateAndTimeLiteral EOF )
            // InternalIec.g:9586:2: iv_ruleDateAndTimeLiteral= ruleDateAndTimeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDateAndTimeLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDateAndTimeLiteral=ruleDateAndTimeLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDateAndTimeLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDateAndTimeLiteral"


    // $ANTLR start "ruleDateAndTimeLiteral"
    // InternalIec.g:9593:1: ruleDateAndTimeLiteral returns [EObject current=null] : ( (otherlv_0= 'DATE_AND_TIME#' | otherlv_1= 'DT#' ) ( (lv_year_2_0= ruleInteger ) ) otherlv_3= '-' ( (lv_month_4_0= ruleInteger ) ) otherlv_5= '-' ( (lv_day_6_0= ruleInteger ) ) otherlv_7= '-' ( (lv_hour_8_0= ruleInteger ) ) otherlv_9= ':' ( (lv_minute_10_0= ruleInteger ) ) otherlv_11= ':' ( (lv_second_12_0= ruleInteger ) ) ) ;
    public final EObject ruleDateAndTimeLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        AntlrDatatypeRuleToken lv_year_2_0 = null;

        AntlrDatatypeRuleToken lv_month_4_0 = null;

        AntlrDatatypeRuleToken lv_day_6_0 = null;

        AntlrDatatypeRuleToken lv_hour_8_0 = null;

        AntlrDatatypeRuleToken lv_minute_10_0 = null;

        AntlrDatatypeRuleToken lv_second_12_0 = null;


         enterRule(); 
            
        try {
            // InternalIec.g:9596:28: ( ( (otherlv_0= 'DATE_AND_TIME#' | otherlv_1= 'DT#' ) ( (lv_year_2_0= ruleInteger ) ) otherlv_3= '-' ( (lv_month_4_0= ruleInteger ) ) otherlv_5= '-' ( (lv_day_6_0= ruleInteger ) ) otherlv_7= '-' ( (lv_hour_8_0= ruleInteger ) ) otherlv_9= ':' ( (lv_minute_10_0= ruleInteger ) ) otherlv_11= ':' ( (lv_second_12_0= ruleInteger ) ) ) )
            // InternalIec.g:9597:1: ( (otherlv_0= 'DATE_AND_TIME#' | otherlv_1= 'DT#' ) ( (lv_year_2_0= ruleInteger ) ) otherlv_3= '-' ( (lv_month_4_0= ruleInteger ) ) otherlv_5= '-' ( (lv_day_6_0= ruleInteger ) ) otherlv_7= '-' ( (lv_hour_8_0= ruleInteger ) ) otherlv_9= ':' ( (lv_minute_10_0= ruleInteger ) ) otherlv_11= ':' ( (lv_second_12_0= ruleInteger ) ) )
            {
            // InternalIec.g:9597:1: ( (otherlv_0= 'DATE_AND_TIME#' | otherlv_1= 'DT#' ) ( (lv_year_2_0= ruleInteger ) ) otherlv_3= '-' ( (lv_month_4_0= ruleInteger ) ) otherlv_5= '-' ( (lv_day_6_0= ruleInteger ) ) otherlv_7= '-' ( (lv_hour_8_0= ruleInteger ) ) otherlv_9= ':' ( (lv_minute_10_0= ruleInteger ) ) otherlv_11= ':' ( (lv_second_12_0= ruleInteger ) ) )
            // InternalIec.g:9597:2: (otherlv_0= 'DATE_AND_TIME#' | otherlv_1= 'DT#' ) ( (lv_year_2_0= ruleInteger ) ) otherlv_3= '-' ( (lv_month_4_0= ruleInteger ) ) otherlv_5= '-' ( (lv_day_6_0= ruleInteger ) ) otherlv_7= '-' ( (lv_hour_8_0= ruleInteger ) ) otherlv_9= ':' ( (lv_minute_10_0= ruleInteger ) ) otherlv_11= ':' ( (lv_second_12_0= ruleInteger ) )
            {
            // InternalIec.g:9597:2: (otherlv_0= 'DATE_AND_TIME#' | otherlv_1= 'DT#' )
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==155) ) {
                alt146=1;
            }
            else if ( (LA146_0==156) ) {
                alt146=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 146, 0, input);

                throw nvae;
            }
            switch (alt146) {
                case 1 :
                    // InternalIec.g:9597:4: otherlv_0= 'DATE_AND_TIME#'
                    {
                    otherlv_0=(Token)match(input,155,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getDateAndTimeLiteralAccess().getDATE_AND_TIMEKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:9602:7: otherlv_1= 'DT#'
                    {
                    otherlv_1=(Token)match(input,156,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getDateAndTimeLiteralAccess().getDTKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalIec.g:9606:2: ( (lv_year_2_0= ruleInteger ) )
            // InternalIec.g:9607:1: (lv_year_2_0= ruleInteger )
            {
            // InternalIec.g:9607:1: (lv_year_2_0= ruleInteger )
            // InternalIec.g:9608:3: lv_year_2_0= ruleInteger
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDateAndTimeLiteralAccess().getYearIntegerParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_97);
            lv_year_2_0=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDateAndTimeLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"year",
                      		lv_year_2_0, 
                      		"com.bichler.iec.Iec.Integer");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,75,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getDateAndTimeLiteralAccess().getHyphenMinusKeyword_2());
                  
            }
            // InternalIec.g:9628:1: ( (lv_month_4_0= ruleInteger ) )
            // InternalIec.g:9629:1: (lv_month_4_0= ruleInteger )
            {
            // InternalIec.g:9629:1: (lv_month_4_0= ruleInteger )
            // InternalIec.g:9630:3: lv_month_4_0= ruleInteger
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDateAndTimeLiteralAccess().getMonthIntegerParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_97);
            lv_month_4_0=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDateAndTimeLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"month",
                      		lv_month_4_0, 
                      		"com.bichler.iec.Iec.Integer");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,75,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getDateAndTimeLiteralAccess().getHyphenMinusKeyword_4());
                  
            }
            // InternalIec.g:9650:1: ( (lv_day_6_0= ruleInteger ) )
            // InternalIec.g:9651:1: (lv_day_6_0= ruleInteger )
            {
            // InternalIec.g:9651:1: (lv_day_6_0= ruleInteger )
            // InternalIec.g:9652:3: lv_day_6_0= ruleInteger
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDateAndTimeLiteralAccess().getDayIntegerParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_97);
            lv_day_6_0=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDateAndTimeLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"day",
                      		lv_day_6_0, 
                      		"com.bichler.iec.Iec.Integer");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_7=(Token)match(input,75,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getDateAndTimeLiteralAccess().getHyphenMinusKeyword_6());
                  
            }
            // InternalIec.g:9672:1: ( (lv_hour_8_0= ruleInteger ) )
            // InternalIec.g:9673:1: (lv_hour_8_0= ruleInteger )
            {
            // InternalIec.g:9673:1: (lv_hour_8_0= ruleInteger )
            // InternalIec.g:9674:3: lv_hour_8_0= ruleInteger
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDateAndTimeLiteralAccess().getHourIntegerParserRuleCall_7_0()); 
              	    
            }
            pushFollow(FOLLOW_5);
            lv_hour_8_0=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDateAndTimeLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"hour",
                      		lv_hour_8_0, 
                      		"com.bichler.iec.Iec.Integer");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_9=(Token)match(input,64,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getDateAndTimeLiteralAccess().getColonKeyword_8());
                  
            }
            // InternalIec.g:9694:1: ( (lv_minute_10_0= ruleInteger ) )
            // InternalIec.g:9695:1: (lv_minute_10_0= ruleInteger )
            {
            // InternalIec.g:9695:1: (lv_minute_10_0= ruleInteger )
            // InternalIec.g:9696:3: lv_minute_10_0= ruleInteger
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDateAndTimeLiteralAccess().getMinuteIntegerParserRuleCall_9_0()); 
              	    
            }
            pushFollow(FOLLOW_5);
            lv_minute_10_0=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDateAndTimeLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"minute",
                      		lv_minute_10_0, 
                      		"com.bichler.iec.Iec.Integer");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_11=(Token)match(input,64,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_11, grammarAccess.getDateAndTimeLiteralAccess().getColonKeyword_10());
                  
            }
            // InternalIec.g:9716:1: ( (lv_second_12_0= ruleInteger ) )
            // InternalIec.g:9717:1: (lv_second_12_0= ruleInteger )
            {
            // InternalIec.g:9717:1: (lv_second_12_0= ruleInteger )
            // InternalIec.g:9718:3: lv_second_12_0= ruleInteger
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDateAndTimeLiteralAccess().getSecondIntegerParserRuleCall_11_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_second_12_0=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDateAndTimeLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"second",
                      		lv_second_12_0, 
                      		"com.bichler.iec.Iec.Integer");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDateAndTimeLiteral"


    // $ANTLR start "entryRuleIdentifier"
    // InternalIec.g:9742:1: entryRuleIdentifier returns [String current=null] : iv_ruleIdentifier= ruleIdentifier EOF ;
    public final String entryRuleIdentifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdentifier = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        	
        try {
            // InternalIec.g:9746:2: (iv_ruleIdentifier= ruleIdentifier EOF )
            // InternalIec.g:9747:2: iv_ruleIdentifier= ruleIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentifier=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifier.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleIdentifier"


    // $ANTLR start "ruleIdentifier"
    // InternalIec.g:9757:1: ruleIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_LETTER_0= RULE_LETTER | this_ID_1= RULE_ID ) ;
    public final AntlrDatatypeRuleToken ruleIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LETTER_0=null;
        Token this_ID_1=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            // InternalIec.g:9761:28: ( (this_LETTER_0= RULE_LETTER | this_ID_1= RULE_ID ) )
            // InternalIec.g:9762:1: (this_LETTER_0= RULE_LETTER | this_ID_1= RULE_ID )
            {
            // InternalIec.g:9762:1: (this_LETTER_0= RULE_LETTER | this_ID_1= RULE_ID )
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==RULE_LETTER) ) {
                alt147=1;
            }
            else if ( (LA147_0==RULE_ID) ) {
                alt147=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 147, 0, input);

                throw nvae;
            }
            switch (alt147) {
                case 1 :
                    // InternalIec.g:9762:6: this_LETTER_0= RULE_LETTER
                    {
                    this_LETTER_0=(Token)match(input,RULE_LETTER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_LETTER_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LETTER_0, grammarAccess.getIdentifierAccess().getLETTERTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:9770:10: this_ID_1= RULE_ID
                    {
                    this_ID_1=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ID_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ID_1, grammarAccess.getIdentifierAccess().getIDTerminalRuleCall_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleIdentifier"


    // $ANTLR start "entryRuleInteger"
    // InternalIec.g:9788:1: entryRuleInteger returns [String current=null] : iv_ruleInteger= ruleInteger EOF ;
    public final String entryRuleInteger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInteger = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        	
        try {
            // InternalIec.g:9792:2: (iv_ruleInteger= ruleInteger EOF )
            // InternalIec.g:9793:2: iv_ruleInteger= ruleInteger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntegerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInteger=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInteger.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleInteger"


    // $ANTLR start "ruleInteger"
    // InternalIec.g:9803:1: ruleInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_DIGIT_0= RULE_DIGIT | this_INT_1= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleInteger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_DIGIT_0=null;
        Token this_INT_1=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            // InternalIec.g:9807:28: ( (this_DIGIT_0= RULE_DIGIT | this_INT_1= RULE_INT ) )
            // InternalIec.g:9808:1: (this_DIGIT_0= RULE_DIGIT | this_INT_1= RULE_INT )
            {
            // InternalIec.g:9808:1: (this_DIGIT_0= RULE_DIGIT | this_INT_1= RULE_INT )
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==RULE_DIGIT) ) {
                alt148=1;
            }
            else if ( (LA148_0==RULE_INT) ) {
                alt148=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 148, 0, input);

                throw nvae;
            }
            switch (alt148) {
                case 1 :
                    // InternalIec.g:9808:6: this_DIGIT_0= RULE_DIGIT
                    {
                    this_DIGIT_0=(Token)match(input,RULE_DIGIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_DIGIT_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_DIGIT_0, grammarAccess.getIntegerAccess().getDIGITTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIec.g:9816:10: this_INT_1= RULE_INT
                    {
                    this_INT_1=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_INT_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_INT_1, grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleInteger"

    // $ANTLR start synpred1_InternalIec
    public final void synpred1_InternalIec_fragment() throws RecognitionException {   
        // InternalIec.g:3871:7: ( rulePrimaryExpression )
        // InternalIec.g:3871:9: rulePrimaryExpression
        {
        pushFollow(FOLLOW_2);
        rulePrimaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_InternalIec

    // Delegated rules

    public final boolean synpred1_InternalIec() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalIec_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA17 dfa17 = new DFA17(this);
    protected DFA51 dfa51 = new DFA51(this);
    static final String dfa_1s = "\44\uffff";
    static final String dfa_2s = "\4\uffff\27\42\1\uffff\2\42\6\uffff";
    static final String dfa_3s = "\1\25\2\100\1\25\27\4\1\uffff\2\4\5\uffff\1\10";
    static final String dfa_4s = "\1\26\2\100\1\115\24\103\2\106\1\103\1\uffff\2\102\5\uffff\1\u009c";
    static final String dfa_5s = "\33\uffff\1\6\2\uffff\1\3\1\4\1\5\1\2\1\1\1\uffff";
    static final String dfa_6s = "\44\uffff}>";
    static final String[] dfa_7s = {
            "\1\1\1\2",
            "\1\3",
            "\1\3",
            "\1\34\1\35\7\uffff\1\31\1\32\1\30\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\16\uffff\1\36\1\uffff\1\37\1\33\6\uffff\1\40",
            "\1\42\75\uffff\1\42\1\41",
            "\1\42\75\uffff\1\42\1\41",
            "\1\42\75\uffff\1\42\1\41",
            "\1\42\75\uffff\1\42\1\41",
            "\1\42\75\uffff\1\42\1\41",
            "\1\42\75\uffff\1\42\1\41",
            "\1\42\75\uffff\1\42\1\41",
            "\1\42\75\uffff\1\42\1\41",
            "\1\42\75\uffff\1\42\1\41",
            "\1\42\75\uffff\1\42\1\41",
            "\1\42\75\uffff\1\42\1\41",
            "\1\42\75\uffff\1\42\1\41",
            "\1\42\75\uffff\1\42\1\41",
            "\1\42\75\uffff\1\42\1\41",
            "\1\42\75\uffff\1\42\1\41",
            "\1\42\75\uffff\1\42\1\41",
            "\1\42\75\uffff\1\42\1\41",
            "\1\42\75\uffff\1\42\1\41",
            "\1\42\75\uffff\1\42\1\41",
            "\1\42\75\uffff\1\42\1\41",
            "\1\42\75\uffff\1\42\1\41\2\uffff\1\33",
            "\1\42\75\uffff\1\42\1\41\2\uffff\1\33",
            "\1\42\75\uffff\1\42\1\41",
            "",
            "\1\42\75\uffff\1\43",
            "\1\42\75\uffff\1\43",
            "",
            "",
            "",
            "",
            "",
            "\5\42\1\uffff\2\42\5\uffff\3\42\11\uffff\12\42\30\uffff\1\40\2\uffff\1\42\3\uffff\2\42\101\uffff\20\42"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA17 extends DFA {

        public DFA17(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 17;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "1311:1: (this_SimpleTypeDeclaration_0= ruleSimpleTypeDeclaration | this_RangeDeclaration_1= ruleRangeDeclaration | this_EnumDeclaration_2= ruleEnumDeclaration | this_ArrayDeclaration_3= ruleArrayDeclaration | this_StructureTypeDeclaration_4= ruleStructureTypeDeclaration | this_StringDeclaration_5= ruleStringDeclaration )";
        }
    }
    static final String dfa_8s = "\52\uffff";
    static final String dfa_9s = "\1\6\1\uffff\1\0\47\uffff";
    static final String dfa_10s = "\1\u009c\1\uffff\1\0\47\uffff";
    static final String dfa_11s = "\1\uffff\1\1\1\uffff\47\2";
    static final String dfa_12s = "\1\0\1\uffff\1\1\47\uffff}>";
    static final String[] dfa_13s = {
            "\1\46\1\uffff\1\15\1\16\1\17\1\20\1\23\1\uffff\1\24\1\25\5\uffff\1\47\1\50\1\14\11\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\21\1\22\30\uffff\1\51\6\uffff\1\13\1\2\21\uffff\1\1\57\uffff\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA51 extends DFA {

        public DFA51(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 51;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "3816:1: ( ( () ( ( (lv_operator_1_1= 'NOT' | lv_operator_1_2= '-' ) ) ) ( (lv_expression_2_0= ruleUnaryExpression ) ) ) | ( ( rulePrimaryExpression )=>this_PrimaryExpression_3= rulePrimaryExpression ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA51_0 = input.LA(1);

                         
                        int index51_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA51_0==93) ) {s = 1;}

                        else if ( (LA51_0==75) ) {s = 2;}

                        else if ( (LA51_0==33) && (synpred1_InternalIec())) {s = 3;}

                        else if ( (LA51_0==34) && (synpred1_InternalIec())) {s = 4;}

                        else if ( (LA51_0==35) && (synpred1_InternalIec())) {s = 5;}

                        else if ( (LA51_0==36) && (synpred1_InternalIec())) {s = 6;}

                        else if ( (LA51_0==37) && (synpred1_InternalIec())) {s = 7;}

                        else if ( (LA51_0==38) && (synpred1_InternalIec())) {s = 8;}

                        else if ( (LA51_0==39) && (synpred1_InternalIec())) {s = 9;}

                        else if ( (LA51_0==40) && (synpred1_InternalIec())) {s = 10;}

                        else if ( (LA51_0==74) && (synpred1_InternalIec())) {s = 11;}

                        else if ( (LA51_0==RULE_DIGIT) && (synpred1_InternalIec())) {s = 12;}

                        else if ( (LA51_0==RULE_INT) && (synpred1_InternalIec())) {s = 13;}

                        else if ( (LA51_0==RULE_BINT) && (synpred1_InternalIec())) {s = 14;}

                        else if ( (LA51_0==RULE_OINT) && (synpred1_InternalIec())) {s = 15;}

                        else if ( (LA51_0==RULE_HINT) && (synpred1_InternalIec())) {s = 16;}

                        else if ( (LA51_0==41) && (synpred1_InternalIec())) {s = 17;}

                        else if ( (LA51_0==42) && (synpred1_InternalIec())) {s = 18;}

                        else if ( (LA51_0==RULE_FIXED_POINT) && (synpred1_InternalIec())) {s = 19;}

                        else if ( (LA51_0==RULE_SINGLE_BYTE_STRING) && (synpred1_InternalIec())) {s = 20;}

                        else if ( (LA51_0==RULE_DOUBLE_BYTE_STRING) && (synpred1_InternalIec())) {s = 21;}

                        else if ( (LA51_0==148) && (synpred1_InternalIec())) {s = 22;}

                        else if ( (LA51_0==149) && (synpred1_InternalIec())) {s = 23;}

                        else if ( (LA51_0==150) && (synpred1_InternalIec())) {s = 24;}

                        else if ( (LA51_0==151) && (synpred1_InternalIec())) {s = 25;}

                        else if ( (LA51_0==152) && (synpred1_InternalIec())) {s = 26;}

                        else if ( (LA51_0==153) && (synpred1_InternalIec())) {s = 27;}

                        else if ( (LA51_0==154) && (synpred1_InternalIec())) {s = 28;}

                        else if ( (LA51_0==155) && (synpred1_InternalIec())) {s = 29;}

                        else if ( (LA51_0==156) && (synpred1_InternalIec())) {s = 30;}

                        else if ( (LA51_0==141) && (synpred1_InternalIec())) {s = 31;}

                        else if ( (LA51_0==142) && (synpred1_InternalIec())) {s = 32;}

                        else if ( (LA51_0==143) && (synpred1_InternalIec())) {s = 33;}

                        else if ( (LA51_0==144) && (synpred1_InternalIec())) {s = 34;}

                        else if ( (LA51_0==145) && (synpred1_InternalIec())) {s = 35;}

                        else if ( (LA51_0==146) && (synpred1_InternalIec())) {s = 36;}

                        else if ( (LA51_0==147) && (synpred1_InternalIec())) {s = 37;}

                        else if ( (LA51_0==RULE_DIRECT_VARIABLE_ID) && (synpred1_InternalIec())) {s = 38;}

                        else if ( (LA51_0==RULE_LETTER) && (synpred1_InternalIec())) {s = 39;}

                        else if ( (LA51_0==RULE_ID) && (synpred1_InternalIec())) {s = 40;}

                        else if ( (LA51_0==67) && (synpred1_InternalIec())) {s = 41;}

                         
                        input.seek(index51_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA51_2 = input.LA(1);

                         
                        int index51_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (true) ) {s = 1;}

                        else if ( (synpred1_InternalIec()) ) {s = 41;}

                         
                        input.seek(index51_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 51, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0xFFFFFFFFC0600002L,0x0440000080000000L,0x0000000000000005L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x001FFFFFC0600000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x001FFFFFC0600000L,0x0000000000000002L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x001FFFFFC0E0DF00L,0x0000000000000C40L,0x000000001FFFE000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x001FFFFFC0000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000C00L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000800100L,0x0000000000000C00L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000180L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x001FFFFFC0E0DF00L,0x0000000000000C48L,0x000000001FFFE000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x001FFFFFC0600000L,0x0000000000002000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x001FFFFFC0600000L,0x0000000000004000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000090L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000140000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x000000000000C000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x001FFFFFC0E0DF40L,0x0000000020000C08L,0x000000001FFFE000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000002L,0x0000000000008000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000002L,0x0000000000060000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000002L,0x0000000001F80000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000C00L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000002L,0x000000000E000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x001FFFFFC0600000L,0x0010FF8300060000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x001FFFFFC0600000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x001FFFFFC0600000L,0x0000001C00000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x0000006000000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x001FFFFFC0600002L,0x00007E0000060000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x001FFFFFC0600000L,0x00007E0000060000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x001FFFFFC0E0DF42L,0x0000000000000C00L,0x000000001FFFE000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x001FFFFFC0E0DF40L,0x00000E0000060C10L,0x000000001FFFE000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x00000E0000060010L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000002L,0x00000E0000060000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x001FFFFFC0600002L,0x0010FE0000060000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x001FFFFFC0600000L,0x0010FE0000060000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000000L,0x000E000000000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x001FFFFFC0E00120L,0x0022000000000C00L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x001FFFFFC0E00120L,0x0000000000000C00L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x001FFFFFC0600000L,0x0190FF8200060000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x001FFFFFC0600000L,0x0200000C00000000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x001FFFFFC0600000L,0x2910FF8200060000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x0200000C00000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x001FFFFFC0600000L,0x1000000000000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x001FFFFFC0600000L,0x1000001000000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000002L,0xC000000000000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0xFFFFFFFFC0600000L,0x0440000080000000L,0x0000000000000107L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0xFFFFFFFFC0600000L,0x0440000080000000L,0x0000000000000007L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L,0x0000000000000300L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000002L,0x0400000000000000L,0x0000000000000300L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x001FFFFFC0600000L,0x0000000400000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L,0x0000000000000040L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000008L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x001FFFFFC0600000L,0x0040000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x000007FE0080DF40L,0x0000000000000C00L,0x000000001FFFE000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x001FFFFFC0600040L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x001FFFFFC0600000L,0x1200000400000000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x001FFFFFC0600000L,0x1200001400000000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x001FFFFFC0600010L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001C00L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001800L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x000001FE00800F00L,0x0000000000000C00L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x000007FE00801F00L,0x0000000000000C00L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000002002L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x00000000001F0000L,0x0000000000000800L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x00000000001F0000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});

}