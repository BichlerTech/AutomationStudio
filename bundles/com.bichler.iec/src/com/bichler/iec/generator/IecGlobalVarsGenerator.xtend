/*****************************************************************************
 *                                                                           *
 * Copyright (c) 2018 Bichler Technologies GmbH. All rights reserved.        *
 *                                                                           *
 * Software License Agreement ("SLA") Version 1.0                            *
 *                                                                           *
 * !!!!This file was generated by Automation Studio, do not change it!!!     *
 *                                                                           *
 * Unless explicitly acquired and licensed from Licensor under another       *
 * license, the contents of this file are subject to the Software License    *
 * Agreement ("SLA") Version 2.6, or subsequent versions as allowed by the   *
 * SLA, and You may not copy or use this file in either source code or       *
 * executable form, except in compliance with the terms and conditions of    *
 * the SLA.                                                                  *
 *                                                                           *
 * All software distributed under the SLA is provided strictly on an "AS     *
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,       *
 * AND LICENSOR HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT      *
 * LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR   *
 * PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT. See the SLA for specific   *
 * language governing rights and limitations under the SLA.                  *
 *                                                                           *
 * The complete license agreement can be found here:                         *
 * http://bichler.tech/License/SLA/1.0/                                      *
 *                                                                           *
 * IecTypesGenerator.xtend                                                   *
 *  Created on: Jun 04, 2018                                                 *
 *      Author: hannes bichler                                               *
 *                                                                           *
 *****************************************************************************/
package com.bichler.iec.generator

import com.bichler.iec.iec.GlobalVarDeclarations
import com.bichler.iec.iec.GlobalVarList
import com.bichler.iec.iec.GlobalVarSpec
import org.eclipse.emf.ecore.resource.Resource
import com.bichler.iec.iec.GlobalVar

/**
 * generate code for all global vars
 */
class IecGlobalVarGenerator extends IecGenerator {

	public def doGenerateVars(Resource resource) {

		var String s = ""
		var IecGlobalVarGenerator tgen = new IecGlobalVarGenerator()
		s += tgen.compileGlobalVarMemory()
		for (e : resource.allContents.toIterable.filter(GlobalVarDeclarations)) {
			// s += "struct " + e.name + " {\n"
			s += tgen.compileVarDeclarations(e)
			s += "\n"
		// s += fgen.compileFunctionStructPrototype(e); // e.compileFunctionStructPrototype
		}

		return s;
	}

	def dispatch compileVarDeclarations(GlobalVarDeclarations input) '''
«FOR decl : input.globalVarDecl»
«decl.specInit.baseType.compileGenericType» «decl.spec.compileGlobalVarSpec»;
«ENDFOR»
'''

	def dispatch compileGlobalVarSpec(GlobalVarSpec spec) '''
*«spec.variable.name» = globalMemory + deltaMemory
deltaMemory  += actIncrement;
«IF !actReplaceMent.empty»
	 + «actReplaceMent»
	 
	«ENDIF»;
'''

	def dispatch compileGlobalVarSpec(GlobalVarList spec) {
		for (GlobalVar v : spec.variables) {
//			var int tmpIndex = actMemIndex;
//			actMemIndex += actIncrement;

			if (!actReplaceMent.empty) {
				return "*" + v.name + " = globalMemory + deltaMemory;\n deltaMemory += " + actReplaceMent;

			}
			return "*" + v.name + " = globalMemory + deltaMemory;\n deltaMemory += " + actIncrement
		}
	}

	def compileHeader() '''
/*****************************************************************************
 *                                                                           *
 * Copyright (c) 2019 Bichler Technologies GmbH. All rights reserved.        *
 *                                                                           *
 * Software License Agreement ("SLA") Version 1.0                            *
 *                                                                           *
 * !!!!This file was generated by Automation Studio, do not change it!!!     *
 *                                                                           *
 * Unless explicitly acquired and licensed from Licensor under another       *
 * license, the contents of this file are subject to the Software License    *
 * Agreement ("SLA") Version 2.6, or subsequent versions as allowed by the   *
 * SLA, and You may not copy or use this file in either source code or       *
 * executable form, except in compliance with the terms and conditions of    *
 * the SLA.                                                                  *
 *                                                                           *
 * All software distributed under the SLA is provided strictly on an "AS     *
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,       *
 * AND LICENSOR HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT      *
 * LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR   *
 * PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT. See the SLA for specific   *
 * language governing rights and limitations under the SLA.                  *
 *                                                                           *
 * The complete license agreement can be found here:                         *
 * http://bichler.tech/License/SLA/1.0/                                      *
 *                                                                           *
 * iec_globalvars.h                                                          *
 *  Created on: Jun 04, 2018                                                 *
 *      Author: hannes bichler                                               *
 *                                                                           *
 *****************************************************************************/

#ifndef IEC_GLOBALVARS_H_
#define IEC_GLOBALVARS_H_ 1

#include "iec_datatypes.h"

//****************************************************************************
// start global var declarations
//****************************************************************************

'''

	def compileGlobalVarMemory() '''
// allocate global memory with byte count
int deltaMemory = 0;
'''

	def compileCustomEnd() '''
byte *globalMemory = malloc(deltaMemory);
//****************************************************************************
// end global var declarations
//****************************************************************************

'''

	def compileFooter() '''

#endif // IEC_TYPES_H_
'''

/** ************************************************************************************
 * 
 *  end generate code for all type definitions
 * 
 * ************************************************************************************ */
}
