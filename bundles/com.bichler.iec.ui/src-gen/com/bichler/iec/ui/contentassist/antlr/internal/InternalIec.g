/*
 * generated by Xtext
 */
grammar InternalIec;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package com.bichler.iec.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.bichler.iec.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.bichler.iec.services.IecGrammarAccess;

}

@parser::members {
 
 	private IecGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(IecGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getModelElementAssignment()); }
(rule__Model__ModelElementAssignment)*
{ after(grammarAccess.getModelAccess().getModelElementAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModelElement
entryRuleModelElement 
:
{ before(grammarAccess.getModelElementRule()); }
	 ruleModelElement
{ after(grammarAccess.getModelElementRule()); } 
	 EOF 
;

// Rule ModelElement
ruleModelElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelElementAccess().getAlternatives()); }
(rule__ModelElement__Alternatives)
{ after(grammarAccess.getModelElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLibraryElement
entryRuleLibraryElement 
:
{ before(grammarAccess.getLibraryElementRule()); }
	 ruleLibraryElement
{ after(grammarAccess.getLibraryElementRule()); } 
	 EOF 
;

// Rule LibraryElement
ruleLibraryElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLibraryElementAccess().getAlternatives()); }
(rule__LibraryElement__Alternatives)
{ after(grammarAccess.getLibraryElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLibraryElementDeclaration
entryRuleLibraryElementDeclaration 
:
{ before(grammarAccess.getLibraryElementDeclarationRule()); }
	 ruleLibraryElementDeclaration
{ after(grammarAccess.getLibraryElementDeclarationRule()); } 
	 EOF 
;

// Rule LibraryElementDeclaration
ruleLibraryElementDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLibraryElementDeclarationAccess().getAlternatives()); }
(rule__LibraryElementDeclaration__Alternatives)
{ after(grammarAccess.getLibraryElementDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataType
entryRuleDataType 
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
(rule__DataType__Alternatives)
{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNonGenericType
entryRuleNonGenericType 
:
{ before(grammarAccess.getNonGenericTypeRule()); }
	 ruleNonGenericType
{ after(grammarAccess.getNonGenericTypeRule()); } 
	 EOF 
;

// Rule NonGenericType
ruleNonGenericType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNonGenericTypeAccess().getAlternatives()); }
(rule__NonGenericType__Alternatives)
{ after(grammarAccess.getNonGenericTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElementaryType
entryRuleElementaryType 
:
{ before(grammarAccess.getElementaryTypeRule()); }
	 ruleElementaryType
{ after(grammarAccess.getElementaryTypeRule()); } 
	 EOF 
;

// Rule ElementaryType
ruleElementaryType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElementaryTypeAccess().getAlternatives()); }
(rule__ElementaryType__Alternatives)
{ after(grammarAccess.getElementaryTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringType
entryRuleStringType 
:
{ before(grammarAccess.getStringTypeRule()); }
	 ruleStringType
{ after(grammarAccess.getStringTypeRule()); } 
	 EOF 
;

// Rule StringType
ruleStringType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringTypeAccess().getGroup()); }
(rule__StringType__Group__0)
{ after(grammarAccess.getStringTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumericType
entryRuleNumericType 
:
{ before(grammarAccess.getNumericTypeRule()); }
	 ruleNumericType
{ after(grammarAccess.getNumericTypeRule()); } 
	 EOF 
;

// Rule NumericType
ruleNumericType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumericTypeAccess().getAlternatives()); }
(rule__NumericType__Alternatives)
{ after(grammarAccess.getNumericTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerType
entryRuleIntegerType 
:
{ before(grammarAccess.getIntegerTypeRule()); }
	 ruleIntegerType
{ after(grammarAccess.getIntegerTypeRule()); } 
	 EOF 
;

// Rule IntegerType
ruleIntegerType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerTypeAccess().getAlternatives()); }
(rule__IntegerType__Alternatives)
{ after(grammarAccess.getIntegerTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignedIntegerType
entryRuleSignedIntegerType 
:
{ before(grammarAccess.getSignedIntegerTypeRule()); }
	 ruleSignedIntegerType
{ after(grammarAccess.getSignedIntegerTypeRule()); } 
	 EOF 
;

// Rule SignedIntegerType
ruleSignedIntegerType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignedIntegerTypeAccess().getAlternatives()); }
(rule__SignedIntegerType__Alternatives)
{ after(grammarAccess.getSignedIntegerTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePlainIntegerType
entryRulePlainIntegerType 
:
{ before(grammarAccess.getPlainIntegerTypeRule()); }
	 rulePlainIntegerType
{ after(grammarAccess.getPlainIntegerTypeRule()); } 
	 EOF 
;

// Rule PlainIntegerType
rulePlainIntegerType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPlainIntegerTypeAccess().getGroup()); }
(rule__PlainIntegerType__Group__0)
{ after(grammarAccess.getPlainIntegerTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnsignedIntegerType
entryRuleUnsignedIntegerType 
:
{ before(grammarAccess.getUnsignedIntegerTypeRule()); }
	 ruleUnsignedIntegerType
{ after(grammarAccess.getUnsignedIntegerTypeRule()); } 
	 EOF 
;

// Rule UnsignedIntegerType
ruleUnsignedIntegerType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnsignedIntegerTypeAccess().getAlternatives()); }
(rule__UnsignedIntegerType__Alternatives)
{ after(grammarAccess.getUnsignedIntegerTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRealType
entryRuleRealType 
:
{ before(grammarAccess.getRealTypeRule()); }
	 ruleRealType
{ after(grammarAccess.getRealTypeRule()); } 
	 EOF 
;

// Rule RealType
ruleRealType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRealTypeAccess().getAlternatives()); }
(rule__RealType__Alternatives)
{ after(grammarAccess.getRealTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDateType
entryRuleDateType 
:
{ before(grammarAccess.getDateTypeRule()); }
	 ruleDateType
{ after(grammarAccess.getDateTypeRule()); } 
	 EOF 
;

// Rule DateType
ruleDateType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDateTypeAccess().getAlternatives()); }
(rule__DateType__Alternatives)
{ after(grammarAccess.getDateTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitStringType
entryRuleBitStringType 
:
{ before(grammarAccess.getBitStringTypeRule()); }
	 ruleBitStringType
{ after(grammarAccess.getBitStringTypeRule()); } 
	 EOF 
;

// Rule BitStringType
ruleBitStringType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitStringTypeAccess().getAlternatives()); }
(rule__BitStringType__Alternatives)
{ after(grammarAccess.getBitStringTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGenericType
entryRuleGenericType 
:
{ before(grammarAccess.getGenericTypeRule()); }
	 ruleGenericType
{ after(grammarAccess.getGenericTypeRule()); } 
	 EOF 
;

// Rule GenericType
ruleGenericType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGenericTypeAccess().getAlternatives()); }
(rule__GenericType__Alternatives)
{ after(grammarAccess.getGenericTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDerivedType
entryRuleDerivedType 
:
{ before(grammarAccess.getDerivedTypeRule()); }
	 ruleDerivedType
{ after(grammarAccess.getDerivedTypeRule()); } 
	 EOF 
;

// Rule DerivedType
ruleDerivedType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDerivedTypeAccess().getNameAssignment()); }
(rule__DerivedType__NameAssignment)
{ after(grammarAccess.getDerivedTypeAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTypeDeclaration
entryRuleDataTypeDeclaration 
:
{ before(grammarAccess.getDataTypeDeclarationRule()); }
	 ruleDataTypeDeclaration
{ after(grammarAccess.getDataTypeDeclarationRule()); } 
	 EOF 
;

// Rule DataTypeDeclaration
ruleDataTypeDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getGroup()); }
(rule__DataTypeDeclaration__Group__0)
{ after(grammarAccess.getDataTypeDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeDeclaration
entryRuleTypeDeclaration 
:
{ before(grammarAccess.getTypeDeclarationRule()); }
	 ruleTypeDeclaration
{ after(grammarAccess.getTypeDeclarationRule()); } 
	 EOF 
;

// Rule TypeDeclaration
ruleTypeDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeDeclarationAccess().getAlternatives()); }
(rule__TypeDeclaration__Alternatives)
{ after(grammarAccess.getTypeDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleTypeDeclaration
entryRuleSimpleTypeDeclaration 
:
{ before(grammarAccess.getSimpleTypeDeclarationRule()); }
	 ruleSimpleTypeDeclaration
{ after(grammarAccess.getSimpleTypeDeclarationRule()); } 
	 EOF 
;

// Rule SimpleTypeDeclaration
ruleSimpleTypeDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleTypeDeclarationAccess().getGroup()); }
(rule__SimpleTypeDeclaration__Group__0)
{ after(grammarAccess.getSimpleTypeDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSpecInit
entryRuleSpecInit 
:
{ before(grammarAccess.getSpecInitRule()); }
	 ruleSpecInit
{ after(grammarAccess.getSpecInitRule()); } 
	 EOF 
;

// Rule SpecInit
ruleSpecInit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSpecInitAccess().getGroup()); }
(rule__SpecInit__Group__0)
{ after(grammarAccess.getSpecInitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRangeDeclaration
entryRuleRangeDeclaration 
:
{ before(grammarAccess.getRangeDeclarationRule()); }
	 ruleRangeDeclaration
{ after(grammarAccess.getRangeDeclarationRule()); } 
	 EOF 
;

// Rule RangeDeclaration
ruleRangeDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRangeDeclarationAccess().getGroup()); }
(rule__RangeDeclaration__Group__0)
{ after(grammarAccess.getRangeDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumDeclaration
entryRuleEnumDeclaration 
:
{ before(grammarAccess.getEnumDeclarationRule()); }
	 ruleEnumDeclaration
{ after(grammarAccess.getEnumDeclarationRule()); } 
	 EOF 
;

// Rule EnumDeclaration
ruleEnumDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumDeclarationAccess().getGroup()); }
(rule__EnumDeclaration__Group__0)
{ after(grammarAccess.getEnumDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayDeclaration
entryRuleArrayDeclaration 
:
{ before(grammarAccess.getArrayDeclarationRule()); }
	 ruleArrayDeclaration
{ after(grammarAccess.getArrayDeclarationRule()); } 
	 EOF 
;

// Rule ArrayDeclaration
ruleArrayDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayDeclarationAccess().getGroup()); }
(rule__ArrayDeclaration__Group__0)
{ after(grammarAccess.getArrayDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubRangeWithSign
entryRuleSubRangeWithSign 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getSubRangeWithSignRule()); }
	 ruleSubRangeWithSign
{ after(grammarAccess.getSubRangeWithSignRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule SubRangeWithSign
ruleSubRangeWithSign
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubRangeWithSignAccess().getGroup()); }
(rule__SubRangeWithSign__Group__0)
{ after(grammarAccess.getSubRangeWithSignAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleEnumeration
entryRuleEnumeration 
:
{ before(grammarAccess.getEnumerationRule()); }
	 ruleEnumeration
{ after(grammarAccess.getEnumerationRule()); } 
	 EOF 
;

// Rule Enumeration
ruleEnumeration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumerationAccess().getGroup()); }
(rule__Enumeration__Group__0)
{ after(grammarAccess.getEnumerationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumeratedValue
entryRuleEnumeratedValue 
:
{ before(grammarAccess.getEnumeratedValueRule()); }
	 ruleEnumeratedValue
{ after(grammarAccess.getEnumeratedValueRule()); } 
	 EOF 
;

// Rule EnumeratedValue
ruleEnumeratedValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumeratedValueAccess().getGroup()); }
(rule__EnumeratedValue__Group__0)
{ after(grammarAccess.getEnumeratedValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayInitialization
entryRuleArrayInitialization 
:
{ before(grammarAccess.getArrayInitializationRule()); }
	 ruleArrayInitialization
{ after(grammarAccess.getArrayInitializationRule()); } 
	 EOF 
;

// Rule ArrayInitialization
ruleArrayInitialization
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayInitializationAccess().getGroup()); }
(rule__ArrayInitialization__Group__0)
{ after(grammarAccess.getArrayInitializationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayInitialElements
entryRuleArrayInitialElements 
:
{ before(grammarAccess.getArrayInitialElementsRule()); }
	 ruleArrayInitialElements
{ after(grammarAccess.getArrayInitialElementsRule()); } 
	 EOF 
;

// Rule ArrayInitialElements
ruleArrayInitialElements
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayInitialElementsAccess().getAlternatives()); }
(rule__ArrayInitialElements__Alternatives)
{ after(grammarAccess.getArrayInitialElementsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInitialElement
entryRuleInitialElement 
:
{ before(grammarAccess.getInitialElementRule()); }
	 ruleInitialElement
{ after(grammarAccess.getInitialElementRule()); } 
	 EOF 
;

// Rule InitialElement
ruleInitialElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitialElementAccess().getAlternatives()); }
(rule__InitialElement__Alternatives)
{ after(grammarAccess.getInitialElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructureTypeDeclaration
entryRuleStructureTypeDeclaration 
:
{ before(grammarAccess.getStructureTypeDeclarationRule()); }
	 ruleStructureTypeDeclaration
{ after(grammarAccess.getStructureTypeDeclarationRule()); } 
	 EOF 
;

// Rule StructureTypeDeclaration
ruleStructureTypeDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructureTypeDeclarationAccess().getGroup()); }
(rule__StructureTypeDeclaration__Group__0)
{ after(grammarAccess.getStructureTypeDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructureDeclaration
entryRuleStructureDeclaration 
:
{ before(grammarAccess.getStructureDeclarationRule()); }
	 ruleStructureDeclaration
{ after(grammarAccess.getStructureDeclarationRule()); } 
	 EOF 
;

// Rule StructureDeclaration
ruleStructureDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructureDeclarationAccess().getGroup()); }
(rule__StructureDeclaration__Group__0)
{ after(grammarAccess.getStructureDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructureElementDeclaration
entryRuleStructureElementDeclaration 
:
{ before(grammarAccess.getStructureElementDeclarationRule()); }
	 ruleStructureElementDeclaration
{ after(grammarAccess.getStructureElementDeclarationRule()); } 
	 EOF 
;

// Rule StructureElementDeclaration
ruleStructureElementDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructureElementDeclarationAccess().getGroup()); }
(rule__StructureElementDeclaration__Group__0)
{ after(grammarAccess.getStructureElementDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInitializedStructure
entryRuleInitializedStructure 
:
{ before(grammarAccess.getInitializedStructureRule()); }
	 ruleInitializedStructure
{ after(grammarAccess.getInitializedStructureRule()); } 
	 EOF 
;

// Rule InitializedStructure
ruleInitializedStructure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitializedStructureAccess().getGroup()); }
(rule__InitializedStructure__Group__0)
{ after(grammarAccess.getInitializedStructureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructureInitialization
entryRuleStructureInitialization 
:
{ before(grammarAccess.getStructureInitializationRule()); }
	 ruleStructureInitialization
{ after(grammarAccess.getStructureInitializationRule()); } 
	 EOF 
;

// Rule StructureInitialization
ruleStructureInitialization
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructureInitializationAccess().getGroup()); }
(rule__StructureInitialization__Group__0)
{ after(grammarAccess.getStructureInitializationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructureElementInitialization
entryRuleStructureElementInitialization 
:
{ before(grammarAccess.getStructureElementInitializationRule()); }
	 ruleStructureElementInitialization
{ after(grammarAccess.getStructureElementInitializationRule()); } 
	 EOF 
;

// Rule StructureElementInitialization
ruleStructureElementInitialization
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructureElementInitializationAccess().getGroup()); }
(rule__StructureElementInitialization__Group__0)
{ after(grammarAccess.getStructureElementInitializationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringDeclaration
entryRuleStringDeclaration 
:
{ before(grammarAccess.getStringDeclarationRule()); }
	 ruleStringDeclaration
{ after(grammarAccess.getStringDeclarationRule()); } 
	 EOF 
;

// Rule StringDeclaration
ruleStringDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringDeclarationAccess().getGroup()); }
(rule__StringDeclaration__Group__0)
{ after(grammarAccess.getStringDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getNameAssignment()); }
(rule__Variable__NameAssignment)
{ after(grammarAccess.getVariableAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableAccess
entryRuleVariableAccess 
:
{ before(grammarAccess.getVariableAccessRule()); }
	 ruleVariableAccess
{ after(grammarAccess.getVariableAccessRule()); } 
	 EOF 
;

// Rule VariableAccess
ruleVariableAccess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccessAccess().getAlternatives()); }
(rule__VariableAccess__Alternatives)
{ after(grammarAccess.getVariableAccessAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDirectVariable
entryRuleDirectVariable 
:
{ before(grammarAccess.getDirectVariableRule()); }
	 ruleDirectVariable
{ after(grammarAccess.getDirectVariableRule()); } 
	 EOF 
;

// Rule DirectVariable
ruleDirectVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDirectVariableAccess().getNameAssignment()); }
(rule__DirectVariable__NameAssignment)
{ after(grammarAccess.getDirectVariableAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSymbolicVariableAccess
entryRuleSymbolicVariableAccess 
:
{ before(grammarAccess.getSymbolicVariableAccessRule()); }
	 ruleSymbolicVariableAccess
{ after(grammarAccess.getSymbolicVariableAccessRule()); } 
	 EOF 
;

// Rule SymbolicVariableAccess
ruleSymbolicVariableAccess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSymbolicVariableAccessAccess().getAlternatives()); }
(rule__SymbolicVariableAccess__Alternatives)
{ after(grammarAccess.getSymbolicVariableAccessAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamedVariableAccess
entryRuleNamedVariableAccess 
:
{ before(grammarAccess.getNamedVariableAccessRule()); }
	 ruleNamedVariableAccess
{ after(grammarAccess.getNamedVariableAccessRule()); } 
	 EOF 
;

// Rule NamedVariableAccess
ruleNamedVariableAccess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamedVariableAccessAccess().getNamedVariableAssignment()); }
(rule__NamedVariableAccess__NamedVariableAssignment)
{ after(grammarAccess.getNamedVariableAccessAccess().getNamedVariableAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiElementVariable
entryRuleMultiElementVariable 
:
{ before(grammarAccess.getMultiElementVariableRule()); }
	 ruleMultiElementVariable
{ after(grammarAccess.getMultiElementVariableRule()); } 
	 EOF 
;

// Rule MultiElementVariable
ruleMultiElementVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiElementVariableAccess().getAlternatives()); }
(rule__MultiElementVariable__Alternatives)
{ after(grammarAccess.getMultiElementVariableAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayVariable
entryRuleArrayVariable 
:
{ before(grammarAccess.getArrayVariableRule()); }
	 ruleArrayVariable
{ after(grammarAccess.getArrayVariableRule()); } 
	 EOF 
;

// Rule ArrayVariable
ruleArrayVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayVariableAccess().getGroup()); }
(rule__ArrayVariable__Group__0)
{ after(grammarAccess.getArrayVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructuredVariable
entryRuleStructuredVariable 
:
{ before(grammarAccess.getStructuredVariableRule()); }
	 ruleStructuredVariable
{ after(grammarAccess.getStructuredVariableRule()); } 
	 EOF 
;

// Rule StructuredVariable
ruleStructuredVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructuredVariableAccess().getGroup()); }
(rule__StructuredVariable__Group__0)
{ after(grammarAccess.getStructuredVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getOrExpressionParserRuleCall()); }
	ruleOrExpression
{ after(grammarAccess.getExpressionAccess().getOrExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExpression
entryRuleOrExpression 
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
(rule__OrExpression__Group__0)
{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXorExpression
entryRuleXorExpression 
:
{ before(grammarAccess.getXorExpressionRule()); }
	 ruleXorExpression
{ after(grammarAccess.getXorExpressionRule()); } 
	 EOF 
;

// Rule XorExpression
ruleXorExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXorExpressionAccess().getGroup()); }
(rule__XorExpression__Group__0)
{ after(grammarAccess.getXorExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExpression
entryRuleAndExpression 
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
(rule__AndExpression__Group__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComparison
entryRuleComparison 
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComparisonAccess().getGroup()); }
(rule__Comparison__Group__0)
{ after(grammarAccess.getComparisonAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddExpression
entryRuleAddExpression 
:
{ before(grammarAccess.getAddExpressionRule()); }
	 ruleAddExpression
{ after(grammarAccess.getAddExpressionRule()); } 
	 EOF 
;

// Rule AddExpression
ruleAddExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAddExpressionAccess().getGroup()); }
(rule__AddExpression__Group__0)
{ after(grammarAccess.getAddExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerm
entryRuleTerm 
:
{ before(grammarAccess.getTermRule()); }
	 ruleTerm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule Term
ruleTerm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTermAccess().getGroup()); }
(rule__Term__Group__0)
{ after(grammarAccess.getTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePowerExpression
entryRulePowerExpression 
:
{ before(grammarAccess.getPowerExpressionRule()); }
	 rulePowerExpression
{ after(grammarAccess.getPowerExpressionRule()); } 
	 EOF 
;

// Rule PowerExpression
rulePowerExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPowerExpressionAccess().getGroup()); }
(rule__PowerExpression__Group__0)
{ after(grammarAccess.getPowerExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression 
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
(rule__UnaryExpression__Alternatives)
{ after(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
(rule__PrimaryExpression__Alternatives)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParenthesesExpression
entryRuleParenthesesExpression 
:
{ before(grammarAccess.getParenthesesExpressionRule()); }
	 ruleParenthesesExpression
{ after(grammarAccess.getParenthesesExpressionRule()); } 
	 EOF 
;

// Rule ParenthesesExpression
ruleParenthesesExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParenthesesExpressionAccess().getGroup()); }
(rule__ParenthesesExpression__Group__0)
{ after(grammarAccess.getParenthesesExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParamAssignment
entryRuleParamAssignment 
:
{ before(grammarAccess.getParamAssignmentRule()); }
	 ruleParamAssignment
{ after(grammarAccess.getParamAssignmentRule()); } 
	 EOF 
;

// Rule ParamAssignment
ruleParamAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParamAssignmentAccess().getAlternatives()); }
(rule__ParamAssignment__Alternatives)
{ after(grammarAccess.getParamAssignmentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionDeclaration
entryRuleFunctionDeclaration 
:
{ before(grammarAccess.getFunctionDeclarationRule()); }
	 ruleFunctionDeclaration
{ after(grammarAccess.getFunctionDeclarationRule()); } 
	 EOF 
;

// Rule FunctionDeclaration
ruleFunctionDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getGroup()); }
(rule__FunctionDeclaration__Group__0)
{ after(grammarAccess.getFunctionDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIoVarDeclarations
entryRuleIoVarDeclarations 
:
{ before(grammarAccess.getIoVarDeclarationsRule()); }
	 ruleIoVarDeclarations
{ after(grammarAccess.getIoVarDeclarationsRule()); } 
	 EOF 
;

// Rule IoVarDeclarations
ruleIoVarDeclarations
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIoVarDeclarationsAccess().getAlternatives()); }
(rule__IoVarDeclarations__Alternatives)
{ after(grammarAccess.getIoVarDeclarationsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInputDeclarations
entryRuleInputDeclarations 
:
{ before(grammarAccess.getInputDeclarationsRule()); }
	 ruleInputDeclarations
{ after(grammarAccess.getInputDeclarationsRule()); } 
	 EOF 
;

// Rule InputDeclarations
ruleInputDeclarations
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputDeclarationsAccess().getGroup()); }
(rule__InputDeclarations__Group__0)
{ after(grammarAccess.getInputDeclarationsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInputDeclaration
entryRuleInputDeclaration 
:
{ before(grammarAccess.getInputDeclarationRule()); }
	 ruleInputDeclaration
{ after(grammarAccess.getInputDeclarationRule()); } 
	 EOF 
;

// Rule InputDeclaration
ruleInputDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputDeclarationAccess().getGroup()); }
(rule__InputDeclaration__Group__0)
{ after(grammarAccess.getInputDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleDeclSpecification
entryRuleDeclSpecification 
:
{ before(grammarAccess.getDeclSpecificationRule()); }
	 ruleDeclSpecification
{ after(grammarAccess.getDeclSpecificationRule()); } 
	 EOF 
;

// Rule DeclSpecification
ruleDeclSpecification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclSpecificationAccess().getAlternatives()); }
(rule__DeclSpecification__Alternatives)
{ after(grammarAccess.getDeclSpecificationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarDeclSpecification
entryRuleVarDeclSpecification 
:
{ before(grammarAccess.getVarDeclSpecificationRule()); }
	 ruleVarDeclSpecification
{ after(grammarAccess.getVarDeclSpecificationRule()); } 
	 EOF 
;

// Rule VarDeclSpecification
ruleVarDeclSpecification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarDeclSpecificationAccess().getSpecInitAssignment()); }
(rule__VarDeclSpecification__SpecInitAssignment)
{ after(grammarAccess.getVarDeclSpecificationAccess().getSpecInitAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEdgeDeclSpecification
entryRuleEdgeDeclSpecification 
:
{ before(grammarAccess.getEdgeDeclSpecificationRule()); }
	 ruleEdgeDeclSpecification
{ after(grammarAccess.getEdgeDeclSpecificationRule()); } 
	 EOF 
;

// Rule EdgeDeclSpecification
ruleEdgeDeclSpecification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEdgeDeclSpecificationAccess().getGroup()); }
(rule__EdgeDeclSpecification__Group__0)
{ after(grammarAccess.getEdgeDeclSpecificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVar1List
entryRuleVar1List 
:
{ before(grammarAccess.getVar1ListRule()); }
	 ruleVar1List
{ after(grammarAccess.getVar1ListRule()); } 
	 EOF 
;

// Rule Var1List
ruleVar1List
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVar1ListAccess().getGroup()); }
(rule__Var1List__Group__0)
{ after(grammarAccess.getVar1ListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOutputDeclarations
entryRuleOutputDeclarations 
:
{ before(grammarAccess.getOutputDeclarationsRule()); }
	 ruleOutputDeclarations
{ after(grammarAccess.getOutputDeclarationsRule()); } 
	 EOF 
;

// Rule OutputDeclarations
ruleOutputDeclarations
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOutputDeclarationsAccess().getGroup()); }
(rule__OutputDeclarations__Group__0)
{ after(grammarAccess.getOutputDeclarationsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarInitDecl
entryRuleVarInitDecl 
:
{ before(grammarAccess.getVarInitDeclRule()); }
	 ruleVarInitDecl
{ after(grammarAccess.getVarInitDeclRule()); } 
	 EOF 
;

// Rule VarInitDecl
ruleVarInitDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarInitDeclAccess().getGroup()); }
(rule__VarInitDecl__Group__0)
{ after(grammarAccess.getVarInitDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInputOutputDeclarations
entryRuleInputOutputDeclarations 
:
{ before(grammarAccess.getInputOutputDeclarationsRule()); }
	 ruleInputOutputDeclarations
{ after(grammarAccess.getInputOutputDeclarationsRule()); } 
	 EOF 
;

// Rule InputOutputDeclarations
ruleInputOutputDeclarations
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputOutputDeclarationsAccess().getGroup()); }
(rule__InputOutputDeclarations__Group__0)
{ after(grammarAccess.getInputOutputDeclarationsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleFunctionBody
entryRuleFunctionBody 
:
{ before(grammarAccess.getFunctionBodyRule()); }
	 ruleFunctionBody
{ after(grammarAccess.getFunctionBodyRule()); } 
	 EOF 
;

// Rule FunctionBody
ruleFunctionBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionBodyAccess().getAlternatives()); }
(rule__FunctionBody__Alternatives)
{ after(grammarAccess.getFunctionBodyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstructionList
entryRuleInstructionList 
:
{ before(grammarAccess.getInstructionListRule()); }
	 ruleInstructionList
{ after(grammarAccess.getInstructionListRule()); } 
	 EOF 
;

// Rule InstructionList
ruleInstructionList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstructionListAccess().getGroup()); }
(rule__InstructionList__Group__0)
{ after(grammarAccess.getInstructionListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstruction
entryRuleInstruction 
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstructionAccess().getGroup()); }
(rule__Instruction__Group__0)
{ after(grammarAccess.getInstructionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLabel
entryRuleLabel 
:
{ before(grammarAccess.getLabelRule()); }
	 ruleLabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule Label
ruleLabel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLabelAccess().getNameAssignment()); }
(rule__Label__NameAssignment)
{ after(grammarAccess.getLabelAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperation
entryRuleOperation 
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationAccess().getAlternatives()); }
(rule__Operation__Alternatives)
{ after(grammarAccess.getOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleOperation
entryRuleSimpleOperation 
:
{ before(grammarAccess.getSimpleOperationRule()); }
	 ruleSimpleOperation
{ after(grammarAccess.getSimpleOperationRule()); } 
	 EOF 
;

// Rule SimpleOperation
ruleSimpleOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleOperationAccess().getGroup()); }
(rule__SimpleOperation__Group__0)
{ after(grammarAccess.getSimpleOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionOperation
entryRuleExpressionOperation 
:
{ before(grammarAccess.getExpressionOperationRule()); }
	 ruleExpressionOperation
{ after(grammarAccess.getExpressionOperationRule()); } 
	 EOF 
;

// Rule ExpressionOperation
ruleExpressionOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionOperationAccess().getGroup()); }
(rule__ExpressionOperation__Group__0)
{ after(grammarAccess.getExpressionOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJmpOperation
entryRuleJmpOperation 
:
{ before(grammarAccess.getJmpOperationRule()); }
	 ruleJmpOperation
{ after(grammarAccess.getJmpOperationRule()); } 
	 EOF 
;

// Rule JmpOperation
ruleJmpOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJmpOperationAccess().getGroup()); }
(rule__JmpOperation__Group__0)
{ after(grammarAccess.getJmpOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleOperator
entryRuleSimpleOperator 
:
{ before(grammarAccess.getSimpleOperatorRule()); }
	 ruleSimpleOperator
{ after(grammarAccess.getSimpleOperatorRule()); } 
	 EOF 
;

// Rule SimpleOperator
ruleSimpleOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleOperatorAccess().getAlternatives()); }
(rule__SimpleOperator__Alternatives)
{ after(grammarAccess.getSimpleOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionOperator
entryRuleExpressionOperator 
:
{ before(grammarAccess.getExpressionOperatorRule()); }
	 ruleExpressionOperator
{ after(grammarAccess.getExpressionOperatorRule()); } 
	 EOF 
;

// Rule ExpressionOperator
ruleExpressionOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionOperatorAccess().getAlternatives()); }
(rule__ExpressionOperator__Alternatives)
{ after(grammarAccess.getExpressionOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJmpOperator
entryRuleJmpOperator 
:
{ before(grammarAccess.getJmpOperatorRule()); }
	 ruleJmpOperator
{ after(grammarAccess.getJmpOperatorRule()); } 
	 EOF 
;

// Rule JmpOperator
ruleJmpOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJmpOperatorAccess().getAlternatives()); }
(rule__JmpOperator__Alternatives)
{ after(grammarAccess.getJmpOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperand
entryRuleOperand 
:
{ before(grammarAccess.getOperandRule()); }
	 ruleOperand
{ after(grammarAccess.getOperandRule()); } 
	 EOF 
;

// Rule Operand
ruleOperand
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperandAccess().getAlternatives()); }
(rule__Operand__Alternatives)
{ after(grammarAccess.getOperandAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferencedOperand
entryRuleReferencedOperand 
:
{ before(grammarAccess.getReferencedOperandRule()); }
	 ruleReferencedOperand
{ after(grammarAccess.getReferencedOperandRule()); } 
	 EOF 
;

// Rule ReferencedOperand
ruleReferencedOperand
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferencedOperandAccess().getAlternatives()); }
(rule__ReferencedOperand__Alternatives)
{ after(grammarAccess.getReferencedOperandAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleInstructionList
entryRuleSimpleInstructionList 
:
{ before(grammarAccess.getSimpleInstructionListRule()); }
	 ruleSimpleInstructionList
{ after(grammarAccess.getSimpleInstructionListRule()); } 
	 EOF 
;

// Rule SimpleInstructionList
ruleSimpleInstructionList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleInstructionListAccess().getGroup()); }
(rule__SimpleInstructionList__Group__0)
{ after(grammarAccess.getSimpleInstructionListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleInstruction
entryRuleSimpleInstruction 
:
{ before(grammarAccess.getSimpleInstructionRule()); }
	 ruleSimpleInstruction
{ after(grammarAccess.getSimpleInstructionRule()); } 
	 EOF 
;

// Rule SimpleInstruction
ruleSimpleInstruction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleInstructionAccess().getAlternatives()); }
(rule__SimpleInstruction__Alternatives)
{ after(grammarAccess.getSimpleInstructionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatementList
entryRuleStatementList 
:
{ before(grammarAccess.getStatementListRule()); }
	 ruleStatementList
{ after(grammarAccess.getStatementListRule()); } 
	 EOF 
;

// Rule StatementList
ruleStatementList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementListAccess().getGroup()); }
(rule__StatementList__Group__0)
{ after(grammarAccess.getStatementListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignStatement
entryRuleAssignStatement 
:
{ before(grammarAccess.getAssignStatementRule()); }
	 ruleAssignStatement
{ after(grammarAccess.getAssignStatementRule()); } 
	 EOF 
;

// Rule AssignStatement
ruleAssignStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignStatementAccess().getGroup()); }
(rule__AssignStatement__Group__0)
{ after(grammarAccess.getAssignStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelectionStatement
entryRuleSelectionStatement 
:
{ before(grammarAccess.getSelectionStatementRule()); }
	 ruleSelectionStatement
{ after(grammarAccess.getSelectionStatementRule()); } 
	 EOF 
;

// Rule SelectionStatement
ruleSelectionStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectionStatementAccess().getAlternatives()); }
(rule__SelectionStatement__Alternatives)
{ after(grammarAccess.getSelectionStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfStatement
entryRuleIfStatement 
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfStatementAccess().getGroup()); }
(rule__IfStatement__Group__0)
{ after(grammarAccess.getIfStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElseIf
entryRuleElseIf 
:
{ before(grammarAccess.getElseIfRule()); }
	 ruleElseIf
{ after(grammarAccess.getElseIfRule()); } 
	 EOF 
;

// Rule ElseIf
ruleElseIf
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElseIfAccess().getGroup()); }
(rule__ElseIf__Group__0)
{ after(grammarAccess.getElseIfAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCaseStatement
entryRuleCaseStatement 
:
{ before(grammarAccess.getCaseStatementRule()); }
	 ruleCaseStatement
{ after(grammarAccess.getCaseStatementRule()); } 
	 EOF 
;

// Rule CaseStatement
ruleCaseStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCaseStatementAccess().getGroup()); }
(rule__CaseStatement__Group__0)
{ after(grammarAccess.getCaseStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCaseElement
entryRuleCaseElement 
:
{ before(grammarAccess.getCaseElementRule()); }
	 ruleCaseElement
{ after(grammarAccess.getCaseElementRule()); } 
	 EOF 
;

// Rule CaseElement
ruleCaseElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCaseElementAccess().getGroup()); }
(rule__CaseElement__Group__0)
{ after(grammarAccess.getCaseElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCaseList
entryRuleCaseList 
:
{ before(grammarAccess.getCaseListRule()); }
	 ruleCaseList
{ after(grammarAccess.getCaseListRule()); } 
	 EOF 
;

// Rule CaseList
ruleCaseList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCaseListAccess().getGroup()); }
(rule__CaseList__Group__0)
{ after(grammarAccess.getCaseListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCaseListElement
entryRuleCaseListElement 
:
{ before(grammarAccess.getCaseListElementRule()); }
	 ruleCaseListElement
{ after(grammarAccess.getCaseListElementRule()); } 
	 EOF 
;

// Rule CaseListElement
ruleCaseListElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCaseListElementAccess().getAlternatives()); }
(rule__CaseListElement__Alternatives)
{ after(grammarAccess.getCaseListElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionBlockDeclaration
entryRuleFunctionBlockDeclaration 
:
{ before(grammarAccess.getFunctionBlockDeclarationRule()); }
	 ruleFunctionBlockDeclaration
{ after(grammarAccess.getFunctionBlockDeclarationRule()); } 
	 EOF 
;

// Rule FunctionBlockDeclaration
ruleFunctionBlockDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionBlockDeclarationAccess().getGroup()); }
(rule__FunctionBlockDeclaration__Group__0)
{ after(grammarAccess.getFunctionBlockDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionBlockVarDeclarations
entryRuleFunctionBlockVarDeclarations 
:
{ before(grammarAccess.getFunctionBlockVarDeclarationsRule()); }
	 ruleFunctionBlockVarDeclarations
{ after(grammarAccess.getFunctionBlockVarDeclarationsRule()); } 
	 EOF 
;

// Rule FunctionBlockVarDeclarations
ruleFunctionBlockVarDeclarations
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionBlockVarDeclarationsAccess().getAlternatives()); }
(rule__FunctionBlockVarDeclarations__Alternatives)
{ after(grammarAccess.getFunctionBlockVarDeclarationsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOtherVarDeclarations
entryRuleOtherVarDeclarations 
:
{ before(grammarAccess.getOtherVarDeclarationsRule()); }
	 ruleOtherVarDeclarations
{ after(grammarAccess.getOtherVarDeclarationsRule()); } 
	 EOF 
;

// Rule OtherVarDeclarations
ruleOtherVarDeclarations
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOtherVarDeclarationsAccess().getVarDeclarationsParserRuleCall()); }
	ruleVarDeclarations
{ after(grammarAccess.getOtherVarDeclarationsAccess().getVarDeclarationsParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarDeclarations
entryRuleVarDeclarations 
:
{ before(grammarAccess.getVarDeclarationsRule()); }
	 ruleVarDeclarations
{ after(grammarAccess.getVarDeclarationsRule()); } 
	 EOF 
;

// Rule VarDeclarations
ruleVarDeclarations
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarDeclarationsAccess().getGroup()); }
(rule__VarDeclarations__Group__0)
{ after(grammarAccess.getVarDeclarationsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionBlockBody
entryRuleFunctionBlockBody 
:
{ before(grammarAccess.getFunctionBlockBodyRule()); }
	 ruleFunctionBlockBody
{ after(grammarAccess.getFunctionBlockBodyRule()); } 
	 EOF 
;

// Rule FunctionBlockBody
ruleFunctionBlockBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionBlockBodyAccess().getAlternatives()); }
(rule__FunctionBlockBody__Alternatives)
{ after(grammarAccess.getFunctionBlockBodyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProgramDeclaration
entryRuleProgramDeclaration 
:
{ before(grammarAccess.getProgramDeclarationRule()); }
	 ruleProgramDeclaration
{ after(grammarAccess.getProgramDeclarationRule()); } 
	 EOF 
;

// Rule ProgramDeclaration
ruleProgramDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramDeclarationAccess().getGroup()); }
(rule__ProgramDeclaration__Group__0)
{ after(grammarAccess.getProgramDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProgramVarDeclarations
entryRuleProgramVarDeclarations 
:
{ before(grammarAccess.getProgramVarDeclarationsRule()); }
	 ruleProgramVarDeclarations
{ after(grammarAccess.getProgramVarDeclarationsRule()); } 
	 EOF 
;

// Rule ProgramVarDeclarations
ruleProgramVarDeclarations
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramVarDeclarationsAccess().getAlternatives()); }
(rule__ProgramVarDeclarations__Alternatives)
{ after(grammarAccess.getProgramVarDeclarationsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocatedVarDeclarations
entryRuleLocatedVarDeclarations 
:
{ before(grammarAccess.getLocatedVarDeclarationsRule()); }
	 ruleLocatedVarDeclarations
{ after(grammarAccess.getLocatedVarDeclarationsRule()); } 
	 EOF 
;

// Rule LocatedVarDeclarations
ruleLocatedVarDeclarations
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocatedVarDeclarationsAccess().getGroup()); }
(rule__LocatedVarDeclarations__Group__0)
{ after(grammarAccess.getLocatedVarDeclarationsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocatedVarDeclaration
entryRuleLocatedVarDeclaration 
:
{ before(grammarAccess.getLocatedVarDeclarationRule()); }
	 ruleLocatedVarDeclaration
{ after(grammarAccess.getLocatedVarDeclarationRule()); } 
	 EOF 
;

// Rule LocatedVarDeclaration
ruleLocatedVarDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocatedVarDeclarationAccess().getGroup()); }
(rule__LocatedVarDeclaration__Group__0)
{ after(grammarAccess.getLocatedVarDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocation
entryRuleLocation 
:
{ before(grammarAccess.getLocationRule()); }
	 ruleLocation
{ after(grammarAccess.getLocationRule()); } 
	 EOF 
;

// Rule Location
ruleLocation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocationAccess().getGroup()); }
(rule__Location__Group__0)
{ after(grammarAccess.getLocationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProgramAccessDecls
entryRuleProgramAccessDecls 
:
{ before(grammarAccess.getProgramAccessDeclsRule()); }
	 ruleProgramAccessDecls
{ after(grammarAccess.getProgramAccessDeclsRule()); } 
	 EOF 
;

// Rule ProgramAccessDecls
ruleProgramAccessDecls
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramAccessDeclsAccess().getGroup()); }
(rule__ProgramAccessDecls__Group__0)
{ after(grammarAccess.getProgramAccessDeclsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProgramAccessDecl
entryRuleProgramAccessDecl 
:
{ before(grammarAccess.getProgramAccessDeclRule()); }
	 ruleProgramAccessDecl
{ after(grammarAccess.getProgramAccessDeclRule()); } 
	 EOF 
;

// Rule ProgramAccessDecl
ruleProgramAccessDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramAccessDeclAccess().getGroup()); }
(rule__ProgramAccessDecl__Group__0)
{ after(grammarAccess.getProgramAccessDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDirection
entryRuleDirection 
:
{ before(grammarAccess.getDirectionRule()); }
	 ruleDirection
{ after(grammarAccess.getDirectionRule()); } 
	 EOF 
;

// Rule Direction
ruleDirection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDirectionAccess().getAlternatives()); }
(rule__Direction__Alternatives)
{ after(grammarAccess.getDirectionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConfigurationDeclaration
entryRuleConfigurationDeclaration 
:
{ before(grammarAccess.getConfigurationDeclarationRule()); }
	 ruleConfigurationDeclaration
{ after(grammarAccess.getConfigurationDeclarationRule()); } 
	 EOF 
;

// Rule ConfigurationDeclaration
ruleConfigurationDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConfigurationDeclarationAccess().getGroup()); }
(rule__ConfigurationDeclaration__Group__0)
{ after(grammarAccess.getConfigurationDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResourceDeclaration
entryRuleResourceDeclaration 
:
{ before(grammarAccess.getResourceDeclarationRule()); }
	 ruleResourceDeclaration
{ after(grammarAccess.getResourceDeclarationRule()); } 
	 EOF 
;

// Rule ResourceDeclaration
ruleResourceDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResourceDeclarationAccess().getGroup()); }
(rule__ResourceDeclaration__Group__0)
{ after(grammarAccess.getResourceDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSingleResourceDeclaration
entryRuleSingleResourceDeclaration 
:
{ before(grammarAccess.getSingleResourceDeclarationRule()); }
	 ruleSingleResourceDeclaration
{ after(grammarAccess.getSingleResourceDeclarationRule()); } 
	 EOF 
;

// Rule SingleResourceDeclaration
ruleSingleResourceDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSingleResourceDeclarationAccess().getGroup()); }
(rule__SingleResourceDeclaration__Group__0)
{ after(grammarAccess.getSingleResourceDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProgramConfiguration
entryRuleProgramConfiguration 
:
{ before(grammarAccess.getProgramConfigurationRule()); }
	 ruleProgramConfiguration
{ after(grammarAccess.getProgramConfigurationRule()); } 
	 EOF 
;

// Rule ProgramConfiguration
ruleProgramConfiguration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramConfigurationAccess().getGroup()); }
(rule__ProgramConfiguration__Group__0)
{ after(grammarAccess.getProgramConfigurationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProgConfElements
entryRuleProgConfElements 
:
{ before(grammarAccess.getProgConfElementsRule()); }
	 ruleProgConfElements
{ after(grammarAccess.getProgConfElementsRule()); } 
	 EOF 
;

// Rule ProgConfElements
ruleProgConfElements
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgConfElementsAccess().getGroup()); }
(rule__ProgConfElements__Group__0)
{ after(grammarAccess.getProgConfElementsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProgConfElement
entryRuleProgConfElement 
:
{ before(grammarAccess.getProgConfElementRule()); }
	 ruleProgConfElement
{ after(grammarAccess.getProgConfElementRule()); } 
	 EOF 
;

// Rule ProgConfElement
ruleProgConfElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgConfElementAccess().getAlternatives()); }
(rule__ProgConfElement__Alternatives)
{ after(grammarAccess.getProgConfElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFBTask
entryRuleFBTask 
:
{ before(grammarAccess.getFBTaskRule()); }
	 ruleFBTask
{ after(grammarAccess.getFBTaskRule()); } 
	 EOF 
;

// Rule FBTask
ruleFBTask
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFBTaskAccess().getGroup()); }
(rule__FBTask__Group__0)
{ after(grammarAccess.getFBTaskAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProgCNXN
entryRuleProgCNXN 
:
{ before(grammarAccess.getProgCNXNRule()); }
	 ruleProgCNXN
{ after(grammarAccess.getProgCNXNRule()); } 
	 EOF 
;

// Rule ProgCNXN
ruleProgCNXN
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgCNXNAccess().getAlternatives()); }
(rule__ProgCNXN__Alternatives)
{ after(grammarAccess.getProgCNXNAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataSink
entryRuleDataSink 
:
{ before(grammarAccess.getDataSinkRule()); }
	 ruleDataSink
{ after(grammarAccess.getDataSinkRule()); } 
	 EOF 
;

// Rule DataSink
ruleDataSink
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataSinkAccess().getAlternatives()); }
(rule__DataSink__Alternatives)
{ after(grammarAccess.getDataSinkAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProgDataSource
entryRuleProgDataSource 
:
{ before(grammarAccess.getProgDataSourceRule()); }
	 ruleProgDataSource
{ after(grammarAccess.getProgDataSourceRule()); } 
	 EOF 
;

// Rule ProgDataSource
ruleProgDataSource
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgDataSourceAccess().getAlternatives()); }
(rule__ProgDataSource__Alternatives)
{ after(grammarAccess.getProgDataSourceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGlobalVarDeclarations
entryRuleGlobalVarDeclarations 
:
{ before(grammarAccess.getGlobalVarDeclarationsRule()); }
	 ruleGlobalVarDeclarations
{ after(grammarAccess.getGlobalVarDeclarationsRule()); } 
	 EOF 
;

// Rule GlobalVarDeclarations
ruleGlobalVarDeclarations
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGlobalVarDeclarationsAccess().getGroup()); }
(rule__GlobalVarDeclarations__Group__0)
{ after(grammarAccess.getGlobalVarDeclarationsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGlobalVarDecl
entryRuleGlobalVarDecl 
:
{ before(grammarAccess.getGlobalVarDeclRule()); }
	 ruleGlobalVarDecl
{ after(grammarAccess.getGlobalVarDeclRule()); } 
	 EOF 
;

// Rule GlobalVarDecl
ruleGlobalVarDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGlobalVarDeclAccess().getGroup()); }
(rule__GlobalVarDecl__Group__0)
{ after(grammarAccess.getGlobalVarDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGlobalVarSpec
entryRuleGlobalVarSpec 
:
{ before(grammarAccess.getGlobalVarSpecRule()); }
	 ruleGlobalVarSpec
{ after(grammarAccess.getGlobalVarSpecRule()); } 
	 EOF 
;

// Rule GlobalVarSpec
ruleGlobalVarSpec
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGlobalVarSpecAccess().getAlternatives()); }
(rule__GlobalVarSpec__Alternatives)
{ after(grammarAccess.getGlobalVarSpecAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGlobalVarList
entryRuleGlobalVarList 
:
{ before(grammarAccess.getGlobalVarListRule()); }
	 ruleGlobalVarList
{ after(grammarAccess.getGlobalVarListRule()); } 
	 EOF 
;

// Rule GlobalVarList
ruleGlobalVarList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGlobalVarListAccess().getGroup()); }
(rule__GlobalVarList__Group__0)
{ after(grammarAccess.getGlobalVarListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGlobalVar
entryRuleGlobalVar 
:
{ before(grammarAccess.getGlobalVarRule()); }
	 ruleGlobalVar
{ after(grammarAccess.getGlobalVarRule()); } 
	 EOF 
;

// Rule GlobalVar
ruleGlobalVar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGlobalVarAccess().getNameAssignment()); }
(rule__GlobalVar__NameAssignment)
{ after(grammarAccess.getGlobalVarAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTaskConfiguration
entryRuleTaskConfiguration 
:
{ before(grammarAccess.getTaskConfigurationRule()); }
	 ruleTaskConfiguration
{ after(grammarAccess.getTaskConfigurationRule()); } 
	 EOF 
;

// Rule TaskConfiguration
ruleTaskConfiguration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTaskConfigurationAccess().getGroup()); }
(rule__TaskConfiguration__Group__0)
{ after(grammarAccess.getTaskConfigurationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTaskInitialization
entryRuleTaskInitialization 
:
{ before(grammarAccess.getTaskInitializationRule()); }
	 ruleTaskInitialization
{ after(grammarAccess.getTaskInitializationRule()); } 
	 EOF 
;

// Rule TaskInitialization
ruleTaskInitialization
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTaskInitializationAccess().getGroup()); }
(rule__TaskInitialization__Group__0)
{ after(grammarAccess.getTaskInitializationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataSource
entryRuleDataSource 
:
{ before(grammarAccess.getDataSourceRule()); }
	 ruleDataSource
{ after(grammarAccess.getDataSourceRule()); } 
	 EOF 
;

// Rule DataSource
ruleDataSource
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataSourceAccess().getAlternatives()); }
(rule__DataSource__Alternatives)
{ after(grammarAccess.getDataSourceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstant
entryRuleConstant 
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantAccess().getAlternatives()); }
(rule__Constant__Alternatives)
{ after(grammarAccess.getConstantAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumericLiteral
entryRuleNumericLiteral 
:
{ before(grammarAccess.getNumericLiteralRule()); }
	 ruleNumericLiteral
{ after(grammarAccess.getNumericLiteralRule()); } 
	 EOF 
;

// Rule NumericLiteral
ruleNumericLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumericLiteralAccess().getAlternatives()); }
(rule__NumericLiteral__Alternatives)
{ after(grammarAccess.getNumericLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerLiteral
entryRuleIntegerLiteral 
:
{ before(grammarAccess.getIntegerLiteralRule()); }
	 ruleIntegerLiteral
{ after(grammarAccess.getIntegerLiteralRule()); } 
	 EOF 
;

// Rule IntegerLiteral
ruleIntegerLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerLiteralAccess().getGroup()); }
(rule__IntegerLiteral__Group__0)
{ after(grammarAccess.getIntegerLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRealLiteral
entryRuleRealLiteral 
:
{ before(grammarAccess.getRealLiteralRule()); }
	 ruleRealLiteral
{ after(grammarAccess.getRealLiteralRule()); } 
	 EOF 
;

// Rule RealLiteral
ruleRealLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRealLiteralAccess().getGroup()); }
(rule__RealLiteral__Group__0)
{ after(grammarAccess.getRealLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerValue
entryRuleIntegerValue 
:
{ before(grammarAccess.getIntegerValueRule()); }
	 ruleIntegerValue
{ after(grammarAccess.getIntegerValueRule()); } 
	 EOF 
;

// Rule IntegerValue
ruleIntegerValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerValueAccess().getAlternatives()); }
(rule__IntegerValue__Alternatives)
{ after(grammarAccess.getIntegerValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignedInteger
entryRuleSignedInteger 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getSignedIntegerRule()); }
	 ruleSignedInteger
{ after(grammarAccess.getSignedIntegerRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule SignedInteger
ruleSignedInteger
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignedIntegerAccess().getGroup()); }
(rule__SignedInteger__Group__0)
{ after(grammarAccess.getSignedIntegerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleBinaryInteger
entryRuleBinaryInteger 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getBinaryIntegerRule()); }
	 ruleBinaryInteger
{ after(grammarAccess.getBinaryIntegerRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule BinaryInteger
ruleBinaryInteger
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinaryIntegerAccess().getBINTTerminalRuleCall()); }
	RULE_BINT
{ after(grammarAccess.getBinaryIntegerAccess().getBINTTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleOctalInteger
entryRuleOctalInteger 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getOctalIntegerRule()); }
	 ruleOctalInteger
{ after(grammarAccess.getOctalIntegerRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule OctalInteger
ruleOctalInteger
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOctalIntegerAccess().getOINTTerminalRuleCall()); }
	RULE_OINT
{ after(grammarAccess.getOctalIntegerAccess().getOINTTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleHexInteger
entryRuleHexInteger 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getHexIntegerRule()); }
	 ruleHexInteger
{ after(grammarAccess.getHexIntegerRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule HexInteger
ruleHexInteger
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHexIntegerAccess().getHINTTerminalRuleCall()); }
	RULE_HINT
{ after(grammarAccess.getHexIntegerAccess().getHINTTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleRealValue
entryRuleRealValue 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getRealValueRule()); }
	 ruleRealValue
{ after(grammarAccess.getRealValueRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule RealValue
ruleRealValue
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRealValueAccess().getGroup()); }
(rule__RealValue__Group__0)
{ after(grammarAccess.getRealValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleCharacterString
entryRuleCharacterString 
:
{ before(grammarAccess.getCharacterStringRule()); }
	 ruleCharacterString
{ after(grammarAccess.getCharacterStringRule()); } 
	 EOF 
;

// Rule CharacterString
ruleCharacterString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCharacterStringAccess().getAlternatives()); }
(rule__CharacterString__Alternatives)
{ after(grammarAccess.getCharacterStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitString
entryRuleBitString 
:
{ before(grammarAccess.getBitStringRule()); }
	 ruleBitString
{ after(grammarAccess.getBitStringRule()); } 
	 EOF 
;

// Rule BitString
ruleBitString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitStringAccess().getGroup()); }
(rule__BitString__Group__0)
{ after(grammarAccess.getBitStringAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitStringValue
entryRuleBitStringValue 
:
{ before(grammarAccess.getBitStringValueRule()); }
	 ruleBitStringValue
{ after(grammarAccess.getBitStringValueRule()); } 
	 EOF 
;

// Rule BitStringValue
ruleBitStringValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitStringValueAccess().getAlternatives()); }
(rule__BitStringValue__Alternatives)
{ after(grammarAccess.getBitStringValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoolean
entryRuleBoolean 
:
{ before(grammarAccess.getBooleanRule()); }
	 ruleBoolean
{ after(grammarAccess.getBooleanRule()); } 
	 EOF 
;

// Rule Boolean
ruleBoolean
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanAccess().getGroup()); }
(rule__Boolean__Group__0)
{ after(grammarAccess.getBooleanAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTimeLiteral
entryRuleTimeLiteral 
:
{ before(grammarAccess.getTimeLiteralRule()); }
	 ruleTimeLiteral
{ after(grammarAccess.getTimeLiteralRule()); } 
	 EOF 
;

// Rule TimeLiteral
ruleTimeLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimeLiteralAccess().getAlternatives()); }
(rule__TimeLiteral__Alternatives)
{ after(grammarAccess.getTimeLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDurationLiteral
entryRuleDurationLiteral 
:
{ before(grammarAccess.getDurationLiteralRule()); }
	 ruleDurationLiteral
{ after(grammarAccess.getDurationLiteralRule()); } 
	 EOF 
;

// Rule DurationLiteral
ruleDurationLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDurationLiteralAccess().getGroup()); }
(rule__DurationLiteral__Group__0)
{ after(grammarAccess.getDurationLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTimeOfDayLiteral
entryRuleTimeOfDayLiteral 
:
{ before(grammarAccess.getTimeOfDayLiteralRule()); }
	 ruleTimeOfDayLiteral
{ after(grammarAccess.getTimeOfDayLiteralRule()); } 
	 EOF 
;

// Rule TimeOfDayLiteral
ruleTimeOfDayLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimeOfDayLiteralAccess().getGroup()); }
(rule__TimeOfDayLiteral__Group__0)
{ after(grammarAccess.getTimeOfDayLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDateLiteral
entryRuleDateLiteral 
:
{ before(grammarAccess.getDateLiteralRule()); }
	 ruleDateLiteral
{ after(grammarAccess.getDateLiteralRule()); } 
	 EOF 
;

// Rule DateLiteral
ruleDateLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDateLiteralAccess().getGroup()); }
(rule__DateLiteral__Group__0)
{ after(grammarAccess.getDateLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDateAndTimeLiteral
entryRuleDateAndTimeLiteral 
:
{ before(grammarAccess.getDateAndTimeLiteralRule()); }
	 ruleDateAndTimeLiteral
{ after(grammarAccess.getDateAndTimeLiteralRule()); } 
	 EOF 
;

// Rule DateAndTimeLiteral
ruleDateAndTimeLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDateAndTimeLiteralAccess().getGroup()); }
(rule__DateAndTimeLiteral__Group__0)
{ after(grammarAccess.getDateAndTimeLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdentifier
entryRuleIdentifier 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getIdentifierRule()); }
	 ruleIdentifier
{ after(grammarAccess.getIdentifierRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Identifier
ruleIdentifier
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdentifierAccess().getAlternatives()); }
(rule__Identifier__Alternatives)
{ after(grammarAccess.getIdentifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleInteger
entryRuleInteger 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getIntegerRule()); }
	 ruleInteger
{ after(grammarAccess.getIntegerRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Integer
ruleInteger
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerAccess().getAlternatives()); }
(rule__Integer__Alternatives)
{ after(grammarAccess.getIntegerAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}




rule__ModelElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelElementAccess().getLibraryElementParserRuleCall_0()); }
	ruleLibraryElement
{ after(grammarAccess.getModelElementAccess().getLibraryElementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getModelElementAccess().getLibraryElementDeclarationParserRuleCall_1()); }
	ruleLibraryElementDeclaration
{ after(grammarAccess.getModelElementAccess().getLibraryElementDeclarationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryElementAccess().getDataTypeParserRuleCall_0()); }
	ruleDataType
{ after(grammarAccess.getLibraryElementAccess().getDataTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLibraryElementAccess().getFunctionDeclarationParserRuleCall_1()); }
	ruleFunctionDeclaration
{ after(grammarAccess.getLibraryElementAccess().getFunctionDeclarationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryElementDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryElementDeclarationAccess().getDataTypeDeclarationParserRuleCall_0()); }
	ruleDataTypeDeclaration
{ after(grammarAccess.getLibraryElementDeclarationAccess().getDataTypeDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLibraryElementDeclarationAccess().getFunctionBlockDeclarationParserRuleCall_1()); }
	ruleFunctionBlockDeclaration
{ after(grammarAccess.getLibraryElementDeclarationAccess().getFunctionBlockDeclarationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLibraryElementDeclarationAccess().getProgramDeclarationParserRuleCall_2()); }
	ruleProgramDeclaration
{ after(grammarAccess.getLibraryElementDeclarationAccess().getProgramDeclarationParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLibraryElementDeclarationAccess().getConfigurationDeclarationParserRuleCall_3()); }
	ruleConfigurationDeclaration
{ after(grammarAccess.getLibraryElementDeclarationAccess().getConfigurationDeclarationParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLibraryElementDeclarationAccess().getResourceDeclarationParserRuleCall_4()); }
	ruleResourceDeclaration
{ after(grammarAccess.getLibraryElementDeclarationAccess().getResourceDeclarationParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getNonGenericTypeParserRuleCall_0()); }
	ruleNonGenericType
{ after(grammarAccess.getDataTypeAccess().getNonGenericTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getGenericTypeParserRuleCall_1()); }
	ruleGenericType
{ after(grammarAccess.getDataTypeAccess().getGenericTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonGenericType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonGenericTypeAccess().getElementaryTypeParserRuleCall_0()); }
	ruleElementaryType
{ after(grammarAccess.getNonGenericTypeAccess().getElementaryTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNonGenericTypeAccess().getDerivedTypeParserRuleCall_1()); }
	ruleDerivedType
{ after(grammarAccess.getNonGenericTypeAccess().getDerivedTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementaryType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementaryTypeAccess().getNumericTypeParserRuleCall_0()); }
	ruleNumericType
{ after(grammarAccess.getElementaryTypeAccess().getNumericTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getElementaryTypeAccess().getDateTypeParserRuleCall_1()); }
	ruleDateType
{ after(grammarAccess.getElementaryTypeAccess().getDateTypeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getElementaryTypeAccess().getBitStringTypeParserRuleCall_2()); }
	ruleBitStringType
{ after(grammarAccess.getElementaryTypeAccess().getBitStringTypeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getElementaryTypeAccess().getStringTypeParserRuleCall_3()); }
	ruleStringType
{ after(grammarAccess.getElementaryTypeAccess().getStringTypeParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getElementaryTypeAccess().getTypeNameAssignment_4()); }
(rule__ElementaryType__TypeNameAssignment_4)
{ after(grammarAccess.getElementaryTypeAccess().getTypeNameAssignment_4()); }
)

    |(
{ before(grammarAccess.getElementaryTypeAccess().getTypeNameAssignment_5()); }
(rule__ElementaryType__TypeNameAssignment_5)
{ after(grammarAccess.getElementaryTypeAccess().getTypeNameAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericTypeAccess().getIntegerTypeParserRuleCall_0()); }
	ruleIntegerType
{ after(grammarAccess.getNumericTypeAccess().getIntegerTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumericTypeAccess().getRealTypeParserRuleCall_1()); }
	ruleRealType
{ after(grammarAccess.getNumericTypeAccess().getRealTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTypeAccess().getSignedIntegerTypeParserRuleCall_0()); }
	ruleSignedIntegerType
{ after(grammarAccess.getIntegerTypeAccess().getSignedIntegerTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIntegerTypeAccess().getPlainIntegerTypeParserRuleCall_1()); }
	rulePlainIntegerType
{ after(grammarAccess.getIntegerTypeAccess().getPlainIntegerTypeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getIntegerTypeAccess().getUnsignedIntegerTypeParserRuleCall_2()); }
	ruleUnsignedIntegerType
{ after(grammarAccess.getIntegerTypeAccess().getUnsignedIntegerTypeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignedIntegerType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedIntegerTypeAccess().getTypeNameAssignment_0()); }
(rule__SignedIntegerType__TypeNameAssignment_0)
{ after(grammarAccess.getSignedIntegerTypeAccess().getTypeNameAssignment_0()); }
)

    |(
{ before(grammarAccess.getSignedIntegerTypeAccess().getTypeNameAssignment_1()); }
(rule__SignedIntegerType__TypeNameAssignment_1)
{ after(grammarAccess.getSignedIntegerTypeAccess().getTypeNameAssignment_1()); }
)

    |(
{ before(grammarAccess.getSignedIntegerTypeAccess().getTypeNameAssignment_2()); }
(rule__SignedIntegerType__TypeNameAssignment_2)
{ after(grammarAccess.getSignedIntegerTypeAccess().getTypeNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnsignedIntegerType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameAssignment_0()); }
(rule__UnsignedIntegerType__TypeNameAssignment_0)
{ after(grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameAssignment_0()); }
)

    |(
{ before(grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameAssignment_1()); }
(rule__UnsignedIntegerType__TypeNameAssignment_1)
{ after(grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameAssignment_1()); }
)

    |(
{ before(grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameAssignment_2()); }
(rule__UnsignedIntegerType__TypeNameAssignment_2)
{ after(grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameAssignment_2()); }
)

    |(
{ before(grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameAssignment_3()); }
(rule__UnsignedIntegerType__TypeNameAssignment_3)
{ after(grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTypeAccess().getTypeNameAssignment_0()); }
(rule__RealType__TypeNameAssignment_0)
{ after(grammarAccess.getRealTypeAccess().getTypeNameAssignment_0()); }
)

    |(
{ before(grammarAccess.getRealTypeAccess().getTypeNameAssignment_1()); }
(rule__RealType__TypeNameAssignment_1)
{ after(grammarAccess.getRealTypeAccess().getTypeNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateTypeAccess().getTypeNameAssignment_0()); }
(rule__DateType__TypeNameAssignment_0)
{ after(grammarAccess.getDateTypeAccess().getTypeNameAssignment_0()); }
)

    |(
{ before(grammarAccess.getDateTypeAccess().getTypeNameAssignment_1()); }
(rule__DateType__TypeNameAssignment_1)
{ after(grammarAccess.getDateTypeAccess().getTypeNameAssignment_1()); }
)

    |(
{ before(grammarAccess.getDateTypeAccess().getTypeNameAssignment_2()); }
(rule__DateType__TypeNameAssignment_2)
{ after(grammarAccess.getDateTypeAccess().getTypeNameAssignment_2()); }
)

    |(
{ before(grammarAccess.getDateTypeAccess().getTypeNameAssignment_3()); }
(rule__DateType__TypeNameAssignment_3)
{ after(grammarAccess.getDateTypeAccess().getTypeNameAssignment_3()); }
)

    |(
{ before(grammarAccess.getDateTypeAccess().getTypeNameAssignment_4()); }
(rule__DateType__TypeNameAssignment_4)
{ after(grammarAccess.getDateTypeAccess().getTypeNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitStringType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStringTypeAccess().getTypeNameAssignment_0()); }
(rule__BitStringType__TypeNameAssignment_0)
{ after(grammarAccess.getBitStringTypeAccess().getTypeNameAssignment_0()); }
)

    |(
{ before(grammarAccess.getBitStringTypeAccess().getTypeNameAssignment_1()); }
(rule__BitStringType__TypeNameAssignment_1)
{ after(grammarAccess.getBitStringTypeAccess().getTypeNameAssignment_1()); }
)

    |(
{ before(grammarAccess.getBitStringTypeAccess().getTypeNameAssignment_2()); }
(rule__BitStringType__TypeNameAssignment_2)
{ after(grammarAccess.getBitStringTypeAccess().getTypeNameAssignment_2()); }
)

    |(
{ before(grammarAccess.getBitStringTypeAccess().getTypeNameAssignment_3()); }
(rule__BitStringType__TypeNameAssignment_3)
{ after(grammarAccess.getBitStringTypeAccess().getTypeNameAssignment_3()); }
)

    |(
{ before(grammarAccess.getBitStringTypeAccess().getTypeNameAssignment_4()); }
(rule__BitStringType__TypeNameAssignment_4)
{ after(grammarAccess.getBitStringTypeAccess().getTypeNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameAssignment_0()); }
(rule__GenericType__TypeNameAssignment_0)
{ after(grammarAccess.getGenericTypeAccess().getTypeNameAssignment_0()); }
)

    |(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameAssignment_1()); }
(rule__GenericType__TypeNameAssignment_1)
{ after(grammarAccess.getGenericTypeAccess().getTypeNameAssignment_1()); }
)

    |(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameAssignment_2()); }
(rule__GenericType__TypeNameAssignment_2)
{ after(grammarAccess.getGenericTypeAccess().getTypeNameAssignment_2()); }
)

    |(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameAssignment_3()); }
(rule__GenericType__TypeNameAssignment_3)
{ after(grammarAccess.getGenericTypeAccess().getTypeNameAssignment_3()); }
)

    |(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameAssignment_4()); }
(rule__GenericType__TypeNameAssignment_4)
{ after(grammarAccess.getGenericTypeAccess().getTypeNameAssignment_4()); }
)

    |(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameAssignment_5()); }
(rule__GenericType__TypeNameAssignment_5)
{ after(grammarAccess.getGenericTypeAccess().getTypeNameAssignment_5()); }
)

    |(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameAssignment_6()); }
(rule__GenericType__TypeNameAssignment_6)
{ after(grammarAccess.getGenericTypeAccess().getTypeNameAssignment_6()); }
)

    |(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameAssignment_7()); }
(rule__GenericType__TypeNameAssignment_7)
{ after(grammarAccess.getGenericTypeAccess().getTypeNameAssignment_7()); }
)

    |(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameAssignment_8()); }
(rule__GenericType__TypeNameAssignment_8)
{ after(grammarAccess.getGenericTypeAccess().getTypeNameAssignment_8()); }
)

    |(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameAssignment_9()); }
(rule__GenericType__TypeNameAssignment_9)
{ after(grammarAccess.getGenericTypeAccess().getTypeNameAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getSimpleTypeDeclarationParserRuleCall_0()); }
	ruleSimpleTypeDeclaration
{ after(grammarAccess.getTypeDeclarationAccess().getSimpleTypeDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeDeclarationAccess().getRangeDeclarationParserRuleCall_1()); }
	ruleRangeDeclaration
{ after(grammarAccess.getTypeDeclarationAccess().getRangeDeclarationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeDeclarationAccess().getEnumDeclarationParserRuleCall_2()); }
	ruleEnumDeclaration
{ after(grammarAccess.getTypeDeclarationAccess().getEnumDeclarationParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTypeDeclarationAccess().getArrayDeclarationParserRuleCall_3()); }
	ruleArrayDeclaration
{ after(grammarAccess.getTypeDeclarationAccess().getArrayDeclarationParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTypeDeclarationAccess().getStructureTypeDeclarationParserRuleCall_4()); }
	ruleStructureTypeDeclaration
{ after(grammarAccess.getTypeDeclarationAccess().getStructureTypeDeclarationParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getTypeDeclarationAccess().getStringDeclarationParserRuleCall_5()); }
	ruleStringDeclaration
{ after(grammarAccess.getTypeDeclarationAccess().getStringDeclarationParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecInit__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecInitAccess().getBaseTypeAssignment_0_0()); }
(rule__SpecInit__BaseTypeAssignment_0_0)
{ after(grammarAccess.getSpecInitAccess().getBaseTypeAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getSpecInitAccess().getBaseTypeAssignment_0_1()); }
(rule__SpecInit__BaseTypeAssignment_0_1)
{ after(grammarAccess.getSpecInitAccess().getBaseTypeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecInit__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecInitAccess().getConstantAssignment_1_1_0()); }
(rule__SpecInit__ConstantAssignment_1_1_0)
{ after(grammarAccess.getSpecInitAccess().getConstantAssignment_1_1_0()); }
)

    |(
{ before(grammarAccess.getSpecInitAccess().getConstantAssignment_1_1_1()); }
(rule__SpecInit__ConstantAssignment_1_1_1)
{ after(grammarAccess.getSpecInitAccess().getConstantAssignment_1_1_1()); }
)

    |(
{ before(grammarAccess.getSpecInitAccess().getConstantAssignment_1_1_2()); }
(rule__SpecInit__ConstantAssignment_1_1_2)
{ after(grammarAccess.getSpecInitAccess().getConstantAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubRangeWithSign__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubRangeWithSignAccess().getPlusSignKeyword_0_0()); }

	'+' 

{ after(grammarAccess.getSubRangeWithSignAccess().getPlusSignKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getSubRangeWithSignAccess().getHyphenMinusKeyword_0_1()); }

	'-' 

{ after(grammarAccess.getSubRangeWithSignAccess().getHyphenMinusKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialElements__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitialElementsAccess().getInitialElementAssignment_0()); }
(rule__ArrayInitialElements__InitialElementAssignment_0)
{ after(grammarAccess.getArrayInitialElementsAccess().getInitialElementAssignment_0()); }
)

    |(
{ before(grammarAccess.getArrayInitialElementsAccess().getGroup_1()); }
(rule__ArrayInitialElements__Group_1__0)
{ after(grammarAccess.getArrayInitialElementsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitialElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialElementAccess().getConstantParserRuleCall_0()); }
	ruleConstant
{ after(grammarAccess.getInitialElementAccess().getConstantParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInitialElementAccess().getEnumeratedValueParserRuleCall_1()); }
	ruleEnumeratedValue
{ after(grammarAccess.getInitialElementAccess().getEnumeratedValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getInitialElementAccess().getArrayInitializationParserRuleCall_2()); }
	ruleArrayInitialization
{ after(grammarAccess.getInitialElementAccess().getArrayInitializationParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getInitialElementAccess().getStructureInitializationParserRuleCall_3()); }
	ruleStructureInitialization
{ after(grammarAccess.getInitialElementAccess().getStructureInitializationParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructureTypeDeclaration__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureTypeDeclarationAccess().getDeclarationAssignment_2_0()); }
(rule__StructureTypeDeclaration__DeclarationAssignment_2_0)
{ after(grammarAccess.getStructureTypeDeclarationAccess().getDeclarationAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getStructureTypeDeclarationAccess().getInitializationAssignment_2_1()); }
(rule__StructureTypeDeclaration__InitializationAssignment_2_1)
{ after(grammarAccess.getStructureTypeDeclarationAccess().getInitializationAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringDeclaration__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDeclarationAccess().getStringAssignment_2_0()); }
(rule__StringDeclaration__StringAssignment_2_0)
{ after(grammarAccess.getStringDeclarationAccess().getStringAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getStringDeclarationAccess().getWSTRINGKeyword_2_1()); }

	'WSTRING' 

{ after(grammarAccess.getStringDeclarationAccess().getWSTRINGKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAccess__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccessAccess().getDirectVariableParserRuleCall_0()); }
	ruleDirectVariable
{ after(grammarAccess.getVariableAccessAccess().getDirectVariableParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVariableAccessAccess().getSymbolicVariableAccessParserRuleCall_1()); }
	ruleSymbolicVariableAccess
{ after(grammarAccess.getVariableAccessAccess().getSymbolicVariableAccessParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolicVariableAccess__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolicVariableAccessAccess().getNamedVariableAccessParserRuleCall_0()); }
	ruleNamedVariableAccess
{ after(grammarAccess.getSymbolicVariableAccessAccess().getNamedVariableAccessParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSymbolicVariableAccessAccess().getMultiElementVariableParserRuleCall_1()); }
	ruleMultiElementVariable
{ after(grammarAccess.getSymbolicVariableAccessAccess().getMultiElementVariableParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiElementVariable__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiElementVariableAccess().getArrayVariableParserRuleCall_0()); }
	ruleArrayVariable
{ after(grammarAccess.getMultiElementVariableAccess().getArrayVariableParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMultiElementVariableAccess().getStructuredVariableParserRuleCall_1()); }
	ruleStructuredVariable
{ after(grammarAccess.getMultiElementVariableAccess().getStructuredVariableParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OperatorAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOperatorAmpersandKeyword_1_1_0_0()); }

	'&' 

{ after(grammarAccess.getAndExpressionAccess().getOperatorAmpersandKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getAndExpressionAccess().getOperatorANDKeyword_1_1_0_1()); }

	'AND' 

{ after(grammarAccess.getAndExpressionAccess().getOperatorANDKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OperatorAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getOperatorEqualsSignKeyword_1_1_0_0()); }

	'=' 

{ after(grammarAccess.getComparisonAccess().getOperatorEqualsSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getOperatorLessThanSignGreaterThanSignKeyword_1_1_0_1()); }

	'<>' 

{ after(grammarAccess.getComparisonAccess().getOperatorLessThanSignGreaterThanSignKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getOperatorLessThanSignKeyword_1_1_0_2()); }

	'<' 

{ after(grammarAccess.getComparisonAccess().getOperatorLessThanSignKeyword_1_1_0_2()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignKeyword_1_1_0_3()); }

	'>' 

{ after(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignKeyword_1_1_0_3()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_0_4()); }

	'<=' 

{ after(grammarAccess.getComparisonAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_0_4()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_0_5()); }

	'>=' 

{ after(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__OperatorAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getOperatorHyphenMinusKeyword_1_1_0_0()); }

	'-' 

{ after(grammarAccess.getAddExpressionAccess().getOperatorHyphenMinusKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getAddExpressionAccess().getOperatorPlusSignKeyword_1_1_0_1()); }

	'+' 

{ after(grammarAccess.getAddExpressionAccess().getOperatorPlusSignKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__OperatorAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getOperatorAsteriskKeyword_1_1_0_0()); }

	'*' 

{ after(grammarAccess.getTermAccess().getOperatorAsteriskKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getTermAccess().getOperatorSolidusKeyword_1_1_0_1()); }

	'/' 

{ after(grammarAccess.getTermAccess().getOperatorSolidusKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getTermAccess().getOperatorMODKeyword_1_1_0_2()); }

	'MOD' 

{ after(grammarAccess.getTermAccess().getOperatorMODKeyword_1_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_0()); }
(rule__UnaryExpression__Group_0__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_1()); }
(	rulePrimaryExpression)
{ after(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OperatorAlternatives_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getOperatorNOTKeyword_0_1_0_0()); }

	'NOT' 

{ after(grammarAccess.getUnaryExpressionAccess().getOperatorNOTKeyword_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getOperatorHyphenMinusKeyword_0_1_0_1()); }

	'-' 

{ after(grammarAccess.getUnaryExpressionAccess().getOperatorHyphenMinusKeyword_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getConstantParserRuleCall_0()); }
	ruleConstant
{ after(grammarAccess.getPrimaryExpressionAccess().getConstantParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getVariableAssignment_1()); }
(rule__PrimaryExpression__VariableAssignment_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getVariableAssignment_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getParenthesesExpressionParserRuleCall_2()); }
	ruleParenthesesExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getParenthesesExpressionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); }
(rule__PrimaryExpression__Group_3__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAssignmentAccess().getGroup_0()); }
(rule__ParamAssignment__Group_0__0)
{ after(grammarAccess.getParamAssignmentAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getParamAssignmentAccess().getGroup_1()); }
(rule__ParamAssignment__Group_1__0)
{ after(grammarAccess.getParamAssignmentAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IoVarDeclarations__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIoVarDeclarationsAccess().getInputDeclarationsParserRuleCall_0()); }
	ruleInputDeclarations
{ after(grammarAccess.getIoVarDeclarationsAccess().getInputDeclarationsParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIoVarDeclarationsAccess().getOutputDeclarationsParserRuleCall_1()); }
	ruleOutputDeclarations
{ after(grammarAccess.getIoVarDeclarationsAccess().getOutputDeclarationsParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getIoVarDeclarationsAccess().getInputOutputDeclarationsParserRuleCall_2()); }
	ruleInputOutputDeclarations
{ after(grammarAccess.getIoVarDeclarationsAccess().getInputOutputDeclarationsParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputDeclarations__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputDeclarationsAccess().getRETAINKeyword_1_0()); }

	'RETAIN' 

{ after(grammarAccess.getInputDeclarationsAccess().getRETAINKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getInputDeclarationsAccess().getNON_RETAINKeyword_1_1()); }

	'NON_RETAIN' 

{ after(grammarAccess.getInputDeclarationsAccess().getNON_RETAINKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclSpecification__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclSpecificationAccess().getVarDeclSpecificationParserRuleCall_0()); }
	ruleVarDeclSpecification
{ after(grammarAccess.getDeclSpecificationAccess().getVarDeclSpecificationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDeclSpecificationAccess().getEdgeDeclSpecificationParserRuleCall_1()); }
	ruleEdgeDeclSpecification
{ after(grammarAccess.getDeclSpecificationAccess().getEdgeDeclSpecificationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeDeclSpecification__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeDeclSpecificationAccess().getREdgeAssignment_1_0()); }
(rule__EdgeDeclSpecification__REdgeAssignment_1_0)
{ after(grammarAccess.getEdgeDeclSpecificationAccess().getREdgeAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getEdgeDeclSpecificationAccess().getFEdgeAssignment_1_1()); }
(rule__EdgeDeclSpecification__FEdgeAssignment_1_1)
{ after(grammarAccess.getEdgeDeclSpecificationAccess().getFEdgeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputDeclarations__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputDeclarationsAccess().getRETAINKeyword_1_0()); }

	'RETAIN' 

{ after(grammarAccess.getOutputDeclarationsAccess().getRETAINKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getOutputDeclarationsAccess().getNON_RETAINKeyword_1_1()); }

	'NON_RETAIN' 

{ after(grammarAccess.getOutputDeclarationsAccess().getNON_RETAINKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBodyAccess().getInstructionListParserRuleCall_0()); }
	ruleInstructionList
{ after(grammarAccess.getFunctionBodyAccess().getInstructionListParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFunctionBodyAccess().getStatementListParserRuleCall_1()); }
	ruleStatementList
{ after(grammarAccess.getFunctionBodyAccess().getStatementListParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getSimpleOperationParserRuleCall_0()); }
	ruleSimpleOperation
{ after(grammarAccess.getOperationAccess().getSimpleOperationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOperationAccess().getExpressionOperationParserRuleCall_1()); }
	ruleExpressionOperation
{ after(grammarAccess.getOperationAccess().getExpressionOperationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getOperationAccess().getJmpOperationParserRuleCall_2()); }
	ruleJmpOperation
{ after(grammarAccess.getOperationAccess().getJmpOperationParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleOperatorAccess().getLDKeyword_0()); }

	'LD' 

{ after(grammarAccess.getSimpleOperatorAccess().getLDKeyword_0()); }
)

    |(
{ before(grammarAccess.getSimpleOperatorAccess().getLDNKeyword_1()); }

	'LDN' 

{ after(grammarAccess.getSimpleOperatorAccess().getLDNKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOperatorAccess().getANDKeyword_0()); }

	'AND' 

{ after(grammarAccess.getExpressionOperatorAccess().getANDKeyword_0()); }
)

    |(
{ before(grammarAccess.getExpressionOperatorAccess().getAmpersandKeyword_1()); }

	'&' 

{ after(grammarAccess.getExpressionOperatorAccess().getAmpersandKeyword_1()); }
)

    |(
{ before(grammarAccess.getExpressionOperatorAccess().getADDKeyword_2()); }

	'ADD' 

{ after(grammarAccess.getExpressionOperatorAccess().getADDKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JmpOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJmpOperatorAccess().getJMPKeyword_0()); }

	'JMP' 

{ after(grammarAccess.getJmpOperatorAccess().getJMPKeyword_0()); }
)

    |(
{ before(grammarAccess.getJmpOperatorAccess().getJMPCKeyword_1()); }

	'JMPC' 

{ after(grammarAccess.getJmpOperatorAccess().getJMPCKeyword_1()); }
)

    |(
{ before(grammarAccess.getJmpOperatorAccess().getJMPCNKeyword_2()); }

	'JMPCN' 

{ after(grammarAccess.getJmpOperatorAccess().getJMPCNKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperandAccess().getConstantAssignment_0()); }
(rule__Operand__ConstantAssignment_0)
{ after(grammarAccess.getOperandAccess().getConstantAssignment_0()); }
)

    |(
{ before(grammarAccess.getOperandAccess().getReferenceAssignment_1()); }
(rule__Operand__ReferenceAssignment_1)
{ after(grammarAccess.getOperandAccess().getReferenceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencedOperand__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencedOperandAccess().getVariableAccessParserRuleCall_0()); }
	ruleVariableAccess
{ after(grammarAccess.getReferencedOperandAccess().getVariableAccessParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getReferencedOperandAccess().getEnumeratedValueParserRuleCall_1()); }
	ruleEnumeratedValue
{ after(grammarAccess.getReferencedOperandAccess().getEnumeratedValueParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleInstruction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleInstructionAccess().getSimpleOperationParserRuleCall_0()); }
	ruleSimpleOperation
{ after(grammarAccess.getSimpleInstructionAccess().getSimpleOperationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSimpleInstructionAccess().getExpressionOperationParserRuleCall_1()); }
	ruleExpressionOperation
{ after(grammarAccess.getSimpleInstructionAccess().getExpressionOperationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getAssignStatementParserRuleCall_0()); }
	ruleAssignStatement
{ after(grammarAccess.getStatementAccess().getAssignStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getSelectionStatementParserRuleCall_1()); }
	ruleSelectionStatement
{ after(grammarAccess.getStatementAccess().getSelectionStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getIfStatementParserRuleCall_0()); }
	ruleIfStatement
{ after(grammarAccess.getSelectionStatementAccess().getIfStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSelectionStatementAccess().getCaseStatementParserRuleCall_1()); }
	ruleCaseStatement
{ after(grammarAccess.getSelectionStatementAccess().getCaseStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CaseListElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseListElementAccess().getSubRangeAssignment_0()); }
(rule__CaseListElement__SubRangeAssignment_0)
{ after(grammarAccess.getCaseListElementAccess().getSubRangeAssignment_0()); }
)

    |(
{ before(grammarAccess.getCaseListElementAccess().getIntegerAssignment_1()); }
(rule__CaseListElement__IntegerAssignment_1)
{ after(grammarAccess.getCaseListElementAccess().getIntegerAssignment_1()); }
)

    |(
{ before(grammarAccess.getCaseListElementAccess().getEnumeratedValueAssignment_2()); }
(rule__CaseListElement__EnumeratedValueAssignment_2)
{ after(grammarAccess.getCaseListElementAccess().getEnumeratedValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlockVarDeclarations__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBlockVarDeclarationsAccess().getIoVarDeclarationsParserRuleCall_0()); }
	ruleIoVarDeclarations
{ after(grammarAccess.getFunctionBlockVarDeclarationsAccess().getIoVarDeclarationsParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFunctionBlockVarDeclarationsAccess().getOtherVarDeclarationsParserRuleCall_1()); }
	ruleOtherVarDeclarations
{ after(grammarAccess.getFunctionBlockVarDeclarationsAccess().getOtherVarDeclarationsParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlockBody__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBlockBodyAccess().getInstructionListParserRuleCall_0()); }
	ruleInstructionList
{ after(grammarAccess.getFunctionBlockBodyAccess().getInstructionListParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFunctionBlockBodyAccess().getStatementListParserRuleCall_1()); }
	ruleStatementList
{ after(grammarAccess.getFunctionBlockBodyAccess().getStatementListParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramVarDeclarations__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramVarDeclarationsAccess().getIoVarDeclarationsParserRuleCall_0()); }
	ruleIoVarDeclarations
{ after(grammarAccess.getProgramVarDeclarationsAccess().getIoVarDeclarationsParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getProgramVarDeclarationsAccess().getOtherVarDeclarationsParserRuleCall_1()); }
	ruleOtherVarDeclarations
{ after(grammarAccess.getProgramVarDeclarationsAccess().getOtherVarDeclarationsParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getProgramVarDeclarationsAccess().getLocatedVarDeclarationsParserRuleCall_2()); }
	ruleLocatedVarDeclarations
{ after(grammarAccess.getProgramVarDeclarationsAccess().getLocatedVarDeclarationsParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getProgramVarDeclarationsAccess().getProgramAccessDeclsParserRuleCall_3()); }
	ruleProgramAccessDecls
{ after(grammarAccess.getProgramVarDeclarationsAccess().getProgramAccessDeclsParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocatedVarDeclarations__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocatedVarDeclarationsAccess().getCONSTANTKeyword_1_0()); }

	'CONSTANT' 

{ after(grammarAccess.getLocatedVarDeclarationsAccess().getCONSTANTKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getLocatedVarDeclarationsAccess().getRETAINKeyword_1_1()); }

	'RETAIN' 

{ after(grammarAccess.getLocatedVarDeclarationsAccess().getRETAINKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getLocatedVarDeclarationsAccess().getNON_RETAINKeyword_1_2()); }

	'NON_RETAIN' 

{ after(grammarAccess.getLocatedVarDeclarationsAccess().getNON_RETAINKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Direction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectionAccess().getREAD_WRITEKeyword_0()); }

	'READ_WRITE' 

{ after(grammarAccess.getDirectionAccess().getREAD_WRITEKeyword_0()); }
)

    |(
{ before(grammarAccess.getDirectionAccess().getREAD_ONLYKeyword_1()); }

	'READ_ONLY' 

{ after(grammarAccess.getDirectionAccess().getREAD_ONLYKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramConfigurationAccess().getRETAINKeyword_1_0()); }

	'RETAIN' 

{ after(grammarAccess.getProgramConfigurationAccess().getRETAINKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getProgramConfigurationAccess().getNONRETAINKeyword_1_1()); }

	'NONRETAIN' 

{ after(grammarAccess.getProgramConfigurationAccess().getNONRETAINKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProgConfElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgConfElementAccess().getFBTaskParserRuleCall_0()); }
	ruleFBTask
{ after(grammarAccess.getProgConfElementAccess().getFBTaskParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getProgConfElementAccess().getProgCNXNParserRuleCall_1()); }
	ruleProgCNXN
{ after(grammarAccess.getProgConfElementAccess().getProgCNXNParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProgCNXN__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgCNXNAccess().getGroup_0()); }
(rule__ProgCNXN__Group_0__0)
{ after(grammarAccess.getProgCNXNAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getProgCNXNAccess().getGroup_1()); }
(rule__ProgCNXN__Group_1__0)
{ after(grammarAccess.getProgCNXNAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataSink__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataSinkAccess().getGlobvarAssignment_0()); }
(rule__DataSink__GlobvarAssignment_0)
{ after(grammarAccess.getDataSinkAccess().getGlobvarAssignment_0()); }
)

    |(
{ before(grammarAccess.getDataSinkAccess().getDirvarAssignment_1()); }
(rule__DataSink__DirvarAssignment_1)
{ after(grammarAccess.getDataSinkAccess().getDirvarAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProgDataSource__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgDataSourceAccess().getConstantParserRuleCall_0()); }
	ruleConstant
{ after(grammarAccess.getProgDataSourceAccess().getConstantParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getProgDataSourceAccess().getDirectVariableParserRuleCall_1()); }
	ruleDirectVariable
{ after(grammarAccess.getProgDataSourceAccess().getDirectVariableParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclarations__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarDeclarationsAccess().getCONSTANTKeyword_1_0()); }

	'CONSTANT' 

{ after(grammarAccess.getGlobalVarDeclarationsAccess().getCONSTANTKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getGlobalVarDeclarationsAccess().getRETAINKeyword_1_1()); }

	'RETAIN' 

{ after(grammarAccess.getGlobalVarDeclarationsAccess().getRETAINKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarSpec__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarSpecAccess().getGlobalVarListParserRuleCall_0()); }
	ruleGlobalVarList
{ after(grammarAccess.getGlobalVarSpecAccess().getGlobalVarListParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getGlobalVarSpecAccess().getGroup_1()); }
(rule__GlobalVarSpec__Group_1__0)
{ after(grammarAccess.getGlobalVarSpecAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataSourceAccess().getConstantParserRuleCall_0()); }
	ruleConstant
{ after(grammarAccess.getDataSourceAccess().getConstantParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDataSourceAccess().getDirectVariableParserRuleCall_1()); }
	ruleDirectVariable
{ after(grammarAccess.getDataSourceAccess().getDirectVariableParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getNumericLiteralParserRuleCall_0()); }
	ruleNumericLiteral
{ after(grammarAccess.getConstantAccess().getNumericLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConstantAccess().getCharacterStringParserRuleCall_1()); }
	ruleCharacterString
{ after(grammarAccess.getConstantAccess().getCharacterStringParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getConstantAccess().getTimeLiteralParserRuleCall_2()); }
	ruleTimeLiteral
{ after(grammarAccess.getConstantAccess().getTimeLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getConstantAccess().getBitStringParserRuleCall_3()); }
	ruleBitString
{ after(grammarAccess.getConstantAccess().getBitStringParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getConstantAccess().getBooleanParserRuleCall_4()); }
	ruleBoolean
{ after(grammarAccess.getConstantAccess().getBooleanParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericLiteralAccess().getIntegerLiteralParserRuleCall_0()); }
	ruleIntegerLiteral
{ after(grammarAccess.getNumericLiteralAccess().getIntegerLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumericLiteralAccess().getRealLiteralParserRuleCall_1()); }
	ruleRealLiteral
{ after(grammarAccess.getNumericLiteralAccess().getRealLiteralParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerValueAccess().getSignedIntegerParserRuleCall_0()); }
	ruleSignedInteger
{ after(grammarAccess.getIntegerValueAccess().getSignedIntegerParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIntegerValueAccess().getBinaryIntegerParserRuleCall_1()); }
	ruleBinaryInteger
{ after(grammarAccess.getIntegerValueAccess().getBinaryIntegerParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getIntegerValueAccess().getOctalIntegerParserRuleCall_2()); }
	ruleOctalInteger
{ after(grammarAccess.getIntegerValueAccess().getOctalIntegerParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getIntegerValueAccess().getHexIntegerParserRuleCall_3()); }
	ruleHexInteger
{ after(grammarAccess.getIntegerValueAccess().getHexIntegerParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInteger__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedIntegerAccess().getPlusSignKeyword_0_0()); }

	'+' 

{ after(grammarAccess.getSignedIntegerAccess().getPlusSignKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getSignedIntegerAccess().getHyphenMinusKeyword_0_1()); }

	'-' 

{ after(grammarAccess.getSignedIntegerAccess().getHyphenMinusKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealValue__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealValueAccess().getPlusSignKeyword_0_0()); }

	'+' 

{ after(grammarAccess.getRealValueAccess().getPlusSignKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getRealValueAccess().getHyphenMinusKeyword_0_1()); }

	'-' 

{ after(grammarAccess.getRealValueAccess().getHyphenMinusKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CharacterString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharacterStringAccess().getValueAssignment_0()); }
(rule__CharacterString__ValueAssignment_0)
{ after(grammarAccess.getCharacterStringAccess().getValueAssignment_0()); }
)

    |(
{ before(grammarAccess.getCharacterStringAccess().getValueAssignment_1()); }
(rule__CharacterString__ValueAssignment_1)
{ after(grammarAccess.getCharacterStringAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitString__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStringAccess().getBYTEKeyword_0_0()); }

	'BYTE#' 

{ after(grammarAccess.getBitStringAccess().getBYTEKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getBitStringAccess().getWORDKeyword_0_1()); }

	'WORD#' 

{ after(grammarAccess.getBitStringAccess().getWORDKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getBitStringAccess().getDWORDKeyword_0_2()); }

	'DWORD#' 

{ after(grammarAccess.getBitStringAccess().getDWORDKeyword_0_2()); }
)

    |(
{ before(grammarAccess.getBitStringAccess().getLWORDKeyword_0_3()); }

	'LWORD#' 

{ after(grammarAccess.getBitStringAccess().getLWORDKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitStringValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStringValueAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getBitStringValueAccess().getINTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBitStringValueAccess().getBinaryIntegerParserRuleCall_1()); }
	ruleBinaryInteger
{ after(grammarAccess.getBitStringValueAccess().getBinaryIntegerParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getBitStringValueAccess().getOctalIntegerParserRuleCall_2()); }
	ruleOctalInteger
{ after(grammarAccess.getBitStringValueAccess().getOctalIntegerParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getBitStringValueAccess().getHexIntegerParserRuleCall_3()); }
	ruleHexInteger
{ after(grammarAccess.getBitStringValueAccess().getHexIntegerParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAccess().getGroup_1_0()); }
(rule__Boolean__Group_1_0__0)
{ after(grammarAccess.getBooleanAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getBooleanAccess().getAlternatives_1_1()); }
(rule__Boolean__Alternatives_1_1)
{ after(grammarAccess.getBooleanAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAccess().getTrueAssignment_1_1_0()); }
(rule__Boolean__TrueAssignment_1_1_0)
{ after(grammarAccess.getBooleanAccess().getTrueAssignment_1_1_0()); }
)

    |(
{ before(grammarAccess.getBooleanAccess().getFALSEKeyword_1_1_1()); }

	'FALSE' 

{ after(grammarAccess.getBooleanAccess().getFALSEKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getDurationLiteralParserRuleCall_0()); }
	ruleDurationLiteral
{ after(grammarAccess.getTimeLiteralAccess().getDurationLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTimeLiteralAccess().getTimeOfDayLiteralParserRuleCall_1()); }
	ruleTimeOfDayLiteral
{ after(grammarAccess.getTimeLiteralAccess().getTimeOfDayLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTimeLiteralAccess().getDateLiteralParserRuleCall_2()); }
	ruleDateLiteral
{ after(grammarAccess.getTimeLiteralAccess().getDateLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTimeLiteralAccess().getDateAndTimeLiteralParserRuleCall_3()); }
	ruleDateAndTimeLiteral
{ after(grammarAccess.getTimeLiteralAccess().getDateAndTimeLiteralParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DurationLiteral__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationLiteralAccess().getTKeyword_0_0()); }

	'T#' 

{ after(grammarAccess.getDurationLiteralAccess().getTKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getDurationLiteralAccess().getTKeyword_0_1()); }

	't#' 

{ after(grammarAccess.getDurationLiteralAccess().getTKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getDurationLiteralAccess().getTIMEKeyword_0_2()); }

	'TIME#' 

{ after(grammarAccess.getDurationLiteralAccess().getTIMEKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DurationLiteral__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationLiteralAccess().getDurationAssignment_2_0()); }
(rule__DurationLiteral__DurationAssignment_2_0)
{ after(grammarAccess.getDurationLiteralAccess().getDurationAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getDurationLiteralAccess().getDurationAssignment_2_1()); }
(rule__DurationLiteral__DurationAssignment_2_1)
{ after(grammarAccess.getDurationLiteralAccess().getDurationAssignment_2_1()); }
)

    |(
{ before(grammarAccess.getDurationLiteralAccess().getDurationAssignment_2_2()); }
(rule__DurationLiteral__DurationAssignment_2_2)
{ after(grammarAccess.getDurationLiteralAccess().getDurationAssignment_2_2()); }
)

    |(
{ before(grammarAccess.getDurationLiteralAccess().getDurationAssignment_2_3()); }
(rule__DurationLiteral__DurationAssignment_2_3)
{ after(grammarAccess.getDurationLiteralAccess().getDurationAssignment_2_3()); }
)

    |(
{ before(grammarAccess.getDurationLiteralAccess().getDurationAssignment_2_4()); }
(rule__DurationLiteral__DurationAssignment_2_4)
{ after(grammarAccess.getDurationLiteralAccess().getDurationAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeOfDayLiteral__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeOfDayLiteralAccess().getTIME_OF_DAYKeyword_0_0()); }

	'TIME_OF_DAY#' 

{ after(grammarAccess.getTimeOfDayLiteralAccess().getTIME_OF_DAYKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getTimeOfDayLiteralAccess().getTODKeyword_0_1()); }

	'TOD#' 

{ after(grammarAccess.getTimeOfDayLiteralAccess().getTODKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateLiteral__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateLiteralAccess().getDATEKeyword_0_0()); }

	'DATE#' 

{ after(grammarAccess.getDateLiteralAccess().getDATEKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getDateLiteralAccess().getDKeyword_0_1()); }

	'D#' 

{ after(grammarAccess.getDateLiteralAccess().getDKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateAndTimeLiteral__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAndTimeLiteralAccess().getDATE_AND_TIMEKeyword_0_0()); }

	'DATE_AND_TIME#' 

{ after(grammarAccess.getDateAndTimeLiteralAccess().getDATE_AND_TIMEKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getDateAndTimeLiteralAccess().getDTKeyword_0_1()); }

	'DT#' 

{ after(grammarAccess.getDateAndTimeLiteralAccess().getDTKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierAccess().getLETTERTerminalRuleCall_0()); }
	RULE_LETTER
{ after(grammarAccess.getIdentifierAccess().getLETTERTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIdentifierAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getIdentifierAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Integer__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAccess().getDIGITTerminalRuleCall_0()); }
	RULE_DIGIT
{ after(grammarAccess.getIntegerAccess().getDIGITTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__StringType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringType__Group__0__Impl
	rule__StringType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeAccess().getStringTypeAction_0()); }
(

)
{ after(grammarAccess.getStringTypeAccess().getStringTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeAccess().getSTRINGKeyword_1()); }

	'STRING' 

{ after(grammarAccess.getStringTypeAccess().getSTRINGKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PlainIntegerType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlainIntegerType__Group__0__Impl
	rule__PlainIntegerType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlainIntegerType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlainIntegerTypeAccess().getSignedIntegerTypeAction_0()); }
(

)
{ after(grammarAccess.getPlainIntegerTypeAccess().getSignedIntegerTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PlainIntegerType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlainIntegerType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlainIntegerType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlainIntegerTypeAccess().getINTKeyword_1()); }

	'INT' 

{ after(grammarAccess.getPlainIntegerTypeAccess().getINTKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataTypeDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDeclaration__Group__0__Impl
	rule__DataTypeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getTYPEKeyword_0()); }

	'TYPE' 

{ after(grammarAccess.getDataTypeDeclarationAccess().getTYPEKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDeclaration__Group__1__Impl
	rule__DataTypeDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getNameAssignment_1()); }
(rule__DataTypeDeclaration__NameAssignment_1)
{ after(grammarAccess.getDataTypeDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDeclaration__Group__2__Impl
	rule__DataTypeDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getDataTypeDeclarationAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDeclaration__Group__3__Impl
	rule__DataTypeDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getTypeDeclarationAssignment_3()); }
(rule__DataTypeDeclaration__TypeDeclarationAssignment_3)
{ after(grammarAccess.getDataTypeDeclarationAccess().getTypeDeclarationAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDeclaration__Group__4__Impl
	rule__DataTypeDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getEOLTerminalRuleCall_4()); }
	RULE_EOL
{ after(grammarAccess.getDataTypeDeclarationAccess().getEOLTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDeclaration__Group__5__Impl
	rule__DataTypeDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getGroup_5()); }
(rule__DataTypeDeclaration__Group_5__0)*
{ after(grammarAccess.getDataTypeDeclarationAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getEND_TYPEKeyword_6()); }

	'END_TYPE' 

{ after(grammarAccess.getDataTypeDeclarationAccess().getEND_TYPEKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__DataTypeDeclaration__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDeclaration__Group_5__0__Impl
	rule__DataTypeDeclaration__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getTypeDeclarationAssignment_5_0()); }
(rule__DataTypeDeclaration__TypeDeclarationAssignment_5_0)
{ after(grammarAccess.getDataTypeDeclarationAccess().getTypeDeclarationAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDeclaration__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDeclaration__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getEOLTerminalRuleCall_5_1()); }
	RULE_EOL
{ after(grammarAccess.getDataTypeDeclarationAccess().getEOLTerminalRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleTypeDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleTypeDeclaration__Group__0__Impl
	rule__SimpleTypeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTypeDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeDeclarationAccess().getDerivedTypeAssignment_0()); }
(rule__SimpleTypeDeclaration__DerivedTypeAssignment_0)
{ after(grammarAccess.getSimpleTypeDeclarationAccess().getDerivedTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleTypeDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleTypeDeclaration__Group__1__Impl
	rule__SimpleTypeDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTypeDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeDeclarationAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getSimpleTypeDeclarationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleTypeDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleTypeDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTypeDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeDeclarationAccess().getSpecInitAssignment_2()); }
(rule__SimpleTypeDeclaration__SpecInitAssignment_2)
{ after(grammarAccess.getSimpleTypeDeclarationAccess().getSpecInitAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SpecInit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecInit__Group__0__Impl
	rule__SpecInit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecInit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecInitAccess().getAlternatives_0()); }
(rule__SpecInit__Alternatives_0)
{ after(grammarAccess.getSpecInitAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecInit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecInit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecInit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecInitAccess().getGroup_1()); }
(rule__SpecInit__Group_1__0)?
{ after(grammarAccess.getSpecInitAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SpecInit__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecInit__Group_1__0__Impl
	rule__SpecInit__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecInit__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecInitAccess().getColonEqualsSignKeyword_1_0()); }

	':=' 

{ after(grammarAccess.getSpecInitAccess().getColonEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecInit__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecInit__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecInit__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecInitAccess().getAlternatives_1_1()); }
(rule__SpecInit__Alternatives_1_1)
{ after(grammarAccess.getSpecInitAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RangeDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeDeclaration__Group__0__Impl
	rule__RangeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeDeclarationAccess().getDerivedTypeAssignment_0()); }
(rule__RangeDeclaration__DerivedTypeAssignment_0)
{ after(grammarAccess.getRangeDeclarationAccess().getDerivedTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeDeclaration__Group__1__Impl
	rule__RangeDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeDeclarationAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getRangeDeclarationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeDeclaration__Group__2__Impl
	rule__RangeDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeDeclarationAccess().getBaseTypeAssignment_2()); }
(rule__RangeDeclaration__BaseTypeAssignment_2)
{ after(grammarAccess.getRangeDeclarationAccess().getBaseTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeDeclaration__Group__3__Impl
	rule__RangeDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeDeclarationAccess().getGroup_3()); }
(rule__RangeDeclaration__Group_3__0)
{ after(grammarAccess.getRangeDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeDeclarationAccess().getGroup_4()); }
(rule__RangeDeclaration__Group_4__0)?
{ after(grammarAccess.getRangeDeclarationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__RangeDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeDeclaration__Group_3__0__Impl
	rule__RangeDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeDeclarationAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getRangeDeclarationAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeDeclaration__Group_3__1__Impl
	rule__RangeDeclaration__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeDeclarationAccess().getRangeAssignment_3_1()); }
(rule__RangeDeclaration__RangeAssignment_3_1)
{ after(grammarAccess.getRangeDeclarationAccess().getRangeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeDeclaration__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeDeclaration__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDeclaration__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeDeclarationAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getRangeDeclarationAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RangeDeclaration__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeDeclaration__Group_4__0__Impl
	rule__RangeDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDeclaration__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeDeclarationAccess().getColonEqualsSignKeyword_4_0()); }

	':=' 

{ after(grammarAccess.getRangeDeclarationAccess().getColonEqualsSignKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeDeclaration__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeDeclaration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDeclaration__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeDeclarationAccess().getConstantAssignment_4_1()); }
(rule__RangeDeclaration__ConstantAssignment_4_1)
{ after(grammarAccess.getRangeDeclarationAccess().getConstantAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group__0__Impl
	rule__EnumDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getDerivedTypeAssignment_0()); }
(rule__EnumDeclaration__DerivedTypeAssignment_0)
{ after(grammarAccess.getEnumDeclarationAccess().getDerivedTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group__1__Impl
	rule__EnumDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getEnumDeclarationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group__2__Impl
	rule__EnumDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getEnumDeclarationAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group__3__Impl
	rule__EnumDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getEnumerationAssignment_3()); }
(rule__EnumDeclaration__EnumerationAssignment_3)
{ after(grammarAccess.getEnumDeclarationAccess().getEnumerationAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group__4__Impl
	rule__EnumDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getEnumDeclarationAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getGroup_5()); }
(rule__EnumDeclaration__Group_5__0)?
{ after(grammarAccess.getEnumDeclarationAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__EnumDeclaration__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group_5__0__Impl
	rule__EnumDeclaration__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getColonEqualsSignKeyword_5_0()); }

	':=' 

{ after(grammarAccess.getEnumDeclarationAccess().getColonEqualsSignKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getConstantAssignment_5_1()); }
(rule__EnumDeclaration__ConstantAssignment_5_1)
{ after(grammarAccess.getEnumDeclarationAccess().getConstantAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArrayDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayDeclaration__Group__0__Impl
	rule__ArrayDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayDeclarationAccess().getDerivedTypeAssignment_0()); }
(rule__ArrayDeclaration__DerivedTypeAssignment_0)
{ after(grammarAccess.getArrayDeclarationAccess().getDerivedTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayDeclaration__Group__1__Impl
	rule__ArrayDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayDeclarationAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getArrayDeclarationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayDeclaration__Group__2__Impl
	rule__ArrayDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayDeclarationAccess().getARRAYKeyword_2()); }

	'ARRAY' 

{ after(grammarAccess.getArrayDeclarationAccess().getARRAYKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayDeclaration__Group__3__Impl
	rule__ArrayDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayDeclarationAccess().getLeftSquareBracketKeyword_3()); }

	'[' 

{ after(grammarAccess.getArrayDeclarationAccess().getLeftSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayDeclaration__Group__4__Impl
	rule__ArrayDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayDeclarationAccess().getRangesAssignment_4()); }
(rule__ArrayDeclaration__RangesAssignment_4)
{ after(grammarAccess.getArrayDeclarationAccess().getRangesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayDeclaration__Group__5__Impl
	rule__ArrayDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayDeclarationAccess().getGroup_5()); }
(rule__ArrayDeclaration__Group_5__0)*
{ after(grammarAccess.getArrayDeclarationAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayDeclaration__Group__6__Impl
	rule__ArrayDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayDeclarationAccess().getRightSquareBracketKeyword_6()); }

	']' 

{ after(grammarAccess.getArrayDeclarationAccess().getRightSquareBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayDeclaration__Group__7__Impl
	rule__ArrayDeclaration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayDeclarationAccess().getOFKeyword_7()); }

	'OF' 

{ after(grammarAccess.getArrayDeclarationAccess().getOFKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayDeclaration__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayDeclaration__Group__8__Impl
	rule__ArrayDeclaration__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayDeclarationAccess().getBaseTypeAssignment_8()); }
(rule__ArrayDeclaration__BaseTypeAssignment_8)
{ after(grammarAccess.getArrayDeclarationAccess().getBaseTypeAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayDeclaration__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayDeclaration__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayDeclarationAccess().getGroup_9()); }
(rule__ArrayDeclaration__Group_9__0)?
{ after(grammarAccess.getArrayDeclarationAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__ArrayDeclaration__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayDeclaration__Group_5__0__Impl
	rule__ArrayDeclaration__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayDeclarationAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getArrayDeclarationAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayDeclaration__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayDeclaration__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayDeclarationAccess().getRangesAssignment_5_1()); }
(rule__ArrayDeclaration__RangesAssignment_5_1)
{ after(grammarAccess.getArrayDeclarationAccess().getRangesAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArrayDeclaration__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayDeclaration__Group_9__0__Impl
	rule__ArrayDeclaration__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayDeclarationAccess().getColonEqualsSignKeyword_9_0()); }

	':=' 

{ after(grammarAccess.getArrayDeclarationAccess().getColonEqualsSignKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayDeclaration__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayDeclaration__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayDeclarationAccess().getConstantAssignment_9_1()); }
(rule__ArrayDeclaration__ConstantAssignment_9_1)
{ after(grammarAccess.getArrayDeclarationAccess().getConstantAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SubRangeWithSign__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubRangeWithSign__Group__0__Impl
	rule__SubRangeWithSign__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubRangeWithSign__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubRangeWithSignAccess().getAlternatives_0()); }
(rule__SubRangeWithSign__Alternatives_0)?
{ after(grammarAccess.getSubRangeWithSignAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubRangeWithSign__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubRangeWithSign__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubRangeWithSign__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubRangeWithSignAccess().getSUB_RANGETerminalRuleCall_1()); }
	RULE_SUB_RANGE
{ after(grammarAccess.getSubRangeWithSignAccess().getSUB_RANGETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Enumeration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumeration__Group__0__Impl
	rule__Enumeration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationAccess().getValuesAssignment_0()); }
(rule__Enumeration__ValuesAssignment_0)
{ after(grammarAccess.getEnumerationAccess().getValuesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enumeration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumeration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationAccess().getGroup_1()); }
(rule__Enumeration__Group_1__0)*
{ after(grammarAccess.getEnumerationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Enumeration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumeration__Group_1__0__Impl
	rule__Enumeration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getEnumerationAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enumeration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumeration__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationAccess().getValuesAssignment_1_1()); }
(rule__Enumeration__ValuesAssignment_1_1)
{ after(grammarAccess.getEnumerationAccess().getValuesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumeratedValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratedValue__Group__0__Impl
	rule__EnumeratedValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedValueAccess().getDerivedTypeAssignment_0()); }
(rule__EnumeratedValue__DerivedTypeAssignment_0)
{ after(grammarAccess.getEnumeratedValueAccess().getDerivedTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratedValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratedValue__Group__1__Impl
	rule__EnumeratedValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedValueAccess().getNumberSignKeyword_1()); }

	'#' 

{ after(grammarAccess.getEnumeratedValueAccess().getNumberSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratedValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumeratedValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedValueAccess().getNameAssignment_2()); }
(rule__EnumeratedValue__NameAssignment_2)
{ after(grammarAccess.getEnumeratedValueAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArrayInitialization__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayInitialization__Group__0__Impl
	rule__ArrayInitialization__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialization__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitializationAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getArrayInitializationAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayInitialization__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayInitialization__Group__1__Impl
	rule__ArrayInitialization__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialization__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitializationAccess().getInitialElementsAssignment_1()); }
(rule__ArrayInitialization__InitialElementsAssignment_1)
{ after(grammarAccess.getArrayInitializationAccess().getInitialElementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayInitialization__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayInitialization__Group__2__Impl
	rule__ArrayInitialization__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialization__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitializationAccess().getGroup_2()); }
(rule__ArrayInitialization__Group_2__0)*
{ after(grammarAccess.getArrayInitializationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayInitialization__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayInitialization__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialization__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitializationAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getArrayInitializationAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ArrayInitialization__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayInitialization__Group_2__0__Impl
	rule__ArrayInitialization__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialization__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitializationAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getArrayInitializationAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayInitialization__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayInitialization__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialization__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitializationAccess().getInitialElementsAssignment_2_1()); }
(rule__ArrayInitialization__InitialElementsAssignment_2_1)
{ after(grammarAccess.getArrayInitializationAccess().getInitialElementsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArrayInitialElements__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayInitialElements__Group_1__0__Impl
	rule__ArrayInitialElements__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialElements__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitialElementsAccess().getIndexAssignment_1_0()); }
(rule__ArrayInitialElements__IndexAssignment_1_0)
{ after(grammarAccess.getArrayInitialElementsAccess().getIndexAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayInitialElements__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayInitialElements__Group_1__1__Impl
	rule__ArrayInitialElements__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialElements__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitialElementsAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getArrayInitialElementsAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayInitialElements__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayInitialElements__Group_1__2__Impl
	rule__ArrayInitialElements__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialElements__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitialElementsAccess().getInitialElementAssignment_1_2()); }
(rule__ArrayInitialElements__InitialElementAssignment_1_2)
{ after(grammarAccess.getArrayInitialElementsAccess().getInitialElementAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayInitialElements__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayInitialElements__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialElements__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitialElementsAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getArrayInitialElementsAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StructureTypeDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureTypeDeclaration__Group__0__Impl
	rule__StructureTypeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureTypeDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureTypeDeclarationAccess().getDerivedTypeAssignment_0()); }
(rule__StructureTypeDeclaration__DerivedTypeAssignment_0)
{ after(grammarAccess.getStructureTypeDeclarationAccess().getDerivedTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructureTypeDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureTypeDeclaration__Group__1__Impl
	rule__StructureTypeDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureTypeDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureTypeDeclarationAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getStructureTypeDeclarationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructureTypeDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureTypeDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureTypeDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureTypeDeclarationAccess().getAlternatives_2()); }
(rule__StructureTypeDeclaration__Alternatives_2)
{ after(grammarAccess.getStructureTypeDeclarationAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StructureDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureDeclaration__Group__0__Impl
	rule__StructureDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureDeclarationAccess().getSTRUCTKeyword_0()); }

	'STRUCT' 

{ after(grammarAccess.getStructureDeclarationAccess().getSTRUCTKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructureDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureDeclaration__Group__1__Impl
	rule__StructureDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureDeclarationAccess().getStructureElementAssignment_1()); }
(rule__StructureDeclaration__StructureElementAssignment_1)
{ after(grammarAccess.getStructureDeclarationAccess().getStructureElementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructureDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureDeclaration__Group__2__Impl
	rule__StructureDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureDeclarationAccess().getEOLTerminalRuleCall_2()); }
	RULE_EOL
{ after(grammarAccess.getStructureDeclarationAccess().getEOLTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructureDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureDeclaration__Group__3__Impl
	rule__StructureDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureDeclarationAccess().getGroup_3()); }
(rule__StructureDeclaration__Group_3__0)*
{ after(grammarAccess.getStructureDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructureDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureDeclarationAccess().getEND_STRUCTKeyword_4()); }

	'END_STRUCT' 

{ after(grammarAccess.getStructureDeclarationAccess().getEND_STRUCTKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StructureDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureDeclaration__Group_3__0__Impl
	rule__StructureDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureDeclarationAccess().getStructureElementAssignment_3_0()); }
(rule__StructureDeclaration__StructureElementAssignment_3_0)
{ after(grammarAccess.getStructureDeclarationAccess().getStructureElementAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructureDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureDeclarationAccess().getEOLTerminalRuleCall_3_1()); }
	RULE_EOL
{ after(grammarAccess.getStructureDeclarationAccess().getEOLTerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StructureElementDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureElementDeclaration__Group__0__Impl
	rule__StructureElementDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureElementDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureElementDeclarationAccess().getNameAssignment_0()); }
(rule__StructureElementDeclaration__NameAssignment_0)
{ after(grammarAccess.getStructureElementDeclarationAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructureElementDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureElementDeclaration__Group__1__Impl
	rule__StructureElementDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureElementDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureElementDeclarationAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getStructureElementDeclarationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructureElementDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureElementDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureElementDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureElementDeclarationAccess().getSpecInitAssignment_2()); }
(rule__StructureElementDeclaration__SpecInitAssignment_2)
{ after(grammarAccess.getStructureElementDeclarationAccess().getSpecInitAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InitializedStructure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitializedStructure__Group__0__Impl
	rule__InitializedStructure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializedStructure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitializedStructureAccess().getDerivedTypeAssignment_0()); }
(rule__InitializedStructure__DerivedTypeAssignment_0)
{ after(grammarAccess.getInitializedStructureAccess().getDerivedTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitializedStructure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitializedStructure__Group__1__Impl
	rule__InitializedStructure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializedStructure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitializedStructureAccess().getColonEqualsSignKeyword_1()); }

	':=' 

{ after(grammarAccess.getInitializedStructureAccess().getColonEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitializedStructure__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitializedStructure__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializedStructure__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitializedStructureAccess().getInitializationAssignment_2()); }
(rule__InitializedStructure__InitializationAssignment_2)
{ after(grammarAccess.getInitializedStructureAccess().getInitializationAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StructureInitialization__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureInitialization__Group__0__Impl
	rule__StructureInitialization__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureInitialization__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureInitializationAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getStructureInitializationAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructureInitialization__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureInitialization__Group__1__Impl
	rule__StructureInitialization__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureInitialization__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureInitializationAccess().getInitialElementsAssignment_1()); }
(rule__StructureInitialization__InitialElementsAssignment_1)
{ after(grammarAccess.getStructureInitializationAccess().getInitialElementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructureInitialization__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureInitialization__Group__2__Impl
	rule__StructureInitialization__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureInitialization__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureInitializationAccess().getGroup_2()); }
(rule__StructureInitialization__Group_2__0)*
{ after(grammarAccess.getStructureInitializationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructureInitialization__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureInitialization__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureInitialization__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureInitializationAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getStructureInitializationAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StructureInitialization__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureInitialization__Group_2__0__Impl
	rule__StructureInitialization__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureInitialization__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureInitializationAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getStructureInitializationAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructureInitialization__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureInitialization__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureInitialization__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureInitializationAccess().getInitialElementsAssignment_2_1()); }
(rule__StructureInitialization__InitialElementsAssignment_2_1)
{ after(grammarAccess.getStructureInitializationAccess().getInitialElementsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StructureElementInitialization__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureElementInitialization__Group__0__Impl
	rule__StructureElementInitialization__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureElementInitialization__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureElementInitializationAccess().getNameAssignment_0()); }
(rule__StructureElementInitialization__NameAssignment_0)
{ after(grammarAccess.getStructureElementInitializationAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructureElementInitialization__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureElementInitialization__Group__1__Impl
	rule__StructureElementInitialization__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureElementInitialization__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureElementInitializationAccess().getColonEqualsSignKeyword_1()); }

	':=' 

{ after(grammarAccess.getStructureElementInitializationAccess().getColonEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructureElementInitialization__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructureElementInitialization__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureElementInitialization__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureElementInitializationAccess().getValueAssignment_2()); }
(rule__StructureElementInitialization__ValueAssignment_2)
{ after(grammarAccess.getStructureElementInitializationAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StringDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringDeclaration__Group__0__Impl
	rule__StringDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDeclarationAccess().getDerivedTypeAssignment_0()); }
(rule__StringDeclaration__DerivedTypeAssignment_0)
{ after(grammarAccess.getStringDeclarationAccess().getDerivedTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringDeclaration__Group__1__Impl
	rule__StringDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDeclarationAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getStringDeclarationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringDeclaration__Group__2__Impl
	rule__StringDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDeclarationAccess().getAlternatives_2()); }
(rule__StringDeclaration__Alternatives_2)?
{ after(grammarAccess.getStringDeclarationAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringDeclaration__Group__3__Impl
	rule__StringDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StringDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDeclarationAccess().getGroup_3()); }
(rule__StringDeclaration__Group_3__0)
{ after(grammarAccess.getStringDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDeclarationAccess().getGroup_4()); }
(rule__StringDeclaration__Group_4__0)?
{ after(grammarAccess.getStringDeclarationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StringDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringDeclaration__Group_3__0__Impl
	rule__StringDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDeclarationAccess().getLeftSquareBracketKeyword_3_0()); }

	'[' 

{ after(grammarAccess.getStringDeclarationAccess().getLeftSquareBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringDeclaration__Group_3__1__Impl
	rule__StringDeclaration__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDeclarationAccess().getSizeAssignment_3_1()); }
(rule__StringDeclaration__SizeAssignment_3_1)
{ after(grammarAccess.getStringDeclarationAccess().getSizeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringDeclaration__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringDeclaration__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringDeclaration__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDeclarationAccess().getRightSquareBracketKeyword_3_2()); }

	']' 

{ after(grammarAccess.getStringDeclarationAccess().getRightSquareBracketKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StringDeclaration__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringDeclaration__Group_4__0__Impl
	rule__StringDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringDeclaration__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDeclarationAccess().getColonEqualsSignKeyword_4_0()); }

	':=' 

{ after(grammarAccess.getStringDeclarationAccess().getColonEqualsSignKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringDeclaration__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringDeclaration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringDeclaration__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDeclarationAccess().getInitialValueAssignment_4_1()); }
(rule__StringDeclaration__InitialValueAssignment_4_1)
{ after(grammarAccess.getStringDeclarationAccess().getInitialValueAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArrayVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayVariable__Group__0__Impl
	rule__ArrayVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayVariableAccess().getSubscriptedVariableAssignment_0()); }
(rule__ArrayVariable__SubscriptedVariableAssignment_0)
{ after(grammarAccess.getArrayVariableAccess().getSubscriptedVariableAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayVariable__Group__1__Impl
	rule__ArrayVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayVariableAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getArrayVariableAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayVariable__Group__2__Impl
	rule__ArrayVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayVariableAccess().getSubscriptsAssignment_2()); }
(rule__ArrayVariable__SubscriptsAssignment_2)
{ after(grammarAccess.getArrayVariableAccess().getSubscriptsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayVariable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayVariable__Group__3__Impl
	rule__ArrayVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayVariableAccess().getGroup_3()); }
(rule__ArrayVariable__Group_3__0)*
{ after(grammarAccess.getArrayVariableAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayVariable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayVariable__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayVariableAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getArrayVariableAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ArrayVariable__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayVariable__Group_3__0__Impl
	rule__ArrayVariable__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayVariableAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getArrayVariableAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayVariable__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayVariable__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayVariableAccess().getSubscriptsAssignment_3_1()); }
(rule__ArrayVariable__SubscriptsAssignment_3_1)
{ after(grammarAccess.getArrayVariableAccess().getSubscriptsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StructuredVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructuredVariable__Group__0__Impl
	rule__StructuredVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuredVariableAccess().getRecordVariableAssignment_0()); }
(rule__StructuredVariable__RecordVariableAssignment_0)
{ after(grammarAccess.getStructuredVariableAccess().getRecordVariableAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructuredVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructuredVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuredVariableAccess().getFieldSelectorAssignment_1()); }
(rule__StructuredVariable__FieldSelectorAssignment_1)
{ after(grammarAccess.getStructuredVariableAccess().getFieldSelectorAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getXorExpressionParserRuleCall_0()); }
	ruleXorExpression
{ after(grammarAccess.getOrExpressionAccess().getXorExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
(rule__OrExpression__Group_1__0)*
{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getOrExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__1__Impl
	rule__OrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1()); }
(rule__OrExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
(rule__OrExpression__RightAssignment_1_2)
{ after(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XorExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorExpression__Group__0__Impl
	rule__XorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
{ after(grammarAccess.getXorExpressionAccess().getAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XorExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExpressionAccess().getGroup_1()); }
(rule__XorExpression__Group_1__0)*
{ after(grammarAccess.getXorExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XorExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorExpression__Group_1__0__Impl
	rule__XorExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getXorExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XorExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorExpression__Group_1__1__Impl
	rule__XorExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExpressionAccess().getOperatorAssignment_1_1()); }
(rule__XorExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getXorExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XorExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExpressionAccess().getRightAssignment_1_2()); }
(rule__XorExpression__RightAssignment_1_2)
{ after(grammarAccess.getXorExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getComparisonParserRuleCall_0()); }
	ruleComparison
{ after(grammarAccess.getAndExpressionAccess().getComparisonParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
(rule__AndExpression__Group_1__0)*
{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAndExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__1__Impl
	rule__AndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1()); }
(rule__AndExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
(rule__AndExpression__RightAssignment_1_2)
{ after(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Comparison__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getAddExpressionParserRuleCall_0()); }
	ruleAddExpression
{ after(grammarAccess.getComparisonAccess().getAddExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getGroup_1()); }
(rule__Comparison__Group_1__0)*
{ after(grammarAccess.getComparisonAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Comparison__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1__0__Impl
	rule__Comparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getBinaryExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getComparisonAccess().getBinaryExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1__1__Impl
	rule__Comparison__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getOperatorAssignment_1_1()); }
(rule__Comparison__OperatorAssignment_1_1)
{ after(grammarAccess.getComparisonAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
(rule__Comparison__RightAssignment_1_2)
{ after(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AddExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group__0__Impl
	rule__AddExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getTermParserRuleCall_0()); }
	ruleTerm
{ after(grammarAccess.getAddExpressionAccess().getTermParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getGroup_1()); }
(rule__AddExpression__Group_1__0)*
{ after(grammarAccess.getAddExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AddExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1__0__Impl
	rule__AddExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAddExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1__1__Impl
	rule__AddExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getOperatorAssignment_1_1()); }
(rule__AddExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getAddExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getRightAssignment_1_2()); }
(rule__AddExpression__RightAssignment_1_2)
{ after(grammarAccess.getAddExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Term__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group__0__Impl
	rule__Term__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getPowerExpressionParserRuleCall_0()); }
	rulePowerExpression
{ after(grammarAccess.getTermAccess().getPowerExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getGroup_1()); }
(rule__Term__Group_1__0)*
{ after(grammarAccess.getTermAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Term__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group_1__0__Impl
	rule__Term__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getBinaryExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getTermAccess().getBinaryExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group_1__1__Impl
	rule__Term__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getOperatorAssignment_1_1()); }
(rule__Term__OperatorAssignment_1_1)
{ after(grammarAccess.getTermAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getRightAssignment_1_2()); }
(rule__Term__RightAssignment_1_2)
{ after(grammarAccess.getTermAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PowerExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PowerExpression__Group__0__Impl
	rule__PowerExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
	ruleUnaryExpression
{ after(grammarAccess.getPowerExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PowerExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PowerExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerExpressionAccess().getGroup_1()); }
(rule__PowerExpression__Group_1__0)*
{ after(grammarAccess.getPowerExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PowerExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PowerExpression__Group_1__0__Impl
	rule__PowerExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getPowerExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PowerExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PowerExpression__Group_1__1__Impl
	rule__PowerExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerExpressionAccess().getOperatorAssignment_1_1()); }
(rule__PowerExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getPowerExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PowerExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PowerExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerExpressionAccess().getRightAssignment_1_2()); }
(rule__PowerExpression__RightAssignment_1_2)
{ after(grammarAccess.getPowerExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_0__0__Impl
	rule__UnaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_0__1__Impl
	rule__UnaryExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getOperatorAssignment_0_1()); }
(rule__UnaryExpression__OperatorAssignment_0_1)
{ after(grammarAccess.getUnaryExpressionAccess().getOperatorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExpressionAssignment_0_2()); }
(rule__UnaryExpression__ExpressionAssignment_0_2)
{ after(grammarAccess.getUnaryExpressionAccess().getExpressionAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__0__Impl
	rule__PrimaryExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getFbnameAssignment_3_0()); }
(rule__PrimaryExpression__FbnameAssignment_3_0)
{ after(grammarAccess.getPrimaryExpressionAccess().getFbnameAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__1__Impl
	rule__PrimaryExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getOpenbrAssignment_3_1()); }
(rule__PrimaryExpression__OpenbrAssignment_3_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getOpenbrAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__2__Impl
	rule__PrimaryExpression__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getParamassignmentAssignment_3_2()); }
(rule__PrimaryExpression__ParamassignmentAssignment_3_2)
{ after(grammarAccess.getPrimaryExpressionAccess().getParamassignmentAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__3__Impl
	rule__PrimaryExpression__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_3_3()); }
(rule__PrimaryExpression__Group_3_3__0)*
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getClosebrAssignment_3_4()); }
(rule__PrimaryExpression__ClosebrAssignment_3_4)
{ after(grammarAccess.getPrimaryExpressionAccess().getClosebrAssignment_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PrimaryExpression__Group_3_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3_3__0__Impl
	rule__PrimaryExpression__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_3_3_0()); }

	',' 

{ after(grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getParamassignmentAssignment_3_3_1()); }
(rule__PrimaryExpression__ParamassignmentAssignment_3_3_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getParamassignmentAssignment_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParenthesesExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesesExpression__Group__0__Impl
	rule__ParenthesesExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesesExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesesExpressionAccess().getOpenbrAssignment_0()); }
(rule__ParenthesesExpression__OpenbrAssignment_0)
{ after(grammarAccess.getParenthesesExpressionAccess().getOpenbrAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesesExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesesExpression__Group__1__Impl
	rule__ParenthesesExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesesExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesesExpressionAccess().getExpressionAssignment_1()); }
(rule__ParenthesesExpression__ExpressionAssignment_1)
{ after(grammarAccess.getParenthesesExpressionAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesesExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesesExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesesExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesesExpressionAccess().getClosebrAssignment_2()); }
(rule__ParenthesesExpression__ClosebrAssignment_2)
{ after(grammarAccess.getParenthesesExpressionAccess().getClosebrAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ParamAssignment__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamAssignment__Group_0__0__Impl
	rule__ParamAssignment__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAssignmentAccess().getGroup_0_0()); }
(rule__ParamAssignment__Group_0_0__0)?
{ after(grammarAccess.getParamAssignmentAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamAssignment__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamAssignment__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAssignmentAccess().getExpressionAssignment_0_1()); }
(rule__ParamAssignment__ExpressionAssignment_0_1)
{ after(grammarAccess.getParamAssignmentAccess().getExpressionAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParamAssignment__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamAssignment__Group_0_0__0__Impl
	rule__ParamAssignment__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAssignmentAccess().getVariablenameAssignment_0_0_0()); }
(rule__ParamAssignment__VariablenameAssignment_0_0_0)
{ after(grammarAccess.getParamAssignmentAccess().getVariablenameAssignment_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamAssignment__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamAssignment__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAssignmentAccess().getColonEqualsSignKeyword_0_0_1()); }

	':=' 

{ after(grammarAccess.getParamAssignmentAccess().getColonEqualsSignKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParamAssignment__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamAssignment__Group_1__0__Impl
	rule__ParamAssignment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAssignmentAccess().getNotAssignment_1_0()); }
(rule__ParamAssignment__NotAssignment_1_0)?
{ after(grammarAccess.getParamAssignmentAccess().getNotAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamAssignment__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamAssignment__Group_1__1__Impl
	rule__ParamAssignment__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAssignmentAccess().getVariable1Assignment_1_1()); }
(rule__ParamAssignment__Variable1Assignment_1_1)
{ after(grammarAccess.getParamAssignmentAccess().getVariable1Assignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamAssignment__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamAssignment__Group_1__2__Impl
	rule__ParamAssignment__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAssignmentAccess().getColonGreaterThanSignKeyword_1_2()); }

	':>' 

{ after(grammarAccess.getParamAssignmentAccess().getColonGreaterThanSignKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamAssignment__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamAssignment__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAssignmentAccess().getVariable2Assignment_1_3()); }
(rule__ParamAssignment__Variable2Assignment_1_3)
{ after(grammarAccess.getParamAssignmentAccess().getVariable2Assignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__0__Impl
	rule__FunctionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getFUNCTIONKeyword_0()); }

	'FUNCTION' 

{ after(grammarAccess.getFunctionDeclarationAccess().getFUNCTIONKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__1__Impl
	rule__FunctionDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getNameAssignment_1()); }
(rule__FunctionDeclaration__NameAssignment_1)
{ after(grammarAccess.getFunctionDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__2__Impl
	rule__FunctionDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getFunctionDeclarationAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__3__Impl
	rule__FunctionDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getTypeAssignment_3()); }
(rule__FunctionDeclaration__TypeAssignment_3)
{ after(grammarAccess.getFunctionDeclarationAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__4__Impl
	rule__FunctionDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getIoVarDeclarationsAssignment_4()); }
(rule__FunctionDeclaration__IoVarDeclarationsAssignment_4)*
{ after(grammarAccess.getFunctionDeclarationAccess().getIoVarDeclarationsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__5__Impl
	rule__FunctionDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getBodyAssignment_5()); }
(rule__FunctionDeclaration__BodyAssignment_5)?
{ after(grammarAccess.getFunctionDeclarationAccess().getBodyAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getEND_FUNCTIONKeyword_6()); }

	'END_FUNCTION' 

{ after(grammarAccess.getFunctionDeclarationAccess().getEND_FUNCTIONKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__InputDeclarations__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputDeclarations__Group__0__Impl
	rule__InputDeclarations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputDeclarations__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputDeclarationsAccess().getVAR_INPUTKeyword_0()); }

	'VAR_INPUT' 

{ after(grammarAccess.getInputDeclarationsAccess().getVAR_INPUTKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputDeclarations__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputDeclarations__Group__1__Impl
	rule__InputDeclarations__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InputDeclarations__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputDeclarationsAccess().getAlternatives_1()); }
(rule__InputDeclarations__Alternatives_1)?
{ after(grammarAccess.getInputDeclarationsAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputDeclarations__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputDeclarations__Group__2__Impl
	rule__InputDeclarations__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InputDeclarations__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputDeclarationsAccess().getDeclarationsAssignment_2()); }
(rule__InputDeclarations__DeclarationsAssignment_2)
{ after(grammarAccess.getInputDeclarationsAccess().getDeclarationsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputDeclarations__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputDeclarations__Group__3__Impl
	rule__InputDeclarations__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InputDeclarations__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputDeclarationsAccess().getEOLTerminalRuleCall_3()); }
	RULE_EOL
{ after(grammarAccess.getInputDeclarationsAccess().getEOLTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputDeclarations__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputDeclarations__Group__4__Impl
	rule__InputDeclarations__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InputDeclarations__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputDeclarationsAccess().getGroup_4()); }
(rule__InputDeclarations__Group_4__0)*
{ after(grammarAccess.getInputDeclarationsAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputDeclarations__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputDeclarations__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputDeclarations__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputDeclarationsAccess().getEND_VARKeyword_5()); }

	'END_VAR' 

{ after(grammarAccess.getInputDeclarationsAccess().getEND_VARKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__InputDeclarations__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputDeclarations__Group_4__0__Impl
	rule__InputDeclarations__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputDeclarations__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputDeclarationsAccess().getDeclarationsAssignment_4_0()); }
(rule__InputDeclarations__DeclarationsAssignment_4_0)
{ after(grammarAccess.getInputDeclarationsAccess().getDeclarationsAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputDeclarations__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputDeclarations__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputDeclarations__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputDeclarationsAccess().getEOLTerminalRuleCall_4_1()); }
	RULE_EOL
{ after(grammarAccess.getInputDeclarationsAccess().getEOLTerminalRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InputDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputDeclaration__Group__0__Impl
	rule__InputDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputDeclarationAccess().getVar1ListAssignment_0()); }
(rule__InputDeclaration__Var1ListAssignment_0)
{ after(grammarAccess.getInputDeclarationAccess().getVar1ListAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputDeclaration__Group__1__Impl
	rule__InputDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InputDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputDeclarationAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getInputDeclarationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputDeclarationAccess().getDeclSpecificationAssignment_2()); }
(rule__InputDeclaration__DeclSpecificationAssignment_2)
{ after(grammarAccess.getInputDeclarationAccess().getDeclSpecificationAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__EdgeDeclSpecification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EdgeDeclSpecification__Group__0__Impl
	rule__EdgeDeclSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeDeclSpecification__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeDeclSpecificationAccess().getBOOLKeyword_0()); }

	'BOOL' 

{ after(grammarAccess.getEdgeDeclSpecificationAccess().getBOOLKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EdgeDeclSpecification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EdgeDeclSpecification__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeDeclSpecification__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeDeclSpecificationAccess().getAlternatives_1()); }
(rule__EdgeDeclSpecification__Alternatives_1)
{ after(grammarAccess.getEdgeDeclSpecificationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Var1List__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var1List__Group__0__Impl
	rule__Var1List__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var1List__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVar1ListAccess().getVariablesAssignment_0()); }
(rule__Var1List__VariablesAssignment_0)
{ after(grammarAccess.getVar1ListAccess().getVariablesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Var1List__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var1List__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var1List__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVar1ListAccess().getGroup_1()); }
(rule__Var1List__Group_1__0)*
{ after(grammarAccess.getVar1ListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Var1List__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var1List__Group_1__0__Impl
	rule__Var1List__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var1List__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVar1ListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getVar1ListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Var1List__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var1List__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var1List__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVar1ListAccess().getVariablesAssignment_1_1()); }
(rule__Var1List__VariablesAssignment_1_1)
{ after(grammarAccess.getVar1ListAccess().getVariablesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OutputDeclarations__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputDeclarations__Group__0__Impl
	rule__OutputDeclarations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputDeclarations__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputDeclarationsAccess().getVAR_OUTPUTKeyword_0()); }

	'VAR_OUTPUT' 

{ after(grammarAccess.getOutputDeclarationsAccess().getVAR_OUTPUTKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputDeclarations__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputDeclarations__Group__1__Impl
	rule__OutputDeclarations__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputDeclarations__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputDeclarationsAccess().getAlternatives_1()); }
(rule__OutputDeclarations__Alternatives_1)?
{ after(grammarAccess.getOutputDeclarationsAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputDeclarations__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputDeclarations__Group__2__Impl
	rule__OutputDeclarations__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputDeclarations__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputDeclarationsAccess().getInitDeclsAssignment_2()); }
(rule__OutputDeclarations__InitDeclsAssignment_2)
{ after(grammarAccess.getOutputDeclarationsAccess().getInitDeclsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputDeclarations__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputDeclarations__Group__3__Impl
	rule__OutputDeclarations__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputDeclarations__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputDeclarationsAccess().getEOLTerminalRuleCall_3()); }
	RULE_EOL
{ after(grammarAccess.getOutputDeclarationsAccess().getEOLTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputDeclarations__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputDeclarations__Group__4__Impl
	rule__OutputDeclarations__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputDeclarations__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputDeclarationsAccess().getGroup_4()); }
(rule__OutputDeclarations__Group_4__0)*
{ after(grammarAccess.getOutputDeclarationsAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputDeclarations__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputDeclarations__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputDeclarations__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputDeclarationsAccess().getEND_VARKeyword_5()); }

	'END_VAR' 

{ after(grammarAccess.getOutputDeclarationsAccess().getEND_VARKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__OutputDeclarations__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputDeclarations__Group_4__0__Impl
	rule__OutputDeclarations__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputDeclarations__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputDeclarationsAccess().getInitDeclsAssignment_4_0()); }
(rule__OutputDeclarations__InitDeclsAssignment_4_0)
{ after(grammarAccess.getOutputDeclarationsAccess().getInitDeclsAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputDeclarations__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputDeclarations__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputDeclarations__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputDeclarationsAccess().getEOLTerminalRuleCall_4_1()); }
	RULE_EOL
{ after(grammarAccess.getOutputDeclarationsAccess().getEOLTerminalRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarInitDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarInitDecl__Group__0__Impl
	rule__VarInitDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarInitDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarInitDeclAccess().getVar1ListAssignment_0()); }
(rule__VarInitDecl__Var1ListAssignment_0)
{ after(grammarAccess.getVarInitDeclAccess().getVar1ListAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarInitDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarInitDecl__Group__1__Impl
	rule__VarInitDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarInitDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarInitDeclAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getVarInitDeclAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarInitDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarInitDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarInitDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarInitDeclAccess().getSpecInitAssignment_2()); }
(rule__VarInitDecl__SpecInitAssignment_2)
{ after(grammarAccess.getVarInitDeclAccess().getSpecInitAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InputOutputDeclarations__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputOutputDeclarations__Group__0__Impl
	rule__InputOutputDeclarations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOutputDeclarations__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputOutputDeclarationsAccess().getVAR_IN_OUTKeyword_0()); }

	'VAR_IN_OUT' 

{ after(grammarAccess.getInputOutputDeclarationsAccess().getVAR_IN_OUTKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputOutputDeclarations__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputOutputDeclarations__Group__1__Impl
	rule__InputOutputDeclarations__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOutputDeclarations__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputOutputDeclarationsAccess().getInitDeclsAssignment_1()); }
(rule__InputOutputDeclarations__InitDeclsAssignment_1)
{ after(grammarAccess.getInputOutputDeclarationsAccess().getInitDeclsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputOutputDeclarations__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputOutputDeclarations__Group__2__Impl
	rule__InputOutputDeclarations__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOutputDeclarations__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputOutputDeclarationsAccess().getEOLTerminalRuleCall_2()); }
	RULE_EOL
{ after(grammarAccess.getInputOutputDeclarationsAccess().getEOLTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputOutputDeclarations__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputOutputDeclarations__Group__3__Impl
	rule__InputOutputDeclarations__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOutputDeclarations__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputOutputDeclarationsAccess().getGroup_3()); }
(rule__InputOutputDeclarations__Group_3__0)*
{ after(grammarAccess.getInputOutputDeclarationsAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputOutputDeclarations__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputOutputDeclarations__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOutputDeclarations__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputOutputDeclarationsAccess().getEND_VARKeyword_4()); }

	'END_VAR' 

{ after(grammarAccess.getInputOutputDeclarationsAccess().getEND_VARKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InputOutputDeclarations__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputOutputDeclarations__Group_3__0__Impl
	rule__InputOutputDeclarations__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOutputDeclarations__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputOutputDeclarationsAccess().getInitDeclsAssignment_3_0()); }
(rule__InputOutputDeclarations__InitDeclsAssignment_3_0)
{ after(grammarAccess.getInputOutputDeclarationsAccess().getInitDeclsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputOutputDeclarations__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputOutputDeclarations__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOutputDeclarations__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputOutputDeclarationsAccess().getEOLTerminalRuleCall_3_1()); }
	RULE_EOL
{ after(grammarAccess.getInputOutputDeclarationsAccess().getEOLTerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InstructionList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstructionList__Group__0__Impl
	rule__InstructionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionListAccess().getInstructionsAssignment_0()); }
(rule__InstructionList__InstructionsAssignment_0)
{ after(grammarAccess.getInstructionListAccess().getInstructionsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstructionList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstructionList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionListAccess().getInstructionsAssignment_1()); }
(rule__InstructionList__InstructionsAssignment_1)*
{ after(grammarAccess.getInstructionListAccess().getInstructionsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Instruction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group__0__Impl
	rule__Instruction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getGroup_0()); }
(rule__Instruction__Group_0__0)?
{ after(grammarAccess.getInstructionAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getInstructionAssignment_1()); }
(rule__Instruction__InstructionAssignment_1)
{ after(grammarAccess.getInstructionAccess().getInstructionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Instruction__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_0__0__Impl
	rule__Instruction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getLabelAssignment_0_0()); }
(rule__Instruction__LabelAssignment_0_0)
{ after(grammarAccess.getInstructionAccess().getLabelAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getColonKeyword_0_1()); }

	':' 

{ after(grammarAccess.getInstructionAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleOperation__Group__0__Impl
	rule__SimpleOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleOperationAccess().getOperatorAssignment_0()); }
(rule__SimpleOperation__OperatorAssignment_0)
{ after(grammarAccess.getSimpleOperationAccess().getOperatorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleOperationAccess().getOperandAssignment_1()); }
(rule__SimpleOperation__OperandAssignment_1)?
{ after(grammarAccess.getSimpleOperationAccess().getOperandAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionOperation__Group__0__Impl
	rule__ExpressionOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOperationAccess().getOperatorAssignment_0()); }
(rule__ExpressionOperation__OperatorAssignment_0)
{ after(grammarAccess.getExpressionOperationAccess().getOperatorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionOperation__Group__1__Impl
	rule__ExpressionOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOperationAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getExpressionOperationAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionOperation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionOperation__Group__2__Impl
	rule__ExpressionOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOperation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOperationAccess().getOperandAssignment_2()); }
(rule__ExpressionOperation__OperandAssignment_2)?
{ after(grammarAccess.getExpressionOperationAccess().getOperandAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionOperation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionOperation__Group__3__Impl
	rule__ExpressionOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOperation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOperationAccess().getSimpleInstructionListAssignment_3()); }
(rule__ExpressionOperation__SimpleInstructionListAssignment_3)?
{ after(grammarAccess.getExpressionOperationAccess().getSimpleInstructionListAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionOperation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionOperation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOperation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOperationAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getExpressionOperationAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__JmpOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JmpOperation__Group__0__Impl
	rule__JmpOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JmpOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJmpOperationAccess().getOperatorAssignment_0()); }
(rule__JmpOperation__OperatorAssignment_0)
{ after(grammarAccess.getJmpOperationAccess().getOperatorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JmpOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JmpOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JmpOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJmpOperationAccess().getLabelAssignment_1()); }
(rule__JmpOperation__LabelAssignment_1)
{ after(grammarAccess.getJmpOperationAccess().getLabelAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleInstructionList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleInstructionList__Group__0__Impl
	rule__SimpleInstructionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleInstructionList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleInstructionListAccess().getInstructionsAssignment_0()); }
(rule__SimpleInstructionList__InstructionsAssignment_0)
{ after(grammarAccess.getSimpleInstructionListAccess().getInstructionsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleInstructionList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleInstructionList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleInstructionList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleInstructionListAccess().getInstructionsAssignment_1()); }
(rule__SimpleInstructionList__InstructionsAssignment_1)*
{ after(grammarAccess.getSimpleInstructionListAccess().getInstructionsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StatementList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementList__Group__0__Impl
	rule__StatementList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementListAccess().getStatementsAssignment_0()); }
(rule__StatementList__StatementsAssignment_0)
{ after(grammarAccess.getStatementListAccess().getStatementsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementList__Group__1__Impl
	rule__StatementList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementListAccess().getEOLTerminalRuleCall_1()); }
	RULE_EOL
{ after(grammarAccess.getStatementListAccess().getEOLTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementListAccess().getGroup_2()); }
(rule__StatementList__Group_2__0)*
{ after(grammarAccess.getStatementListAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StatementList__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementList__Group_2__0__Impl
	rule__StatementList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementListAccess().getStatementsAssignment_2_0()); }
(rule__StatementList__StatementsAssignment_2_0)
{ after(grammarAccess.getStatementListAccess().getStatementsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementList__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementListAccess().getEOLTerminalRuleCall_2_1()); }
	RULE_EOL
{ after(grammarAccess.getStatementListAccess().getEOLTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssignStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignStatement__Group__0__Impl
	rule__AssignStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignStatementAccess().getVariableAssignment_0()); }
(rule__AssignStatement__VariableAssignment_0)
{ after(grammarAccess.getAssignStatementAccess().getVariableAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignStatement__Group__1__Impl
	rule__AssignStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignStatementAccess().getColonEqualsSignKeyword_1()); }

	':=' 

{ after(grammarAccess.getAssignStatementAccess().getColonEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignStatementAccess().getExpressionAssignment_2()); }
(rule__AssignStatement__ExpressionAssignment_2)
{ after(grammarAccess.getAssignStatementAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IfStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getIFKeyword_0()); }

	'IF' 

{ after(grammarAccess.getIfStatementAccess().getIFKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getIfExpressionAssignment_1()); }
(rule__IfStatement__IfExpressionAssignment_1)
{ after(grammarAccess.getIfStatementAccess().getIfExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getTHENKeyword_2()); }

	'THEN' 

{ after(grammarAccess.getIfStatementAccess().getTHENKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getThenStatementListAssignment_3()); }
(rule__IfStatement__ThenStatementListAssignment_3)
{ after(grammarAccess.getIfStatementAccess().getThenStatementListAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__4__Impl
	rule__IfStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseIfsAssignment_4()); }
(rule__IfStatement__ElseIfsAssignment_4)*
{ after(grammarAccess.getIfStatementAccess().getElseIfsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__5__Impl
	rule__IfStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getGroup_5()); }
(rule__IfStatement__Group_5__0)?
{ after(grammarAccess.getIfStatementAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getEND_IFKeyword_6()); }

	'END_IF' 

{ after(grammarAccess.getIfStatementAccess().getEND_IFKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__IfStatement__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_5__0__Impl
	rule__IfStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getELSEKeyword_5_0()); }

	'ELSE' 

{ after(grammarAccess.getIfStatementAccess().getELSEKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseStatementListAssignment_5_1()); }
(rule__IfStatement__ElseStatementListAssignment_5_1)
{ after(grammarAccess.getIfStatementAccess().getElseStatementListAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ElseIf__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElseIf__Group__0__Impl
	rule__ElseIf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIf__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseIfAccess().getELSIFKeyword_0()); }

	'ELSIF' 

{ after(grammarAccess.getElseIfAccess().getELSIFKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElseIf__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElseIf__Group__1__Impl
	rule__ElseIf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIf__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseIfAccess().getExpressionAssignment_1()); }
(rule__ElseIf__ExpressionAssignment_1)
{ after(grammarAccess.getElseIfAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElseIf__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElseIf__Group__2__Impl
	rule__ElseIf__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIf__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseIfAccess().getTHENKeyword_2()); }

	'THEN' 

{ after(grammarAccess.getElseIfAccess().getTHENKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElseIf__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElseIf__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIf__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseIfAccess().getStatementListAssignment_3()); }
(rule__ElseIf__StatementListAssignment_3)
{ after(grammarAccess.getElseIfAccess().getStatementListAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CaseStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseStatement__Group__0__Impl
	rule__CaseStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseStatementAccess().getCASEKeyword_0()); }

	'CASE' 

{ after(grammarAccess.getCaseStatementAccess().getCASEKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseStatement__Group__1__Impl
	rule__CaseStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseStatementAccess().getExpressionAssignment_1()); }
(rule__CaseStatement__ExpressionAssignment_1)
{ after(grammarAccess.getCaseStatementAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseStatement__Group__2__Impl
	rule__CaseStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseStatementAccess().getOFKeyword_2()); }

	'OF' 

{ after(grammarAccess.getCaseStatementAccess().getOFKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseStatement__Group__3__Impl
	rule__CaseStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseStatementAccess().getCaseElementsAssignment_3()); }
(rule__CaseStatement__CaseElementsAssignment_3)*
{ after(grammarAccess.getCaseStatementAccess().getCaseElementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseStatement__Group__4__Impl
	rule__CaseStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseStatementAccess().getGroup_4()); }
(rule__CaseStatement__Group_4__0)?
{ after(grammarAccess.getCaseStatementAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseStatementAccess().getEND_CASEKeyword_5()); }

	'END_CASE' 

{ after(grammarAccess.getCaseStatementAccess().getEND_CASEKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__CaseStatement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseStatement__Group_4__0__Impl
	rule__CaseStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseStatementAccess().getELSEKeyword_4_0()); }

	'ELSE' 

{ after(grammarAccess.getCaseStatementAccess().getELSEKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseStatement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseStatement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseStatementAccess().getElseStatementListAssignment_4_1()); }
(rule__CaseStatement__ElseStatementListAssignment_4_1)
{ after(grammarAccess.getCaseStatementAccess().getElseStatementListAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CaseElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseElement__Group__0__Impl
	rule__CaseElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseElementAccess().getCaseListAssignment_0()); }
(rule__CaseElement__CaseListAssignment_0)
{ after(grammarAccess.getCaseElementAccess().getCaseListAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseElement__Group__1__Impl
	rule__CaseElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseElementAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getCaseElementAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseElement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseElementAccess().getStatementListAssignment_2()); }
(rule__CaseElement__StatementListAssignment_2)
{ after(grammarAccess.getCaseElementAccess().getStatementListAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CaseList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseList__Group__0__Impl
	rule__CaseList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseListAccess().getElementsAssignment_0()); }
(rule__CaseList__ElementsAssignment_0)
{ after(grammarAccess.getCaseListAccess().getElementsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseListAccess().getGroup_1()); }
(rule__CaseList__Group_1__0)*
{ after(grammarAccess.getCaseListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CaseList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseList__Group_1__0__Impl
	rule__CaseList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getCaseListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseListAccess().getElementsAssignment_1_1()); }
(rule__CaseList__ElementsAssignment_1_1)
{ after(grammarAccess.getCaseListAccess().getElementsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionBlockDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBlockDeclaration__Group__0__Impl
	rule__FunctionBlockDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlockDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBlockDeclarationAccess().getFUNCTION_BLOCKKeyword_0()); }

	'FUNCTION_BLOCK' 

{ after(grammarAccess.getFunctionBlockDeclarationAccess().getFUNCTION_BLOCKKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBlockDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBlockDeclaration__Group__1__Impl
	rule__FunctionBlockDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlockDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBlockDeclarationAccess().getNameAssignment_1()); }
(rule__FunctionBlockDeclaration__NameAssignment_1)
{ after(grammarAccess.getFunctionBlockDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBlockDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBlockDeclaration__Group__2__Impl
	rule__FunctionBlockDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlockDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBlockDeclarationAccess().getVarDeclarationsAssignment_2()); }
(rule__FunctionBlockDeclaration__VarDeclarationsAssignment_2)*
{ after(grammarAccess.getFunctionBlockDeclarationAccess().getVarDeclarationsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBlockDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBlockDeclaration__Group__3__Impl
	rule__FunctionBlockDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlockDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBlockDeclarationAccess().getBodyAssignment_3()); }
(rule__FunctionBlockDeclaration__BodyAssignment_3)?
{ after(grammarAccess.getFunctionBlockDeclarationAccess().getBodyAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBlockDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBlockDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlockDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBlockDeclarationAccess().getEND_FUNCTION_BLOCKKeyword_4()); }

	'END_FUNCTION_BLOCK' 

{ after(grammarAccess.getFunctionBlockDeclarationAccess().getEND_FUNCTION_BLOCKKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__VarDeclarations__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDeclarations__Group__0__Impl
	rule__VarDeclarations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclarations__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclarationsAccess().getVARKeyword_0()); }

	'VAR' 

{ after(grammarAccess.getVarDeclarationsAccess().getVARKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDeclarations__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDeclarations__Group__1__Impl
	rule__VarDeclarations__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclarations__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclarationsAccess().getConstantAssignment_1()); }
(rule__VarDeclarations__ConstantAssignment_1)?
{ after(grammarAccess.getVarDeclarationsAccess().getConstantAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDeclarations__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDeclarations__Group__2__Impl
	rule__VarDeclarations__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclarations__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclarationsAccess().getInitDeclsAssignment_2()); }
(rule__VarDeclarations__InitDeclsAssignment_2)
{ after(grammarAccess.getVarDeclarationsAccess().getInitDeclsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDeclarations__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDeclarations__Group__3__Impl
	rule__VarDeclarations__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclarations__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclarationsAccess().getEOLTerminalRuleCall_3()); }
	RULE_EOL
{ after(grammarAccess.getVarDeclarationsAccess().getEOLTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDeclarations__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDeclarations__Group__4__Impl
	rule__VarDeclarations__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclarations__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclarationsAccess().getGroup_4()); }
(rule__VarDeclarations__Group_4__0)*
{ after(grammarAccess.getVarDeclarationsAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDeclarations__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDeclarations__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclarations__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclarationsAccess().getEND_VARKeyword_5()); }

	'END_VAR' 

{ after(grammarAccess.getVarDeclarationsAccess().getEND_VARKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__VarDeclarations__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDeclarations__Group_4__0__Impl
	rule__VarDeclarations__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclarations__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclarationsAccess().getInitDeclsAssignment_4_0()); }
(rule__VarDeclarations__InitDeclsAssignment_4_0)
{ after(grammarAccess.getVarDeclarationsAccess().getInitDeclsAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDeclarations__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDeclarations__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclarations__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclarationsAccess().getEOLTerminalRuleCall_4_1()); }
	RULE_EOL
{ after(grammarAccess.getVarDeclarationsAccess().getEOLTerminalRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProgramDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramDeclaration__Group__0__Impl
	rule__ProgramDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramDeclarationAccess().getPROGRAMKeyword_0()); }

	'PROGRAM' 

{ after(grammarAccess.getProgramDeclarationAccess().getPROGRAMKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramDeclaration__Group__1__Impl
	rule__ProgramDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramDeclarationAccess().getNameAssignment_1()); }
(rule__ProgramDeclaration__NameAssignment_1)
{ after(grammarAccess.getProgramDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramDeclaration__Group__2__Impl
	rule__ProgramDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramDeclarationAccess().getVarDeclarationsAssignment_2()); }
(rule__ProgramDeclaration__VarDeclarationsAssignment_2)*
{ after(grammarAccess.getProgramDeclarationAccess().getVarDeclarationsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramDeclaration__Group__3__Impl
	rule__ProgramDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramDeclarationAccess().getBodyAssignment_3()); }
(rule__ProgramDeclaration__BodyAssignment_3)?
{ after(grammarAccess.getProgramDeclarationAccess().getBodyAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramDeclarationAccess().getEND_PROGRAMKeyword_4()); }

	'END_PROGRAM' 

{ after(grammarAccess.getProgramDeclarationAccess().getEND_PROGRAMKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__LocatedVarDeclarations__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocatedVarDeclarations__Group__0__Impl
	rule__LocatedVarDeclarations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocatedVarDeclarations__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocatedVarDeclarationsAccess().getVARKeyword_0()); }

	'VAR' 

{ after(grammarAccess.getLocatedVarDeclarationsAccess().getVARKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocatedVarDeclarations__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocatedVarDeclarations__Group__1__Impl
	rule__LocatedVarDeclarations__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocatedVarDeclarations__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocatedVarDeclarationsAccess().getAlternatives_1()); }
(rule__LocatedVarDeclarations__Alternatives_1)
{ after(grammarAccess.getLocatedVarDeclarationsAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocatedVarDeclarations__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocatedVarDeclarations__Group__2__Impl
	rule__LocatedVarDeclarations__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocatedVarDeclarations__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocatedVarDeclarationsAccess().getLocatedVarDeclarationAssignment_2()); }
(rule__LocatedVarDeclarations__LocatedVarDeclarationAssignment_2)
{ after(grammarAccess.getLocatedVarDeclarationsAccess().getLocatedVarDeclarationAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocatedVarDeclarations__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocatedVarDeclarations__Group__3__Impl
	rule__LocatedVarDeclarations__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LocatedVarDeclarations__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocatedVarDeclarationsAccess().getEOLTerminalRuleCall_3()); }
	RULE_EOL
{ after(grammarAccess.getLocatedVarDeclarationsAccess().getEOLTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocatedVarDeclarations__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocatedVarDeclarations__Group__4__Impl
	rule__LocatedVarDeclarations__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LocatedVarDeclarations__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocatedVarDeclarationsAccess().getGroup_4()); }
(rule__LocatedVarDeclarations__Group_4__0)*
{ after(grammarAccess.getLocatedVarDeclarationsAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocatedVarDeclarations__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocatedVarDeclarations__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocatedVarDeclarations__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocatedVarDeclarationsAccess().getEND_VARKeyword_5()); }

	'END_VAR' 

{ after(grammarAccess.getLocatedVarDeclarationsAccess().getEND_VARKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__LocatedVarDeclarations__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocatedVarDeclarations__Group_4__0__Impl
	rule__LocatedVarDeclarations__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocatedVarDeclarations__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocatedVarDeclarationsAccess().getLocatedVarDeclarationAssignment_4_0()); }
(rule__LocatedVarDeclarations__LocatedVarDeclarationAssignment_4_0)
{ after(grammarAccess.getLocatedVarDeclarationsAccess().getLocatedVarDeclarationAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocatedVarDeclarations__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocatedVarDeclarations__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocatedVarDeclarations__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocatedVarDeclarationsAccess().getEOLTerminalRuleCall_4_1()); }
	RULE_EOL
{ after(grammarAccess.getLocatedVarDeclarationsAccess().getEOLTerminalRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocatedVarDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocatedVarDeclaration__Group__0__Impl
	rule__LocatedVarDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocatedVarDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocatedVarDeclarationAccess().getNameAssignment_0()); }
(rule__LocatedVarDeclaration__NameAssignment_0)?
{ after(grammarAccess.getLocatedVarDeclarationAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocatedVarDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocatedVarDeclaration__Group__1__Impl
	rule__LocatedVarDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocatedVarDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocatedVarDeclarationAccess().getLocationAssignment_1()); }
(rule__LocatedVarDeclaration__LocationAssignment_1)
{ after(grammarAccess.getLocatedVarDeclarationAccess().getLocationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocatedVarDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocatedVarDeclaration__Group__2__Impl
	rule__LocatedVarDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocatedVarDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocatedVarDeclarationAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getLocatedVarDeclarationAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocatedVarDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocatedVarDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocatedVarDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocatedVarDeclarationAccess().getSpecInitAssignment_3()); }
(rule__LocatedVarDeclaration__SpecInitAssignment_3)
{ after(grammarAccess.getLocatedVarDeclarationAccess().getSpecInitAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Location__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group__0__Impl
	rule__Location__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getATKeyword_0()); }

	'AT' 

{ after(grammarAccess.getLocationAccess().getATKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Location__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getDirectVariableAssignment_1()); }
(rule__Location__DirectVariableAssignment_1)
{ after(grammarAccess.getLocationAccess().getDirectVariableAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProgramAccessDecls__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramAccessDecls__Group__0__Impl
	rule__ProgramAccessDecls__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramAccessDecls__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccessDeclsAccess().getVAR_ACCESSKeyword_0()); }

	'VAR_ACCESS' 

{ after(grammarAccess.getProgramAccessDeclsAccess().getVAR_ACCESSKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramAccessDecls__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramAccessDecls__Group__1__Impl
	rule__ProgramAccessDecls__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramAccessDecls__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccessDeclsAccess().getProgramAccessDeclAssignment_1()); }
(rule__ProgramAccessDecls__ProgramAccessDeclAssignment_1)
{ after(grammarAccess.getProgramAccessDeclsAccess().getProgramAccessDeclAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramAccessDecls__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramAccessDecls__Group__2__Impl
	rule__ProgramAccessDecls__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramAccessDecls__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccessDeclsAccess().getEOLTerminalRuleCall_2()); }
	RULE_EOL
{ after(grammarAccess.getProgramAccessDeclsAccess().getEOLTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramAccessDecls__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramAccessDecls__Group__3__Impl
	rule__ProgramAccessDecls__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramAccessDecls__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccessDeclsAccess().getGroup_3()); }
(rule__ProgramAccessDecls__Group_3__0)*
{ after(grammarAccess.getProgramAccessDeclsAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramAccessDecls__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramAccessDecls__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramAccessDecls__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccessDeclsAccess().getEND_VARKeyword_4()); }

	'END_VAR' 

{ after(grammarAccess.getProgramAccessDeclsAccess().getEND_VARKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ProgramAccessDecls__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramAccessDecls__Group_3__0__Impl
	rule__ProgramAccessDecls__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramAccessDecls__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccessDeclsAccess().getProgramAccessDeclAssignment_3_0()); }
(rule__ProgramAccessDecls__ProgramAccessDeclAssignment_3_0)
{ after(grammarAccess.getProgramAccessDeclsAccess().getProgramAccessDeclAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramAccessDecls__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramAccessDecls__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramAccessDecls__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccessDeclsAccess().getEOLTerminalRuleCall_3_1()); }
	RULE_EOL
{ after(grammarAccess.getProgramAccessDeclsAccess().getEOLTerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProgramAccessDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramAccessDecl__Group__0__Impl
	rule__ProgramAccessDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramAccessDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccessDeclAccess().getAccessNameAssignment_0()); }
(rule__ProgramAccessDecl__AccessNameAssignment_0)
{ after(grammarAccess.getProgramAccessDeclAccess().getAccessNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramAccessDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramAccessDecl__Group__1__Impl
	rule__ProgramAccessDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramAccessDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccessDeclAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getProgramAccessDeclAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramAccessDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramAccessDecl__Group__2__Impl
	rule__ProgramAccessDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramAccessDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccessDeclAccess().getSymbolicVariableAssignment_2()); }
(rule__ProgramAccessDecl__SymbolicVariableAssignment_2)
{ after(grammarAccess.getProgramAccessDeclAccess().getSymbolicVariableAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramAccessDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramAccessDecl__Group__3__Impl
	rule__ProgramAccessDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramAccessDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccessDeclAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getProgramAccessDeclAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramAccessDecl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramAccessDecl__Group__4__Impl
	rule__ProgramAccessDecl__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramAccessDecl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccessDeclAccess().getTypeNameAssignment_4()); }
(rule__ProgramAccessDecl__TypeNameAssignment_4)
{ after(grammarAccess.getProgramAccessDeclAccess().getTypeNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramAccessDecl__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramAccessDecl__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramAccessDecl__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccessDeclAccess().getDirectionAssignment_5()); }
(rule__ProgramAccessDecl__DirectionAssignment_5)?
{ after(grammarAccess.getProgramAccessDeclAccess().getDirectionAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ConfigurationDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfigurationDeclaration__Group__0__Impl
	rule__ConfigurationDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationDeclarationAccess().getCONFIGURATIONKeyword_0()); }

	'CONFIGURATION' 

{ after(grammarAccess.getConfigurationDeclarationAccess().getCONFIGURATIONKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfigurationDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfigurationDeclaration__Group__1__Impl
	rule__ConfigurationDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationDeclarationAccess().getNameAssignment_1()); }
(rule__ConfigurationDeclaration__NameAssignment_1)
{ after(grammarAccess.getConfigurationDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfigurationDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfigurationDeclaration__Group__2__Impl
	rule__ConfigurationDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationDeclarationAccess().getGlobalVarDeclarationsAssignment_2()); }
(rule__ConfigurationDeclaration__GlobalVarDeclarationsAssignment_2)?
{ after(grammarAccess.getConfigurationDeclarationAccess().getGlobalVarDeclarationsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfigurationDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfigurationDeclaration__Group__3__Impl
	rule__ConfigurationDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationDeclarationAccess().getResdeclAssignment_3()); }
(rule__ConfigurationDeclaration__ResdeclAssignment_3)
{ after(grammarAccess.getConfigurationDeclarationAccess().getResdeclAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfigurationDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfigurationDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationDeclarationAccess().getEND_CONFIGURATIONKeyword_4()); }

	'END_CONFIGURATION' 

{ after(grammarAccess.getConfigurationDeclarationAccess().getEND_CONFIGURATIONKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ResourceDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceDeclaration__Group__0__Impl
	rule__ResourceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceDeclarationAccess().getRESOURCEKeyword_0()); }

	'RESOURCE' 

{ after(grammarAccess.getResourceDeclarationAccess().getRESOURCEKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceDeclaration__Group__1__Impl
	rule__ResourceDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceDeclarationAccess().getNameAssignment_1()); }
(rule__ResourceDeclaration__NameAssignment_1)
{ after(grammarAccess.getResourceDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceDeclaration__Group__2__Impl
	rule__ResourceDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceDeclarationAccess().getONKeyword_2()); }

	'ON' 

{ after(grammarAccess.getResourceDeclarationAccess().getONKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceDeclaration__Group__3__Impl
	rule__ResourceDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceDeclarationAccess().getResnameAssignment_3()); }
(rule__ResourceDeclaration__ResnameAssignment_3)
{ after(grammarAccess.getResourceDeclarationAccess().getResnameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceDeclaration__Group__4__Impl
	rule__ResourceDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceDeclarationAccess().getGlobalVarDeclarationsAssignment_4()); }
(rule__ResourceDeclaration__GlobalVarDeclarationsAssignment_4)?
{ after(grammarAccess.getResourceDeclarationAccess().getGlobalVarDeclarationsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceDeclaration__Group__5__Impl
	rule__ResourceDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceDeclarationAccess().getSingleresourceAssignment_5()); }
(rule__ResourceDeclaration__SingleresourceAssignment_5)
{ after(grammarAccess.getResourceDeclarationAccess().getSingleresourceAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResourceDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceDeclarationAccess().getEND_RESOURCEKeyword_6()); }

	'END_RESOURCE' 

{ after(grammarAccess.getResourceDeclarationAccess().getEND_RESOURCEKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__SingleResourceDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleResourceDeclaration__Group__0__Impl
	rule__SingleResourceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleResourceDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleResourceDeclarationAccess().getGroup_0()); }
(rule__SingleResourceDeclaration__Group_0__0)?
{ after(grammarAccess.getSingleResourceDeclarationAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleResourceDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleResourceDeclaration__Group__1__Impl
	rule__SingleResourceDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleResourceDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleResourceDeclarationAccess().getGroup_1()); }
(rule__SingleResourceDeclaration__Group_1__0)
{ after(grammarAccess.getSingleResourceDeclarationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleResourceDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleResourceDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleResourceDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleResourceDeclarationAccess().getGroup_2()); }
(rule__SingleResourceDeclaration__Group_2__0)?
{ after(grammarAccess.getSingleResourceDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SingleResourceDeclaration__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleResourceDeclaration__Group_0__0__Impl
	rule__SingleResourceDeclaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleResourceDeclaration__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleResourceDeclarationAccess().getTaskConfAssignment_0_0()); }
(rule__SingleResourceDeclaration__TaskConfAssignment_0_0)
{ after(grammarAccess.getSingleResourceDeclarationAccess().getTaskConfAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleResourceDeclaration__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleResourceDeclaration__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleResourceDeclaration__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleResourceDeclarationAccess().getEOLTerminalRuleCall_0_1()); }
	RULE_EOL
{ after(grammarAccess.getSingleResourceDeclarationAccess().getEOLTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SingleResourceDeclaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleResourceDeclaration__Group_1__0__Impl
	rule__SingleResourceDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleResourceDeclaration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleResourceDeclarationAccess().getProgramConfAssignment_1_0()); }
(rule__SingleResourceDeclaration__ProgramConfAssignment_1_0)
{ after(grammarAccess.getSingleResourceDeclarationAccess().getProgramConfAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleResourceDeclaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleResourceDeclaration__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleResourceDeclaration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleResourceDeclarationAccess().getEOLTerminalRuleCall_1_1()); }
	RULE_EOL
{ after(grammarAccess.getSingleResourceDeclarationAccess().getEOLTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SingleResourceDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleResourceDeclaration__Group_2__0__Impl
	rule__SingleResourceDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleResourceDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleResourceDeclarationAccess().getProgramConfAssignment_2_0()); }
(rule__SingleResourceDeclaration__ProgramConfAssignment_2_0)
{ after(grammarAccess.getSingleResourceDeclarationAccess().getProgramConfAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleResourceDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleResourceDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleResourceDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleResourceDeclarationAccess().getEOLTerminalRuleCall_2_1()); }
	RULE_EOL
{ after(grammarAccess.getSingleResourceDeclarationAccess().getEOLTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProgramConfiguration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramConfiguration__Group__0__Impl
	rule__ProgramConfiguration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramConfigurationAccess().getPROGRAMKeyword_0()); }

	'PROGRAM' 

{ after(grammarAccess.getProgramConfigurationAccess().getPROGRAMKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramConfiguration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramConfiguration__Group__1__Impl
	rule__ProgramConfiguration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramConfigurationAccess().getAlternatives_1()); }
(rule__ProgramConfiguration__Alternatives_1)?
{ after(grammarAccess.getProgramConfigurationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramConfiguration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramConfiguration__Group__2__Impl
	rule__ProgramConfiguration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramConfigurationAccess().getNameAssignment_2()); }
(rule__ProgramConfiguration__NameAssignment_2)
{ after(grammarAccess.getProgramConfigurationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramConfiguration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramConfiguration__Group__3__Impl
	rule__ProgramConfiguration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramConfigurationAccess().getGroup_3()); }
(rule__ProgramConfiguration__Group_3__0)?
{ after(grammarAccess.getProgramConfigurationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramConfiguration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramConfiguration__Group__4__Impl
	rule__ProgramConfiguration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramConfigurationAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getProgramConfigurationAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramConfiguration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramConfiguration__Group__5__Impl
	rule__ProgramConfiguration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramConfigurationAccess().getProgAssignment_5()); }
(rule__ProgramConfiguration__ProgAssignment_5)
{ after(grammarAccess.getProgramConfigurationAccess().getProgAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramConfiguration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramConfiguration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramConfigurationAccess().getGroup_6()); }
(rule__ProgramConfiguration__Group_6__0)?
{ after(grammarAccess.getProgramConfigurationAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ProgramConfiguration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramConfiguration__Group_3__0__Impl
	rule__ProgramConfiguration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramConfigurationAccess().getWITHKeyword_3_0()); }

	'WITH' 

{ after(grammarAccess.getProgramConfigurationAccess().getWITHKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramConfiguration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramConfiguration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramConfigurationAccess().getTaskAssignment_3_1()); }
(rule__ProgramConfiguration__TaskAssignment_3_1)
{ after(grammarAccess.getProgramConfigurationAccess().getTaskAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProgramConfiguration__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramConfiguration__Group_6__0__Impl
	rule__ProgramConfiguration__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramConfigurationAccess().getLeftParenthesisKeyword_6_0()); }

	'(' 

{ after(grammarAccess.getProgramConfigurationAccess().getLeftParenthesisKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramConfiguration__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramConfiguration__Group_6__1__Impl
	rule__ProgramConfiguration__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramConfigurationAccess().getProgConfAssignment_6_1()); }
(rule__ProgramConfiguration__ProgConfAssignment_6_1)
{ after(grammarAccess.getProgramConfigurationAccess().getProgConfAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramConfiguration__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgramConfiguration__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramConfigurationAccess().getRightParenthesisKeyword_6_2()); }

	')' 

{ after(grammarAccess.getProgramConfigurationAccess().getRightParenthesisKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ProgConfElements__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgConfElements__Group__0__Impl
	rule__ProgConfElements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgConfElements__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgConfElementsAccess().getProgconfAssignment_0()); }
(rule__ProgConfElements__ProgconfAssignment_0)
{ after(grammarAccess.getProgConfElementsAccess().getProgconfAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgConfElements__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgConfElements__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgConfElements__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgConfElementsAccess().getGroup_1()); }
(rule__ProgConfElements__Group_1__0)*
{ after(grammarAccess.getProgConfElementsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProgConfElements__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgConfElements__Group_1__0__Impl
	rule__ProgConfElements__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgConfElements__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgConfElementsAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getProgConfElementsAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgConfElements__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgConfElements__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgConfElements__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgConfElementsAccess().getProgconfAssignment_1_1()); }
(rule__ProgConfElements__ProgconfAssignment_1_1)
{ after(grammarAccess.getProgConfElementsAccess().getProgconfAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FBTask__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FBTask__Group__0__Impl
	rule__FBTask__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FBTask__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFBTaskAccess().getFbnameAssignment_0()); }
(rule__FBTask__FbnameAssignment_0)
{ after(grammarAccess.getFBTaskAccess().getFbnameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FBTask__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FBTask__Group__1__Impl
	rule__FBTask__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FBTask__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFBTaskAccess().getWITHKeyword_1()); }

	'WITH' 

{ after(grammarAccess.getFBTaskAccess().getWITHKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FBTask__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FBTask__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FBTask__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFBTaskAccess().getTaskAssignment_2()); }
(rule__FBTask__TaskAssignment_2)
{ after(grammarAccess.getFBTaskAccess().getTaskAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ProgCNXN__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgCNXN__Group_0__0__Impl
	rule__ProgCNXN__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgCNXN__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgCNXNAccess().getVariablenameAssignment_0_0()); }
(rule__ProgCNXN__VariablenameAssignment_0_0)
{ after(grammarAccess.getProgCNXNAccess().getVariablenameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgCNXN__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgCNXN__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgCNXN__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgCNXNAccess().getGroup_0_1()); }
(rule__ProgCNXN__Group_0_1__0)
{ after(grammarAccess.getProgCNXNAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProgCNXN__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgCNXN__Group_0_1__0__Impl
	rule__ProgCNXN__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgCNXN__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgCNXNAccess().getColonEqualsSignKeyword_0_1_0()); }

	':=' 

{ after(grammarAccess.getProgCNXNAccess().getColonEqualsSignKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgCNXN__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgCNXN__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgCNXN__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgCNXNAccess().getProgdAssignment_0_1_1()); }
(rule__ProgCNXN__ProgdAssignment_0_1_1)
{ after(grammarAccess.getProgCNXNAccess().getProgdAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProgCNXN__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgCNXN__Group_1__0__Impl
	rule__ProgCNXN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgCNXN__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgCNXNAccess().getEqualsSignGreaterThanSignKeyword_1_0()); }

	'=>' 

{ after(grammarAccess.getProgCNXNAccess().getEqualsSignGreaterThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProgCNXN__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProgCNXN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgCNXN__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgCNXNAccess().getProgdAssignment_1_1()); }
(rule__ProgCNXN__ProgdAssignment_1_1)
{ after(grammarAccess.getProgCNXNAccess().getProgdAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GlobalVarDeclarations__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalVarDeclarations__Group__0__Impl
	rule__GlobalVarDeclarations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclarations__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarDeclarationsAccess().getVAR_GLOBALKeyword_0()); }

	'VAR_GLOBAL' 

{ after(grammarAccess.getGlobalVarDeclarationsAccess().getVAR_GLOBALKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalVarDeclarations__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalVarDeclarations__Group__1__Impl
	rule__GlobalVarDeclarations__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclarations__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarDeclarationsAccess().getAlternatives_1()); }
(rule__GlobalVarDeclarations__Alternatives_1)?
{ after(grammarAccess.getGlobalVarDeclarationsAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalVarDeclarations__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalVarDeclarations__Group__2__Impl
	rule__GlobalVarDeclarations__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclarations__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarDeclarationsAccess().getGlobalVarDeclAssignment_2()); }
(rule__GlobalVarDeclarations__GlobalVarDeclAssignment_2)
{ after(grammarAccess.getGlobalVarDeclarationsAccess().getGlobalVarDeclAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalVarDeclarations__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalVarDeclarations__Group__3__Impl
	rule__GlobalVarDeclarations__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclarations__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarDeclarationsAccess().getGlobalVarDeclAssignment_3()); }
(rule__GlobalVarDeclarations__GlobalVarDeclAssignment_3)*
{ after(grammarAccess.getGlobalVarDeclarationsAccess().getGlobalVarDeclAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalVarDeclarations__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalVarDeclarations__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclarations__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarDeclarationsAccess().getEND_VARKeyword_4()); }

	'END_VAR' 

{ after(grammarAccess.getGlobalVarDeclarationsAccess().getEND_VARKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__GlobalVarDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalVarDecl__Group__0__Impl
	rule__GlobalVarDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarDeclAccess().getSpecAssignment_0()); }
(rule__GlobalVarDecl__SpecAssignment_0)
{ after(grammarAccess.getGlobalVarDeclAccess().getSpecAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalVarDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalVarDecl__Group__1__Impl
	rule__GlobalVarDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarDeclAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getGlobalVarDeclAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalVarDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalVarDecl__Group__2__Impl
	rule__GlobalVarDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarDeclAccess().getSpecInitAssignment_2()); }
(rule__GlobalVarDecl__SpecInitAssignment_2)?
{ after(grammarAccess.getGlobalVarDeclAccess().getSpecInitAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalVarDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalVarDecl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarDeclAccess().getEOLTerminalRuleCall_3()); }
	RULE_EOL
{ after(grammarAccess.getGlobalVarDeclAccess().getEOLTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__GlobalVarSpec__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalVarSpec__Group_1__0__Impl
	rule__GlobalVarSpec__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarSpec__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarSpecAccess().getVariableAssignment_1_0()); }
(rule__GlobalVarSpec__VariableAssignment_1_0)?
{ after(grammarAccess.getGlobalVarSpecAccess().getVariableAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalVarSpec__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalVarSpec__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarSpec__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarSpecAccess().getLocationAssignment_1_1()); }
(rule__GlobalVarSpec__LocationAssignment_1_1)
{ after(grammarAccess.getGlobalVarSpecAccess().getLocationAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GlobalVarList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalVarList__Group__0__Impl
	rule__GlobalVarList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarListAccess().getVariablesAssignment_0()); }
(rule__GlobalVarList__VariablesAssignment_0)
{ after(grammarAccess.getGlobalVarListAccess().getVariablesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalVarList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalVarList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarListAccess().getGroup_1()); }
(rule__GlobalVarList__Group_1__0)*
{ after(grammarAccess.getGlobalVarListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GlobalVarList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalVarList__Group_1__0__Impl
	rule__GlobalVarList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getGlobalVarListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalVarList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalVarList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarListAccess().getVariablesAssignment_1_1()); }
(rule__GlobalVarList__VariablesAssignment_1_1)
{ after(grammarAccess.getGlobalVarListAccess().getVariablesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TaskConfiguration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskConfiguration__Group__0__Impl
	rule__TaskConfiguration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskConfiguration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskConfigurationAccess().getTASKKeyword_0()); }

	'TASK' 

{ after(grammarAccess.getTaskConfigurationAccess().getTASKKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskConfiguration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskConfiguration__Group__1__Impl
	rule__TaskConfiguration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskConfiguration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskConfigurationAccess().getNameAssignment_1()); }
(rule__TaskConfiguration__NameAssignment_1)
{ after(grammarAccess.getTaskConfigurationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskConfiguration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskConfiguration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskConfiguration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskConfigurationAccess().getTaskInitAssignment_2()); }
(rule__TaskConfiguration__TaskInitAssignment_2)
{ after(grammarAccess.getTaskConfigurationAccess().getTaskInitAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TaskInitialization__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskInitialization__Group__0__Impl
	rule__TaskInitialization__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskInitializationAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getTaskInitializationAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskInitialization__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskInitialization__Group__1__Impl
	rule__TaskInitialization__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskInitializationAccess().getGroup_1()); }
(rule__TaskInitialization__Group_1__0)?
{ after(grammarAccess.getTaskInitializationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskInitialization__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskInitialization__Group__2__Impl
	rule__TaskInitialization__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskInitializationAccess().getGroup_2()); }
(rule__TaskInitialization__Group_2__0)?
{ after(grammarAccess.getTaskInitializationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskInitialization__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskInitialization__Group__3__Impl
	rule__TaskInitialization__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskInitializationAccess().getPRIORITYKeyword_3()); }

	'PRIORITY' 

{ after(grammarAccess.getTaskInitializationAccess().getPRIORITYKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskInitialization__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskInitialization__Group__4__Impl
	rule__TaskInitialization__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskInitializationAccess().getColonEqualsSignKeyword_4()); }

	':=' 

{ after(grammarAccess.getTaskInitializationAccess().getColonEqualsSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskInitialization__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskInitialization__Group__5__Impl
	rule__TaskInitialization__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskInitializationAccess().getPriorAssignment_5()); }
(rule__TaskInitialization__PriorAssignment_5)
{ after(grammarAccess.getTaskInitializationAccess().getPriorAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskInitialization__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskInitialization__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskInitializationAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getTaskInitializationAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__TaskInitialization__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskInitialization__Group_1__0__Impl
	rule__TaskInitialization__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskInitializationAccess().getSINGLEKeyword_1_0()); }

	'SINGLE' 

{ after(grammarAccess.getTaskInitializationAccess().getSINGLEKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskInitialization__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskInitialization__Group_1__1__Impl
	rule__TaskInitialization__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskInitializationAccess().getColonEqualsSignKeyword_1_1()); }

	':=' 

{ after(grammarAccess.getTaskInitializationAccess().getColonEqualsSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskInitialization__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskInitialization__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskInitializationAccess().getSingleAssignment_1_2()); }
(rule__TaskInitialization__SingleAssignment_1_2)
{ after(grammarAccess.getTaskInitializationAccess().getSingleAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TaskInitialization__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskInitialization__Group_2__0__Impl
	rule__TaskInitialization__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskInitializationAccess().getINTERVALKeyword_2_0()); }

	'INTERVAL' 

{ after(grammarAccess.getTaskInitializationAccess().getINTERVALKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskInitialization__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskInitialization__Group_2__1__Impl
	rule__TaskInitialization__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskInitializationAccess().getColonEqualsSignKeyword_2_1()); }

	':=' 

{ after(grammarAccess.getTaskInitializationAccess().getColonEqualsSignKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskInitialization__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskInitialization__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskInitializationAccess().getIntervalAssignment_2_2()); }
(rule__TaskInitialization__IntervalAssignment_2_2)
{ after(grammarAccess.getTaskInitializationAccess().getIntervalAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IntegerLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerLiteral__Group__0__Impl
	rule__IntegerLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getGroup_0()); }
(rule__IntegerLiteral__Group_0__0)?
{ after(grammarAccess.getIntegerLiteralAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getValueAssignment_1()); }
(rule__IntegerLiteral__ValueAssignment_1)
{ after(grammarAccess.getIntegerLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IntegerLiteral__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerLiteral__Group_0__0__Impl
	rule__IntegerLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getTypeAssignment_0_0()); }
(rule__IntegerLiteral__TypeAssignment_0_0)
{ after(grammarAccess.getIntegerLiteralAccess().getTypeAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerLiteral__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerLiteral__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getNumberSignKeyword_0_1()); }

	'#' 

{ after(grammarAccess.getIntegerLiteralAccess().getNumberSignKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RealLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group__0__Impl
	rule__RealLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getGroup_0()); }
(rule__RealLiteral__Group_0__0)?
{ after(grammarAccess.getRealLiteralAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getValueAssignment_1()); }
(rule__RealLiteral__ValueAssignment_1)
{ after(grammarAccess.getRealLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RealLiteral__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group_0__0__Impl
	rule__RealLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getTypeAssignment_0_0()); }
(rule__RealLiteral__TypeAssignment_0_0)
{ after(grammarAccess.getRealLiteralAccess().getTypeAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealLiteral__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getNumberSignKeyword_0_1()); }

	'#' 

{ after(grammarAccess.getRealLiteralAccess().getNumberSignKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignedInteger__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedInteger__Group__0__Impl
	rule__SignedInteger__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInteger__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedIntegerAccess().getAlternatives_0()); }
(rule__SignedInteger__Alternatives_0)?
{ after(grammarAccess.getSignedIntegerAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignedInteger__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedInteger__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInteger__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedIntegerAccess().getIntegerParserRuleCall_1()); }
	ruleInteger
{ after(grammarAccess.getSignedIntegerAccess().getIntegerParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RealValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealValue__Group__0__Impl
	rule__RealValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealValueAccess().getAlternatives_0()); }
(rule__RealValue__Alternatives_0)?
{ after(grammarAccess.getRealValueAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealValue__Group__1__Impl
	rule__RealValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RealValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealValueAccess().getFIXED_POINTTerminalRuleCall_1()); }
	RULE_FIXED_POINT
{ after(grammarAccess.getRealValueAccess().getFIXED_POINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealValueAccess().getEXPONENTTerminalRuleCall_2()); }
(	RULE_EXPONENT)?
{ after(grammarAccess.getRealValueAccess().getEXPONENTTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BitString__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitString__Group__0__Impl
	rule__BitString__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitString__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStringAccess().getAlternatives_0()); }
(rule__BitString__Alternatives_0)
{ after(grammarAccess.getBitStringAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitString__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitString__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitString__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStringAccess().getValueAssignment_1()); }
(rule__BitString__ValueAssignment_1)
{ after(grammarAccess.getBitStringAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Boolean__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Boolean__Group__0__Impl
	rule__Boolean__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAccess().getBooleanAction_0()); }
(

)
{ after(grammarAccess.getBooleanAccess().getBooleanAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Boolean__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Boolean__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAccess().getAlternatives_1()); }
(rule__Boolean__Alternatives_1)
{ after(grammarAccess.getBooleanAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Boolean__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Boolean__Group_1_0__0__Impl
	rule__Boolean__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAccess().getBOOLKeyword_1_0_0()); }

	'BOOL#' 

{ after(grammarAccess.getBooleanAccess().getBOOLKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Boolean__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Boolean__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAccess().getBoolIntAssignment_1_0_1()); }
(rule__Boolean__BoolIntAssignment_1_0_1)
{ after(grammarAccess.getBooleanAccess().getBoolIntAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DurationLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DurationLiteral__Group__0__Impl
	rule__DurationLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DurationLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationLiteralAccess().getAlternatives_0()); }
(rule__DurationLiteral__Alternatives_0)
{ after(grammarAccess.getDurationLiteralAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DurationLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DurationLiteral__Group__1__Impl
	rule__DurationLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DurationLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationLiteralAccess().getHyphenMinusKeyword_1()); }
(
	'-' 
)?
{ after(grammarAccess.getDurationLiteralAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DurationLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DurationLiteral__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DurationLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationLiteralAccess().getAlternatives_2()); }
(rule__DurationLiteral__Alternatives_2)
{ after(grammarAccess.getDurationLiteralAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TimeOfDayLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeOfDayLiteral__Group__0__Impl
	rule__TimeOfDayLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeOfDayLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeOfDayLiteralAccess().getAlternatives_0()); }
(rule__TimeOfDayLiteral__Alternatives_0)
{ after(grammarAccess.getTimeOfDayLiteralAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeOfDayLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeOfDayLiteral__Group__1__Impl
	rule__TimeOfDayLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeOfDayLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeOfDayLiteralAccess().getHourAssignment_1()); }
(rule__TimeOfDayLiteral__HourAssignment_1)
{ after(grammarAccess.getTimeOfDayLiteralAccess().getHourAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeOfDayLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeOfDayLiteral__Group__2__Impl
	rule__TimeOfDayLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeOfDayLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeOfDayLiteralAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getTimeOfDayLiteralAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeOfDayLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeOfDayLiteral__Group__3__Impl
	rule__TimeOfDayLiteral__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeOfDayLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeOfDayLiteralAccess().getMinuteAssignment_3()); }
(rule__TimeOfDayLiteral__MinuteAssignment_3)
{ after(grammarAccess.getTimeOfDayLiteralAccess().getMinuteAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeOfDayLiteral__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeOfDayLiteral__Group__4__Impl
	rule__TimeOfDayLiteral__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeOfDayLiteral__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeOfDayLiteralAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getTimeOfDayLiteralAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeOfDayLiteral__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeOfDayLiteral__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeOfDayLiteral__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeOfDayLiteralAccess().getSecondAssignment_5()); }
(rule__TimeOfDayLiteral__SecondAssignment_5)
{ after(grammarAccess.getTimeOfDayLiteralAccess().getSecondAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DateLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateLiteral__Group__0__Impl
	rule__DateLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateLiteralAccess().getAlternatives_0()); }
(rule__DateLiteral__Alternatives_0)
{ after(grammarAccess.getDateLiteralAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateLiteral__Group__1__Impl
	rule__DateLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DateLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateLiteralAccess().getYearAssignment_1()); }
(rule__DateLiteral__YearAssignment_1)
{ after(grammarAccess.getDateLiteralAccess().getYearAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateLiteral__Group__2__Impl
	rule__DateLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DateLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateLiteralAccess().getHyphenMinusKeyword_2()); }

	'-' 

{ after(grammarAccess.getDateLiteralAccess().getHyphenMinusKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateLiteral__Group__3__Impl
	rule__DateLiteral__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DateLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateLiteralAccess().getMonthAssignment_3()); }
(rule__DateLiteral__MonthAssignment_3)
{ after(grammarAccess.getDateLiteralAccess().getMonthAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateLiteral__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateLiteral__Group__4__Impl
	rule__DateLiteral__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DateLiteral__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateLiteralAccess().getHyphenMinusKeyword_4()); }

	'-' 

{ after(grammarAccess.getDateLiteralAccess().getHyphenMinusKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateLiteral__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateLiteral__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateLiteral__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateLiteralAccess().getDayAssignment_5()); }
(rule__DateLiteral__DayAssignment_5)
{ after(grammarAccess.getDateLiteralAccess().getDayAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DateAndTimeLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateAndTimeLiteral__Group__0__Impl
	rule__DateAndTimeLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateAndTimeLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAndTimeLiteralAccess().getAlternatives_0()); }
(rule__DateAndTimeLiteral__Alternatives_0)
{ after(grammarAccess.getDateAndTimeLiteralAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateAndTimeLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateAndTimeLiteral__Group__1__Impl
	rule__DateAndTimeLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DateAndTimeLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAndTimeLiteralAccess().getYearAssignment_1()); }
(rule__DateAndTimeLiteral__YearAssignment_1)
{ after(grammarAccess.getDateAndTimeLiteralAccess().getYearAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateAndTimeLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateAndTimeLiteral__Group__2__Impl
	rule__DateAndTimeLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DateAndTimeLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAndTimeLiteralAccess().getHyphenMinusKeyword_2()); }

	'-' 

{ after(grammarAccess.getDateAndTimeLiteralAccess().getHyphenMinusKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateAndTimeLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateAndTimeLiteral__Group__3__Impl
	rule__DateAndTimeLiteral__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DateAndTimeLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAndTimeLiteralAccess().getMonthAssignment_3()); }
(rule__DateAndTimeLiteral__MonthAssignment_3)
{ after(grammarAccess.getDateAndTimeLiteralAccess().getMonthAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateAndTimeLiteral__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateAndTimeLiteral__Group__4__Impl
	rule__DateAndTimeLiteral__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DateAndTimeLiteral__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAndTimeLiteralAccess().getHyphenMinusKeyword_4()); }

	'-' 

{ after(grammarAccess.getDateAndTimeLiteralAccess().getHyphenMinusKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateAndTimeLiteral__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateAndTimeLiteral__Group__5__Impl
	rule__DateAndTimeLiteral__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DateAndTimeLiteral__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAndTimeLiteralAccess().getDayAssignment_5()); }
(rule__DateAndTimeLiteral__DayAssignment_5)
{ after(grammarAccess.getDateAndTimeLiteralAccess().getDayAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateAndTimeLiteral__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateAndTimeLiteral__Group__6__Impl
	rule__DateAndTimeLiteral__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DateAndTimeLiteral__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAndTimeLiteralAccess().getHyphenMinusKeyword_6()); }

	'-' 

{ after(grammarAccess.getDateAndTimeLiteralAccess().getHyphenMinusKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateAndTimeLiteral__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateAndTimeLiteral__Group__7__Impl
	rule__DateAndTimeLiteral__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DateAndTimeLiteral__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAndTimeLiteralAccess().getHourAssignment_7()); }
(rule__DateAndTimeLiteral__HourAssignment_7)
{ after(grammarAccess.getDateAndTimeLiteralAccess().getHourAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateAndTimeLiteral__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateAndTimeLiteral__Group__8__Impl
	rule__DateAndTimeLiteral__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__DateAndTimeLiteral__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAndTimeLiteralAccess().getColonKeyword_8()); }

	':' 

{ after(grammarAccess.getDateAndTimeLiteralAccess().getColonKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateAndTimeLiteral__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateAndTimeLiteral__Group__9__Impl
	rule__DateAndTimeLiteral__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__DateAndTimeLiteral__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAndTimeLiteralAccess().getMinuteAssignment_9()); }
(rule__DateAndTimeLiteral__MinuteAssignment_9)
{ after(grammarAccess.getDateAndTimeLiteralAccess().getMinuteAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateAndTimeLiteral__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateAndTimeLiteral__Group__10__Impl
	rule__DateAndTimeLiteral__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__DateAndTimeLiteral__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAndTimeLiteralAccess().getColonKeyword_10()); }

	':' 

{ after(grammarAccess.getDateAndTimeLiteralAccess().getColonKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateAndTimeLiteral__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateAndTimeLiteral__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateAndTimeLiteral__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAndTimeLiteralAccess().getSecondAssignment_11()); }
(rule__DateAndTimeLiteral__SecondAssignment_11)
{ after(grammarAccess.getDateAndTimeLiteralAccess().getSecondAssignment_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}



























rule__Model__ModelElementAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelElementModelElementParserRuleCall_0()); }
	ruleModelElement{ after(grammarAccess.getModelAccess().getModelElementModelElementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementaryType__TypeNameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementaryTypeAccess().getTypeNameWSTRINGKeyword_4_0()); }
(
{ before(grammarAccess.getElementaryTypeAccess().getTypeNameWSTRINGKeyword_4_0()); }

	'WSTRING' 

{ after(grammarAccess.getElementaryTypeAccess().getTypeNameWSTRINGKeyword_4_0()); }
)

{ after(grammarAccess.getElementaryTypeAccess().getTypeNameWSTRINGKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementaryType__TypeNameAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementaryTypeAccess().getTypeNameTIMEKeyword_5_0()); }
(
{ before(grammarAccess.getElementaryTypeAccess().getTypeNameTIMEKeyword_5_0()); }

	'TIME' 

{ after(grammarAccess.getElementaryTypeAccess().getTypeNameTIMEKeyword_5_0()); }
)

{ after(grammarAccess.getElementaryTypeAccess().getTypeNameTIMEKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignedIntegerType__TypeNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedIntegerTypeAccess().getTypeNameSINTKeyword_0_0()); }
(
{ before(grammarAccess.getSignedIntegerTypeAccess().getTypeNameSINTKeyword_0_0()); }

	'SINT' 

{ after(grammarAccess.getSignedIntegerTypeAccess().getTypeNameSINTKeyword_0_0()); }
)

{ after(grammarAccess.getSignedIntegerTypeAccess().getTypeNameSINTKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignedIntegerType__TypeNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedIntegerTypeAccess().getTypeNameDINTKeyword_1_0()); }
(
{ before(grammarAccess.getSignedIntegerTypeAccess().getTypeNameDINTKeyword_1_0()); }

	'DINT' 

{ after(grammarAccess.getSignedIntegerTypeAccess().getTypeNameDINTKeyword_1_0()); }
)

{ after(grammarAccess.getSignedIntegerTypeAccess().getTypeNameDINTKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignedIntegerType__TypeNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedIntegerTypeAccess().getTypeNameLINTKeyword_2_0()); }
(
{ before(grammarAccess.getSignedIntegerTypeAccess().getTypeNameLINTKeyword_2_0()); }

	'LINT' 

{ after(grammarAccess.getSignedIntegerTypeAccess().getTypeNameLINTKeyword_2_0()); }
)

{ after(grammarAccess.getSignedIntegerTypeAccess().getTypeNameLINTKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnsignedIntegerType__TypeNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameUSINTKeyword_0_0()); }
(
{ before(grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameUSINTKeyword_0_0()); }

	'USINT' 

{ after(grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameUSINTKeyword_0_0()); }
)

{ after(grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameUSINTKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnsignedIntegerType__TypeNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameUINTKeyword_1_0()); }
(
{ before(grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameUINTKeyword_1_0()); }

	'UINT' 

{ after(grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameUINTKeyword_1_0()); }
)

{ after(grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameUINTKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnsignedIntegerType__TypeNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameUDINTKeyword_2_0()); }
(
{ before(grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameUDINTKeyword_2_0()); }

	'UDINT' 

{ after(grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameUDINTKeyword_2_0()); }
)

{ after(grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameUDINTKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnsignedIntegerType__TypeNameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameULINTKeyword_3_0()); }
(
{ before(grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameULINTKeyword_3_0()); }

	'ULINT' 

{ after(grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameULINTKeyword_3_0()); }
)

{ after(grammarAccess.getUnsignedIntegerTypeAccess().getTypeNameULINTKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealType__TypeNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTypeAccess().getTypeNameREALKeyword_0_0()); }
(
{ before(grammarAccess.getRealTypeAccess().getTypeNameREALKeyword_0_0()); }

	'REAL' 

{ after(grammarAccess.getRealTypeAccess().getTypeNameREALKeyword_0_0()); }
)

{ after(grammarAccess.getRealTypeAccess().getTypeNameREALKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealType__TypeNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTypeAccess().getTypeNameLREALKeyword_1_0()); }
(
{ before(grammarAccess.getRealTypeAccess().getTypeNameLREALKeyword_1_0()); }

	'LREAL' 

{ after(grammarAccess.getRealTypeAccess().getTypeNameLREALKeyword_1_0()); }
)

{ after(grammarAccess.getRealTypeAccess().getTypeNameLREALKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateType__TypeNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateTypeAccess().getTypeNameDATEKeyword_0_0()); }
(
{ before(grammarAccess.getDateTypeAccess().getTypeNameDATEKeyword_0_0()); }

	'DATE' 

{ after(grammarAccess.getDateTypeAccess().getTypeNameDATEKeyword_0_0()); }
)

{ after(grammarAccess.getDateTypeAccess().getTypeNameDATEKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateType__TypeNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateTypeAccess().getTypeNameTIME_OF_DAYKeyword_1_0()); }
(
{ before(grammarAccess.getDateTypeAccess().getTypeNameTIME_OF_DAYKeyword_1_0()); }

	'TIME_OF_DAY' 

{ after(grammarAccess.getDateTypeAccess().getTypeNameTIME_OF_DAYKeyword_1_0()); }
)

{ after(grammarAccess.getDateTypeAccess().getTypeNameTIME_OF_DAYKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateType__TypeNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateTypeAccess().getTypeNameTODKeyword_2_0()); }
(
{ before(grammarAccess.getDateTypeAccess().getTypeNameTODKeyword_2_0()); }

	'TOD' 

{ after(grammarAccess.getDateTypeAccess().getTypeNameTODKeyword_2_0()); }
)

{ after(grammarAccess.getDateTypeAccess().getTypeNameTODKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateType__TypeNameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateTypeAccess().getTypeNameDATE_AND_TIMEKeyword_3_0()); }
(
{ before(grammarAccess.getDateTypeAccess().getTypeNameDATE_AND_TIMEKeyword_3_0()); }

	'DATE_AND_TIME' 

{ after(grammarAccess.getDateTypeAccess().getTypeNameDATE_AND_TIMEKeyword_3_0()); }
)

{ after(grammarAccess.getDateTypeAccess().getTypeNameDATE_AND_TIMEKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateType__TypeNameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateTypeAccess().getTypeNameDTKeyword_4_0()); }
(
{ before(grammarAccess.getDateTypeAccess().getTypeNameDTKeyword_4_0()); }

	'DT' 

{ after(grammarAccess.getDateTypeAccess().getTypeNameDTKeyword_4_0()); }
)

{ after(grammarAccess.getDateTypeAccess().getTypeNameDTKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitStringType__TypeNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStringTypeAccess().getTypeNameBOOLKeyword_0_0()); }
(
{ before(grammarAccess.getBitStringTypeAccess().getTypeNameBOOLKeyword_0_0()); }

	'BOOL' 

{ after(grammarAccess.getBitStringTypeAccess().getTypeNameBOOLKeyword_0_0()); }
)

{ after(grammarAccess.getBitStringTypeAccess().getTypeNameBOOLKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitStringType__TypeNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStringTypeAccess().getTypeNameBYTEKeyword_1_0()); }
(
{ before(grammarAccess.getBitStringTypeAccess().getTypeNameBYTEKeyword_1_0()); }

	'BYTE' 

{ after(grammarAccess.getBitStringTypeAccess().getTypeNameBYTEKeyword_1_0()); }
)

{ after(grammarAccess.getBitStringTypeAccess().getTypeNameBYTEKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitStringType__TypeNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStringTypeAccess().getTypeNameWORDKeyword_2_0()); }
(
{ before(grammarAccess.getBitStringTypeAccess().getTypeNameWORDKeyword_2_0()); }

	'WORD' 

{ after(grammarAccess.getBitStringTypeAccess().getTypeNameWORDKeyword_2_0()); }
)

{ after(grammarAccess.getBitStringTypeAccess().getTypeNameWORDKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitStringType__TypeNameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStringTypeAccess().getTypeNameDWORDKeyword_3_0()); }
(
{ before(grammarAccess.getBitStringTypeAccess().getTypeNameDWORDKeyword_3_0()); }

	'DWORD' 

{ after(grammarAccess.getBitStringTypeAccess().getTypeNameDWORDKeyword_3_0()); }
)

{ after(grammarAccess.getBitStringTypeAccess().getTypeNameDWORDKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitStringType__TypeNameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStringTypeAccess().getTypeNameLWORDKeyword_4_0()); }
(
{ before(grammarAccess.getBitStringTypeAccess().getTypeNameLWORDKeyword_4_0()); }

	'LWORD' 

{ after(grammarAccess.getBitStringTypeAccess().getTypeNameLWORDKeyword_4_0()); }
)

{ after(grammarAccess.getBitStringTypeAccess().getTypeNameLWORDKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericType__TypeNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameANYKeyword_0_0()); }
(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameANYKeyword_0_0()); }

	'ANY' 

{ after(grammarAccess.getGenericTypeAccess().getTypeNameANYKeyword_0_0()); }
)

{ after(grammarAccess.getGenericTypeAccess().getTypeNameANYKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericType__TypeNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameANY_DERIVEDKeyword_1_0()); }
(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameANY_DERIVEDKeyword_1_0()); }

	'ANY_DERIVED' 

{ after(grammarAccess.getGenericTypeAccess().getTypeNameANY_DERIVEDKeyword_1_0()); }
)

{ after(grammarAccess.getGenericTypeAccess().getTypeNameANY_DERIVEDKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericType__TypeNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameANY_ELEMENTARYKeyword_2_0()); }
(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameANY_ELEMENTARYKeyword_2_0()); }

	'ANY_ELEMENTARY' 

{ after(grammarAccess.getGenericTypeAccess().getTypeNameANY_ELEMENTARYKeyword_2_0()); }
)

{ after(grammarAccess.getGenericTypeAccess().getTypeNameANY_ELEMENTARYKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericType__TypeNameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameANY_MAGNITUDEKeyword_3_0()); }
(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameANY_MAGNITUDEKeyword_3_0()); }

	'ANY_MAGNITUDE' 

{ after(grammarAccess.getGenericTypeAccess().getTypeNameANY_MAGNITUDEKeyword_3_0()); }
)

{ after(grammarAccess.getGenericTypeAccess().getTypeNameANY_MAGNITUDEKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericType__TypeNameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameANY_NUMKeyword_4_0()); }
(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameANY_NUMKeyword_4_0()); }

	'ANY_NUM' 

{ after(grammarAccess.getGenericTypeAccess().getTypeNameANY_NUMKeyword_4_0()); }
)

{ after(grammarAccess.getGenericTypeAccess().getTypeNameANY_NUMKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericType__TypeNameAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameANY_REALKeyword_5_0()); }
(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameANY_REALKeyword_5_0()); }

	'ANY_REAL' 

{ after(grammarAccess.getGenericTypeAccess().getTypeNameANY_REALKeyword_5_0()); }
)

{ after(grammarAccess.getGenericTypeAccess().getTypeNameANY_REALKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericType__TypeNameAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameANY_INTKeyword_6_0()); }
(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameANY_INTKeyword_6_0()); }

	'ANY_INT' 

{ after(grammarAccess.getGenericTypeAccess().getTypeNameANY_INTKeyword_6_0()); }
)

{ after(grammarAccess.getGenericTypeAccess().getTypeNameANY_INTKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericType__TypeNameAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameANY_BITKeyword_7_0()); }
(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameANY_BITKeyword_7_0()); }

	'ANY_BIT' 

{ after(grammarAccess.getGenericTypeAccess().getTypeNameANY_BITKeyword_7_0()); }
)

{ after(grammarAccess.getGenericTypeAccess().getTypeNameANY_BITKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericType__TypeNameAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameANY_STRINGKeyword_8_0()); }
(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameANY_STRINGKeyword_8_0()); }

	'ANY_STRING' 

{ after(grammarAccess.getGenericTypeAccess().getTypeNameANY_STRINGKeyword_8_0()); }
)

{ after(grammarAccess.getGenericTypeAccess().getTypeNameANY_STRINGKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericType__TypeNameAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameANY_DATEKeyword_9_0()); }
(
{ before(grammarAccess.getGenericTypeAccess().getTypeNameANY_DATEKeyword_9_0()); }

	'ANY_DATE' 

{ after(grammarAccess.getGenericTypeAccess().getTypeNameANY_DATEKeyword_9_0()); }
)

{ after(grammarAccess.getGenericTypeAccess().getTypeNameANY_DATEKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedType__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDerivedTypeAccess().getNameIdentifierParserRuleCall_0()); }
	ruleIdentifier{ after(grammarAccess.getDerivedTypeAccess().getNameIdentifierParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); }
	ruleIdentifier{ after(grammarAccess.getDataTypeDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__TypeDeclarationAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getTypeDeclarationTypeDeclarationParserRuleCall_3_0()); }
	ruleTypeDeclaration{ after(grammarAccess.getDataTypeDeclarationAccess().getTypeDeclarationTypeDeclarationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__TypeDeclarationAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getTypeDeclarationTypeDeclarationParserRuleCall_5_0_0()); }
	ruleTypeDeclaration{ after(grammarAccess.getDataTypeDeclarationAccess().getTypeDeclarationTypeDeclarationParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTypeDeclaration__DerivedTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeDeclarationAccess().getDerivedTypeDerivedTypeParserRuleCall_0_0()); }
	ruleDerivedType{ after(grammarAccess.getSimpleTypeDeclarationAccess().getDerivedTypeDerivedTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTypeDeclaration__SpecInitAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeDeclarationAccess().getSpecInitSpecInitParserRuleCall_2_0()); }
	ruleSpecInit{ after(grammarAccess.getSimpleTypeDeclarationAccess().getSpecInitSpecInitParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecInit__BaseTypeAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecInitAccess().getBaseTypeElementaryTypeParserRuleCall_0_0_0()); }
	ruleElementaryType{ after(grammarAccess.getSpecInitAccess().getBaseTypeElementaryTypeParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecInit__BaseTypeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecInitAccess().getBaseTypeDerivedTypeParserRuleCall_0_1_0()); }
	ruleDerivedType{ after(grammarAccess.getSpecInitAccess().getBaseTypeDerivedTypeParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecInit__ConstantAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecInitAccess().getConstantConstantParserRuleCall_1_1_0_0()); }
	ruleConstant{ after(grammarAccess.getSpecInitAccess().getConstantConstantParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecInit__ConstantAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecInitAccess().getConstantEnumeratedValueParserRuleCall_1_1_1_0()); }
	ruleEnumeratedValue{ after(grammarAccess.getSpecInitAccess().getConstantEnumeratedValueParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecInit__ConstantAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecInitAccess().getConstantArrayInitializationParserRuleCall_1_1_2_0()); }
	ruleArrayInitialization{ after(grammarAccess.getSpecInitAccess().getConstantArrayInitializationParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDeclaration__DerivedTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeDeclarationAccess().getDerivedTypeDerivedTypeParserRuleCall_0_0()); }
	ruleDerivedType{ after(grammarAccess.getRangeDeclarationAccess().getDerivedTypeDerivedTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDeclaration__BaseTypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeDeclarationAccess().getBaseTypeElementaryTypeParserRuleCall_2_0()); }
	ruleElementaryType{ after(grammarAccess.getRangeDeclarationAccess().getBaseTypeElementaryTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDeclaration__RangeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeDeclarationAccess().getRangeSubRangeWithSignParserRuleCall_3_1_0()); }
	ruleSubRangeWithSign{ after(grammarAccess.getRangeDeclarationAccess().getRangeSubRangeWithSignParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDeclaration__ConstantAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeDeclarationAccess().getConstantSignedIntegerParserRuleCall_4_1_0()); }
	ruleSignedInteger{ after(grammarAccess.getRangeDeclarationAccess().getConstantSignedIntegerParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__DerivedTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getDerivedTypeDerivedTypeParserRuleCall_0_0()); }
	ruleDerivedType{ after(grammarAccess.getEnumDeclarationAccess().getDerivedTypeDerivedTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__EnumerationAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getEnumerationEnumerationParserRuleCall_3_0()); }
	ruleEnumeration{ after(grammarAccess.getEnumDeclarationAccess().getEnumerationEnumerationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__ConstantAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getConstantEnumeratedValueParserRuleCall_5_1_0()); }
	ruleEnumeratedValue{ after(grammarAccess.getEnumDeclarationAccess().getConstantEnumeratedValueParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__DerivedTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayDeclarationAccess().getDerivedTypeDerivedTypeParserRuleCall_0_0()); }
	ruleDerivedType{ after(grammarAccess.getArrayDeclarationAccess().getDerivedTypeDerivedTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__RangesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayDeclarationAccess().getRangesSubRangeWithSignParserRuleCall_4_0()); }
	ruleSubRangeWithSign{ after(grammarAccess.getArrayDeclarationAccess().getRangesSubRangeWithSignParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__RangesAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayDeclarationAccess().getRangesSubRangeWithSignParserRuleCall_5_1_0()); }
	ruleSubRangeWithSign{ after(grammarAccess.getArrayDeclarationAccess().getRangesSubRangeWithSignParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__BaseTypeAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayDeclarationAccess().getBaseTypeNonGenericTypeParserRuleCall_8_0()); }
	ruleNonGenericType{ after(grammarAccess.getArrayDeclarationAccess().getBaseTypeNonGenericTypeParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__ConstantAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayDeclarationAccess().getConstantArrayInitializationParserRuleCall_9_1_0()); }
	ruleArrayInitialization{ after(grammarAccess.getArrayDeclarationAccess().getConstantArrayInitializationParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__ValuesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationAccess().getValuesEnumeratedValueParserRuleCall_0_0()); }
	ruleEnumeratedValue{ after(grammarAccess.getEnumerationAccess().getValuesEnumeratedValueParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__ValuesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationAccess().getValuesEnumeratedValueParserRuleCall_1_1_0()); }
	ruleEnumeratedValue{ after(grammarAccess.getEnumerationAccess().getValuesEnumeratedValueParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedValue__DerivedTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedValueAccess().getDerivedTypeDerivedTypeParserRuleCall_0_0()); }
	ruleDerivedType{ after(grammarAccess.getEnumeratedValueAccess().getDerivedTypeDerivedTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedValue__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeratedValueAccess().getNameIdentifierParserRuleCall_2_0()); }
	ruleIdentifier{ after(grammarAccess.getEnumeratedValueAccess().getNameIdentifierParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialization__InitialElementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitializationAccess().getInitialElementsArrayInitialElementsParserRuleCall_1_0()); }
	ruleArrayInitialElements{ after(grammarAccess.getArrayInitializationAccess().getInitialElementsArrayInitialElementsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialization__InitialElementsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitializationAccess().getInitialElementsArrayInitialElementsParserRuleCall_2_1_0()); }
	ruleArrayInitialElements{ after(grammarAccess.getArrayInitializationAccess().getInitialElementsArrayInitialElementsParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialElements__InitialElementAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitialElementsAccess().getInitialElementInitialElementParserRuleCall_0_0()); }
	ruleInitialElement{ after(grammarAccess.getArrayInitialElementsAccess().getInitialElementInitialElementParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialElements__IndexAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitialElementsAccess().getIndexIntegerParserRuleCall_1_0_0()); }
	ruleInteger{ after(grammarAccess.getArrayInitialElementsAccess().getIndexIntegerParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialElements__InitialElementAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayInitialElementsAccess().getInitialElementInitialElementParserRuleCall_1_2_0()); }
	ruleInitialElement{ after(grammarAccess.getArrayInitialElementsAccess().getInitialElementInitialElementParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructureTypeDeclaration__DerivedTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureTypeDeclarationAccess().getDerivedTypeDerivedTypeParserRuleCall_0_0()); }
	ruleDerivedType{ after(grammarAccess.getStructureTypeDeclarationAccess().getDerivedTypeDerivedTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructureTypeDeclaration__DeclarationAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureTypeDeclarationAccess().getDeclarationStructureDeclarationParserRuleCall_2_0_0()); }
	ruleStructureDeclaration{ after(grammarAccess.getStructureTypeDeclarationAccess().getDeclarationStructureDeclarationParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructureTypeDeclaration__InitializationAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureTypeDeclarationAccess().getInitializationInitializedStructureParserRuleCall_2_1_0()); }
	ruleInitializedStructure{ after(grammarAccess.getStructureTypeDeclarationAccess().getInitializationInitializedStructureParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructureDeclaration__StructureElementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureDeclarationAccess().getStructureElementStructureElementDeclarationParserRuleCall_1_0()); }
	ruleStructureElementDeclaration{ after(grammarAccess.getStructureDeclarationAccess().getStructureElementStructureElementDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructureDeclaration__StructureElementAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureDeclarationAccess().getStructureElementStructureElementDeclarationParserRuleCall_3_0_0()); }
	ruleStructureElementDeclaration{ after(grammarAccess.getStructureDeclarationAccess().getStructureElementStructureElementDeclarationParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructureElementDeclaration__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureElementDeclarationAccess().getNameIdentifierParserRuleCall_0_0()); }
	ruleIdentifier{ after(grammarAccess.getStructureElementDeclarationAccess().getNameIdentifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructureElementDeclaration__SpecInitAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureElementDeclarationAccess().getSpecInitSpecInitParserRuleCall_2_0()); }
	ruleSpecInit{ after(grammarAccess.getStructureElementDeclarationAccess().getSpecInitSpecInitParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitializedStructure__DerivedTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitializedStructureAccess().getDerivedTypeDerivedTypeParserRuleCall_0_0()); }
	ruleDerivedType{ after(grammarAccess.getInitializedStructureAccess().getDerivedTypeDerivedTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitializedStructure__InitializationAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitializedStructureAccess().getInitializationStructureInitializationParserRuleCall_2_0()); }
	ruleStructureInitialization{ after(grammarAccess.getInitializedStructureAccess().getInitializationStructureInitializationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructureInitialization__InitialElementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureInitializationAccess().getInitialElementsStructureElementInitializationParserRuleCall_1_0()); }
	ruleStructureElementInitialization{ after(grammarAccess.getStructureInitializationAccess().getInitialElementsStructureElementInitializationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructureInitialization__InitialElementsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureInitializationAccess().getInitialElementsStructureElementInitializationParserRuleCall_2_1_0()); }
	ruleStructureElementInitialization{ after(grammarAccess.getStructureInitializationAccess().getInitialElementsStructureElementInitializationParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructureElementInitialization__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureElementInitializationAccess().getNameIdentifierParserRuleCall_0_0()); }
	ruleIdentifier{ after(grammarAccess.getStructureElementInitializationAccess().getNameIdentifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructureElementInitialization__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureElementInitializationAccess().getValueInitialElementParserRuleCall_2_0()); }
	ruleInitialElement{ after(grammarAccess.getStructureElementInitializationAccess().getValueInitialElementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringDeclaration__DerivedTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDeclarationAccess().getDerivedTypeDerivedTypeParserRuleCall_0_0()); }
	ruleDerivedType{ after(grammarAccess.getStringDeclarationAccess().getDerivedTypeDerivedTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringDeclaration__StringAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDeclarationAccess().getStringSTRINGKeyword_2_0_0()); }
(
{ before(grammarAccess.getStringDeclarationAccess().getStringSTRINGKeyword_2_0_0()); }

	'STRING' 

{ after(grammarAccess.getStringDeclarationAccess().getStringSTRINGKeyword_2_0_0()); }
)

{ after(grammarAccess.getStringDeclarationAccess().getStringSTRINGKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringDeclaration__SizeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDeclarationAccess().getSizeIntegerParserRuleCall_3_1_0()); }
	ruleInteger{ after(grammarAccess.getStringDeclarationAccess().getSizeIntegerParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringDeclaration__InitialValueAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDeclarationAccess().getInitialValueCharacterStringParserRuleCall_4_1_0()); }
	ruleCharacterString{ after(grammarAccess.getStringDeclarationAccess().getInitialValueCharacterStringParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameIdentifierParserRuleCall_0()); }
	ruleIdentifier{ after(grammarAccess.getVariableAccess().getNameIdentifierParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirectVariable__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectVariableAccess().getNameDIRECT_VARIABLE_IDTerminalRuleCall_0()); }
	RULE_DIRECT_VARIABLE_ID{ after(grammarAccess.getDirectVariableAccess().getNameDIRECT_VARIABLE_IDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedVariableAccess__NamedVariableAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedVariableAccessAccess().getNamedVariableVariableCrossReference_0()); }
(
{ before(grammarAccess.getNamedVariableAccessAccess().getNamedVariableVariableIdentifierParserRuleCall_0_1()); }
	ruleIdentifier{ after(grammarAccess.getNamedVariableAccessAccess().getNamedVariableVariableIdentifierParserRuleCall_0_1()); }
)
{ after(grammarAccess.getNamedVariableAccessAccess().getNamedVariableVariableCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__SubscriptedVariableAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayVariableAccess().getSubscriptedVariableVariableCrossReference_0_0()); }
(
{ before(grammarAccess.getArrayVariableAccess().getSubscriptedVariableVariableIdentifierParserRuleCall_0_0_1()); }
	ruleIdentifier{ after(grammarAccess.getArrayVariableAccess().getSubscriptedVariableVariableIdentifierParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getArrayVariableAccess().getSubscriptedVariableVariableCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__SubscriptsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayVariableAccess().getSubscriptsExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getArrayVariableAccess().getSubscriptsExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__SubscriptsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayVariableAccess().getSubscriptsExpressionParserRuleCall_3_1_0()); }
	ruleExpression{ after(grammarAccess.getArrayVariableAccess().getSubscriptsExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredVariable__RecordVariableAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuredVariableAccess().getRecordVariableVariableCrossReference_0_0()); }
(
{ before(grammarAccess.getStructuredVariableAccess().getRecordVariableVariableIdentifierParserRuleCall_0_0_1()); }
	ruleIdentifier{ after(grammarAccess.getStructuredVariableAccess().getRecordVariableVariableIdentifierParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getStructuredVariableAccess().getRecordVariableVariableCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredVariable__FieldSelectorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuredVariableAccess().getFieldSelectorFIELD_SELECTORTerminalRuleCall_1_0()); }
	RULE_FIELD_SELECTOR{ after(grammarAccess.getStructuredVariableAccess().getFieldSelectorFIELD_SELECTORTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOperatorORKeyword_1_1_0()); }
(
{ before(grammarAccess.getOrExpressionAccess().getOperatorORKeyword_1_1_0()); }

	'OR' 

{ after(grammarAccess.getOrExpressionAccess().getOperatorORKeyword_1_1_0()); }
)

{ after(grammarAccess.getOrExpressionAccess().getOperatorORKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getRightXorExpressionParserRuleCall_1_2_0()); }
	ruleXorExpression{ after(grammarAccess.getOrExpressionAccess().getRightXorExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExpressionAccess().getOperatorXORKeyword_1_1_0()); }
(
{ before(grammarAccess.getXorExpressionAccess().getOperatorXORKeyword_1_1_0()); }

	'XOR' 

{ after(grammarAccess.getXorExpressionAccess().getOperatorXORKeyword_1_1_0()); }
)

{ after(grammarAccess.getXorExpressionAccess().getOperatorXORKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
	ruleAndExpression{ after(grammarAccess.getXorExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOperatorAlternatives_1_1_0()); }
(rule__AndExpression__OperatorAlternatives_1_1_0)
{ after(grammarAccess.getAndExpressionAccess().getOperatorAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRightComparisonParserRuleCall_1_2_0()); }
	ruleComparison{ after(grammarAccess.getAndExpressionAccess().getRightComparisonParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getOperatorAlternatives_1_1_0()); }
(rule__Comparison__OperatorAlternatives_1_1_0)
{ after(grammarAccess.getComparisonAccess().getOperatorAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getRightAddExpressionParserRuleCall_1_2_0()); }
	ruleAddExpression{ after(grammarAccess.getComparisonAccess().getRightAddExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getOperatorAlternatives_1_1_0()); }
(rule__AddExpression__OperatorAlternatives_1_1_0)
{ after(grammarAccess.getAddExpressionAccess().getOperatorAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getRightTermParserRuleCall_1_2_0()); }
	ruleTerm{ after(grammarAccess.getAddExpressionAccess().getRightTermParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getOperatorAlternatives_1_1_0()); }
(rule__Term__OperatorAlternatives_1_1_0)
{ after(grammarAccess.getTermAccess().getOperatorAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getRightPowerExpressionParserRuleCall_1_2_0()); }
	rulePowerExpression{ after(grammarAccess.getTermAccess().getRightPowerExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerExpressionAccess().getOperatorAsteriskAsteriskKeyword_1_1_0()); }
(
{ before(grammarAccess.getPowerExpressionAccess().getOperatorAsteriskAsteriskKeyword_1_1_0()); }

	'**' 

{ after(grammarAccess.getPowerExpressionAccess().getOperatorAsteriskAsteriskKeyword_1_1_0()); }
)

{ after(grammarAccess.getPowerExpressionAccess().getOperatorAsteriskAsteriskKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerExpressionAccess().getRightUnaryExpressionParserRuleCall_1_2_0()); }
	ruleUnaryExpression{ after(grammarAccess.getPowerExpressionAccess().getRightUnaryExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OperatorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getOperatorAlternatives_0_1_0()); }
(rule__UnaryExpression__OperatorAlternatives_0_1_0)
{ after(grammarAccess.getUnaryExpressionAccess().getOperatorAlternatives_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__ExpressionAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExpressionUnaryExpressionParserRuleCall_0_2_0()); }
	ruleUnaryExpression{ after(grammarAccess.getUnaryExpressionAccess().getExpressionUnaryExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__VariableAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getVariableVariableAccessParserRuleCall_1_0()); }
	ruleVariableAccess{ after(grammarAccess.getPrimaryExpressionAccess().getVariableVariableAccessParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__FbnameAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getFbnameFunctionDeclarationCrossReference_3_0_0()); }
(
{ before(grammarAccess.getPrimaryExpressionAccess().getFbnameFunctionDeclarationIdentifierParserRuleCall_3_0_0_1()); }
	ruleIdentifier{ after(grammarAccess.getPrimaryExpressionAccess().getFbnameFunctionDeclarationIdentifierParserRuleCall_3_0_0_1()); }
)
{ after(grammarAccess.getPrimaryExpressionAccess().getFbnameFunctionDeclarationCrossReference_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__OpenbrAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getOpenbrLeftParenthesisKeyword_3_1_0()); }
(
{ before(grammarAccess.getPrimaryExpressionAccess().getOpenbrLeftParenthesisKeyword_3_1_0()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getOpenbrLeftParenthesisKeyword_3_1_0()); }
)

{ after(grammarAccess.getPrimaryExpressionAccess().getOpenbrLeftParenthesisKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ParamassignmentAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getParamassignmentParamAssignmentParserRuleCall_3_2_0()); }
	ruleParamAssignment{ after(grammarAccess.getPrimaryExpressionAccess().getParamassignmentParamAssignmentParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ParamassignmentAssignment_3_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getParamassignmentParamAssignmentParserRuleCall_3_3_1_0()); }
	ruleParamAssignment{ after(grammarAccess.getPrimaryExpressionAccess().getParamassignmentParamAssignmentParserRuleCall_3_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ClosebrAssignment_3_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getClosebrRightParenthesisKeyword_3_4_0()); }
(
{ before(grammarAccess.getPrimaryExpressionAccess().getClosebrRightParenthesisKeyword_3_4_0()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getClosebrRightParenthesisKeyword_3_4_0()); }
)

{ after(grammarAccess.getPrimaryExpressionAccess().getClosebrRightParenthesisKeyword_3_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesesExpression__OpenbrAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesesExpressionAccess().getOpenbrLeftParenthesisKeyword_0_0()); }
(
{ before(grammarAccess.getParenthesesExpressionAccess().getOpenbrLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getParenthesesExpressionAccess().getOpenbrLeftParenthesisKeyword_0_0()); }
)

{ after(grammarAccess.getParenthesesExpressionAccess().getOpenbrLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesesExpression__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesesExpressionAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getParenthesesExpressionAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesesExpression__ClosebrAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesesExpressionAccess().getClosebrRightParenthesisKeyword_2_0()); }
(
{ before(grammarAccess.getParenthesesExpressionAccess().getClosebrRightParenthesisKeyword_2_0()); }

	')' 

{ after(grammarAccess.getParenthesesExpressionAccess().getClosebrRightParenthesisKeyword_2_0()); }
)

{ after(grammarAccess.getParenthesesExpressionAccess().getClosebrRightParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__VariablenameAssignment_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAssignmentAccess().getVariablenameNamedVariableAccessCrossReference_0_0_0_0()); }
(
{ before(grammarAccess.getParamAssignmentAccess().getVariablenameNamedVariableAccessIdentifierParserRuleCall_0_0_0_0_1()); }
	ruleIdentifier{ after(grammarAccess.getParamAssignmentAccess().getVariablenameNamedVariableAccessIdentifierParserRuleCall_0_0_0_0_1()); }
)
{ after(grammarAccess.getParamAssignmentAccess().getVariablenameNamedVariableAccessCrossReference_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__ExpressionAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAssignmentAccess().getExpressionExpressionParserRuleCall_0_1_0()); }
	ruleExpression{ after(grammarAccess.getParamAssignmentAccess().getExpressionExpressionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__NotAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAssignmentAccess().getNotNOTKeyword_1_0_0()); }
(
{ before(grammarAccess.getParamAssignmentAccess().getNotNOTKeyword_1_0_0()); }

	'NOT' 

{ after(grammarAccess.getParamAssignmentAccess().getNotNOTKeyword_1_0_0()); }
)

{ after(grammarAccess.getParamAssignmentAccess().getNotNOTKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__Variable1Assignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAssignmentAccess().getVariable1NamedVariableAccessCrossReference_1_1_0()); }
(
{ before(grammarAccess.getParamAssignmentAccess().getVariable1NamedVariableAccessIdentifierParserRuleCall_1_1_0_1()); }
	ruleIdentifier{ after(grammarAccess.getParamAssignmentAccess().getVariable1NamedVariableAccessIdentifierParserRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getParamAssignmentAccess().getVariable1NamedVariableAccessCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__Variable2Assignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAssignmentAccess().getVariable2VariableCrossReference_1_3_0()); }
(
{ before(grammarAccess.getParamAssignmentAccess().getVariable2VariableIdentifierParserRuleCall_1_3_0_1()); }
	ruleIdentifier{ after(grammarAccess.getParamAssignmentAccess().getVariable2VariableIdentifierParserRuleCall_1_3_0_1()); }
)
{ after(grammarAccess.getParamAssignmentAccess().getVariable2VariableCrossReference_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); }
	ruleIdentifier{ after(grammarAccess.getFunctionDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getTypeNonGenericTypeParserRuleCall_3_0()); }
	ruleNonGenericType{ after(grammarAccess.getFunctionDeclarationAccess().getTypeNonGenericTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__IoVarDeclarationsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getIoVarDeclarationsIoVarDeclarationsParserRuleCall_4_0()); }
	ruleIoVarDeclarations{ after(grammarAccess.getFunctionDeclarationAccess().getIoVarDeclarationsIoVarDeclarationsParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__BodyAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getBodyFunctionBodyParserRuleCall_5_0()); }
	ruleFunctionBody{ after(grammarAccess.getFunctionDeclarationAccess().getBodyFunctionBodyParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputDeclarations__DeclarationsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputDeclarationsAccess().getDeclarationsInputDeclarationParserRuleCall_2_0()); }
	ruleInputDeclaration{ after(grammarAccess.getInputDeclarationsAccess().getDeclarationsInputDeclarationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputDeclarations__DeclarationsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputDeclarationsAccess().getDeclarationsInputDeclarationParserRuleCall_4_0_0()); }
	ruleInputDeclaration{ after(grammarAccess.getInputDeclarationsAccess().getDeclarationsInputDeclarationParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputDeclaration__Var1ListAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputDeclarationAccess().getVar1ListVar1ListParserRuleCall_0_0()); }
	ruleVar1List{ after(grammarAccess.getInputDeclarationAccess().getVar1ListVar1ListParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputDeclaration__DeclSpecificationAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputDeclarationAccess().getDeclSpecificationDeclSpecificationParserRuleCall_2_0()); }
	ruleDeclSpecification{ after(grammarAccess.getInputDeclarationAccess().getDeclSpecificationDeclSpecificationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDeclSpecification__SpecInitAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclSpecificationAccess().getSpecInitSpecInitParserRuleCall_0()); }
	ruleSpecInit{ after(grammarAccess.getVarDeclSpecificationAccess().getSpecInitSpecInitParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeDeclSpecification__REdgeAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeDeclSpecificationAccess().getREdgeR_EDGEKeyword_1_0_0()); }
(
{ before(grammarAccess.getEdgeDeclSpecificationAccess().getREdgeR_EDGEKeyword_1_0_0()); }

	'R_EDGE' 

{ after(grammarAccess.getEdgeDeclSpecificationAccess().getREdgeR_EDGEKeyword_1_0_0()); }
)

{ after(grammarAccess.getEdgeDeclSpecificationAccess().getREdgeR_EDGEKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeDeclSpecification__FEdgeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEdgeDeclSpecificationAccess().getFEdgeF_EDGEKeyword_1_1_0()); }
(
{ before(grammarAccess.getEdgeDeclSpecificationAccess().getFEdgeF_EDGEKeyword_1_1_0()); }

	'F_EDGE' 

{ after(grammarAccess.getEdgeDeclSpecificationAccess().getFEdgeF_EDGEKeyword_1_1_0()); }
)

{ after(grammarAccess.getEdgeDeclSpecificationAccess().getFEdgeF_EDGEKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Var1List__VariablesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVar1ListAccess().getVariablesVariableParserRuleCall_0_0()); }
	ruleVariable{ after(grammarAccess.getVar1ListAccess().getVariablesVariableParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Var1List__VariablesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVar1ListAccess().getVariablesVariableParserRuleCall_1_1_0()); }
	ruleVariable{ after(grammarAccess.getVar1ListAccess().getVariablesVariableParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputDeclarations__InitDeclsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputDeclarationsAccess().getInitDeclsVarInitDeclParserRuleCall_2_0()); }
	ruleVarInitDecl{ after(grammarAccess.getOutputDeclarationsAccess().getInitDeclsVarInitDeclParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputDeclarations__InitDeclsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputDeclarationsAccess().getInitDeclsVarInitDeclParserRuleCall_4_0_0()); }
	ruleVarInitDecl{ after(grammarAccess.getOutputDeclarationsAccess().getInitDeclsVarInitDeclParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarInitDecl__Var1ListAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarInitDeclAccess().getVar1ListVar1ListParserRuleCall_0_0()); }
	ruleVar1List{ after(grammarAccess.getVarInitDeclAccess().getVar1ListVar1ListParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarInitDecl__SpecInitAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarInitDeclAccess().getSpecInitSpecInitParserRuleCall_2_0()); }
	ruleSpecInit{ after(grammarAccess.getVarInitDeclAccess().getSpecInitSpecInitParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputOutputDeclarations__InitDeclsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputOutputDeclarationsAccess().getInitDeclsVarInitDeclParserRuleCall_1_0()); }
	ruleVarInitDecl{ after(grammarAccess.getInputOutputDeclarationsAccess().getInitDeclsVarInitDeclParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputOutputDeclarations__InitDeclsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputOutputDeclarationsAccess().getInitDeclsVarInitDeclParserRuleCall_3_0_0()); }
	ruleVarInitDecl{ after(grammarAccess.getInputOutputDeclarationsAccess().getInitDeclsVarInitDeclParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionList__InstructionsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionListAccess().getInstructionsInstructionParserRuleCall_0_0()); }
	ruleInstruction{ after(grammarAccess.getInstructionListAccess().getInstructionsInstructionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionList__InstructionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionListAccess().getInstructionsInstructionParserRuleCall_1_0()); }
	ruleInstruction{ after(grammarAccess.getInstructionListAccess().getInstructionsInstructionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__LabelAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getLabelLabelParserRuleCall_0_0_0()); }
	ruleLabel{ after(grammarAccess.getInstructionAccess().getLabelLabelParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__InstructionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getInstructionOperationParserRuleCall_1_0()); }
	ruleOperation{ after(grammarAccess.getInstructionAccess().getInstructionOperationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Label__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getNameIdentifierParserRuleCall_0()); }
	ruleIdentifier{ after(grammarAccess.getLabelAccess().getNameIdentifierParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOperation__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleOperationAccess().getOperatorSimpleOperatorParserRuleCall_0_0()); }
	ruleSimpleOperator{ after(grammarAccess.getSimpleOperationAccess().getOperatorSimpleOperatorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOperation__OperandAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleOperationAccess().getOperandOperandParserRuleCall_1_0()); }
	ruleOperand{ after(grammarAccess.getSimpleOperationAccess().getOperandOperandParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOperation__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOperationAccess().getOperatorExpressionOperatorParserRuleCall_0_0()); }
	ruleExpressionOperator{ after(grammarAccess.getExpressionOperationAccess().getOperatorExpressionOperatorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOperation__OperandAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOperationAccess().getOperandOperandParserRuleCall_2_0()); }
	ruleOperand{ after(grammarAccess.getExpressionOperationAccess().getOperandOperandParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOperation__SimpleInstructionListAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOperationAccess().getSimpleInstructionListSimpleInstructionListParserRuleCall_3_0()); }
	ruleSimpleInstructionList{ after(grammarAccess.getExpressionOperationAccess().getSimpleInstructionListSimpleInstructionListParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JmpOperation__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJmpOperationAccess().getOperatorJmpOperatorParserRuleCall_0_0()); }
	ruleJmpOperator{ after(grammarAccess.getJmpOperationAccess().getOperatorJmpOperatorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JmpOperation__LabelAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJmpOperationAccess().getLabelLabelCrossReference_1_0()); }
(
{ before(grammarAccess.getJmpOperationAccess().getLabelLabelIdentifierParserRuleCall_1_0_1()); }
	ruleIdentifier{ after(grammarAccess.getJmpOperationAccess().getLabelLabelIdentifierParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getJmpOperationAccess().getLabelLabelCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__ConstantAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperandAccess().getConstantConstantParserRuleCall_0_0()); }
	ruleConstant{ after(grammarAccess.getOperandAccess().getConstantConstantParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__ReferenceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperandAccess().getReferenceReferencedOperandParserRuleCall_1_0()); }
	ruleReferencedOperand{ after(grammarAccess.getOperandAccess().getReferenceReferencedOperandParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleInstructionList__InstructionsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleInstructionListAccess().getInstructionsSimpleInstructionParserRuleCall_0_0()); }
	ruleSimpleInstruction{ after(grammarAccess.getSimpleInstructionListAccess().getInstructionsSimpleInstructionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleInstructionList__InstructionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleInstructionListAccess().getInstructionsSimpleInstructionParserRuleCall_1_0()); }
	ruleSimpleInstruction{ after(grammarAccess.getSimpleInstructionListAccess().getInstructionsSimpleInstructionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__StatementsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementListAccess().getStatementsStatementParserRuleCall_0_0()); }
	ruleStatement{ after(grammarAccess.getStatementListAccess().getStatementsStatementParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__StatementsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementListAccess().getStatementsStatementParserRuleCall_2_0_0()); }
	ruleStatement{ after(grammarAccess.getStatementListAccess().getStatementsStatementParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__VariableAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignStatementAccess().getVariableVariableCrossReference_0_0()); }
(
{ before(grammarAccess.getAssignStatementAccess().getVariableVariableIdentifierParserRuleCall_0_0_1()); }
	ruleIdentifier{ after(grammarAccess.getAssignStatementAccess().getVariableVariableIdentifierParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAssignStatementAccess().getVariableVariableCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStatement__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getAssignStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__IfExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getIfExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getIfStatementAccess().getIfExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ThenStatementListAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getThenStatementListStatementListParserRuleCall_3_0()); }
	ruleStatementList{ after(grammarAccess.getIfStatementAccess().getThenStatementListStatementListParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseIfsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseIfsElseIfParserRuleCall_4_0()); }
	ruleElseIf{ after(grammarAccess.getIfStatementAccess().getElseIfsElseIfParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseStatementListAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseStatementListStatementListParserRuleCall_5_1_0()); }
	ruleStatementList{ after(grammarAccess.getIfStatementAccess().getElseStatementListStatementListParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIf__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseIfAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getElseIfAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIf__StatementListAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseIfAccess().getStatementListStatementListParserRuleCall_3_0()); }
	ruleStatementList{ after(grammarAccess.getElseIfAccess().getStatementListStatementListParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseStatementAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getCaseStatementAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__CaseElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseStatementAccess().getCaseElementsCaseElementParserRuleCall_3_0()); }
	ruleCaseElement{ after(grammarAccess.getCaseStatementAccess().getCaseElementsCaseElementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__ElseStatementListAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseStatementAccess().getElseStatementListStatementListParserRuleCall_4_1_0()); }
	ruleStatementList{ after(grammarAccess.getCaseStatementAccess().getElseStatementListStatementListParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CaseElement__CaseListAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseElementAccess().getCaseListCaseListParserRuleCall_0_0()); }
	ruleCaseList{ after(grammarAccess.getCaseElementAccess().getCaseListCaseListParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CaseElement__StatementListAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseElementAccess().getStatementListStatementListParserRuleCall_2_0()); }
	ruleStatementList{ after(grammarAccess.getCaseElementAccess().getStatementListStatementListParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CaseList__ElementsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseListAccess().getElementsCaseListElementParserRuleCall_0_0()); }
	ruleCaseListElement{ after(grammarAccess.getCaseListAccess().getElementsCaseListElementParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CaseList__ElementsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseListAccess().getElementsCaseListElementParserRuleCall_1_1_0()); }
	ruleCaseListElement{ after(grammarAccess.getCaseListAccess().getElementsCaseListElementParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CaseListElement__SubRangeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseListElementAccess().getSubRangeSUB_RANGETerminalRuleCall_0_0()); }
	RULE_SUB_RANGE{ after(grammarAccess.getCaseListElementAccess().getSubRangeSUB_RANGETerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CaseListElement__IntegerAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseListElementAccess().getIntegerSignedIntegerParserRuleCall_1_0()); }
	ruleSignedInteger{ after(grammarAccess.getCaseListElementAccess().getIntegerSignedIntegerParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CaseListElement__EnumeratedValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseListElementAccess().getEnumeratedValueEnumeratedValueCrossReference_2_0()); }
(
{ before(grammarAccess.getCaseListElementAccess().getEnumeratedValueEnumeratedValueIdentifierParserRuleCall_2_0_1()); }
	ruleIdentifier{ after(grammarAccess.getCaseListElementAccess().getEnumeratedValueEnumeratedValueIdentifierParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getCaseListElementAccess().getEnumeratedValueEnumeratedValueCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlockDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBlockDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); }
	ruleIdentifier{ after(grammarAccess.getFunctionBlockDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlockDeclaration__VarDeclarationsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBlockDeclarationAccess().getVarDeclarationsFunctionBlockVarDeclarationsParserRuleCall_2_0()); }
	ruleFunctionBlockVarDeclarations{ after(grammarAccess.getFunctionBlockDeclarationAccess().getVarDeclarationsFunctionBlockVarDeclarationsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlockDeclaration__BodyAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBlockDeclarationAccess().getBodyFunctionBlockBodyParserRuleCall_3_0()); }
	ruleFunctionBlockBody{ after(grammarAccess.getFunctionBlockDeclarationAccess().getBodyFunctionBlockBodyParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclarations__ConstantAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclarationsAccess().getConstantCONSTANTKeyword_1_0()); }
(
{ before(grammarAccess.getVarDeclarationsAccess().getConstantCONSTANTKeyword_1_0()); }

	'CONSTANT' 

{ after(grammarAccess.getVarDeclarationsAccess().getConstantCONSTANTKeyword_1_0()); }
)

{ after(grammarAccess.getVarDeclarationsAccess().getConstantCONSTANTKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclarations__InitDeclsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclarationsAccess().getInitDeclsVarInitDeclParserRuleCall_2_0()); }
	ruleVarInitDecl{ after(grammarAccess.getVarDeclarationsAccess().getInitDeclsVarInitDeclParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclarations__InitDeclsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclarationsAccess().getInitDeclsVarInitDeclParserRuleCall_4_0_0()); }
	ruleVarInitDecl{ after(grammarAccess.getVarDeclarationsAccess().getInitDeclsVarInitDeclParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); }
	ruleIdentifier{ after(grammarAccess.getProgramDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramDeclaration__VarDeclarationsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramDeclarationAccess().getVarDeclarationsProgramVarDeclarationsParserRuleCall_2_0()); }
	ruleProgramVarDeclarations{ after(grammarAccess.getProgramDeclarationAccess().getVarDeclarationsProgramVarDeclarationsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramDeclaration__BodyAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramDeclarationAccess().getBodyFunctionBlockBodyParserRuleCall_3_0()); }
	ruleFunctionBlockBody{ after(grammarAccess.getProgramDeclarationAccess().getBodyFunctionBlockBodyParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocatedVarDeclarations__LocatedVarDeclarationAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocatedVarDeclarationsAccess().getLocatedVarDeclarationLocatedVarDeclarationParserRuleCall_2_0()); }
	ruleLocatedVarDeclaration{ after(grammarAccess.getLocatedVarDeclarationsAccess().getLocatedVarDeclarationLocatedVarDeclarationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocatedVarDeclarations__LocatedVarDeclarationAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocatedVarDeclarationsAccess().getLocatedVarDeclarationLocatedVarDeclarationParserRuleCall_4_0_0()); }
	ruleLocatedVarDeclaration{ after(grammarAccess.getLocatedVarDeclarationsAccess().getLocatedVarDeclarationLocatedVarDeclarationParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocatedVarDeclaration__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocatedVarDeclarationAccess().getNameIdentifierParserRuleCall_0_0()); }
	ruleIdentifier{ after(grammarAccess.getLocatedVarDeclarationAccess().getNameIdentifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocatedVarDeclaration__LocationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocatedVarDeclarationAccess().getLocationLocationParserRuleCall_1_0()); }
	ruleLocation{ after(grammarAccess.getLocatedVarDeclarationAccess().getLocationLocationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocatedVarDeclaration__SpecInitAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocatedVarDeclarationAccess().getSpecInitSpecInitParserRuleCall_3_0()); }
	ruleSpecInit{ after(grammarAccess.getLocatedVarDeclarationAccess().getSpecInitSpecInitParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Location__DirectVariableAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationAccess().getDirectVariableDirectVariableParserRuleCall_1_0()); }
	ruleDirectVariable{ after(grammarAccess.getLocationAccess().getDirectVariableDirectVariableParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramAccessDecls__ProgramAccessDeclAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccessDeclsAccess().getProgramAccessDeclProgramAccessDeclParserRuleCall_1_0()); }
	ruleProgramAccessDecl{ after(grammarAccess.getProgramAccessDeclsAccess().getProgramAccessDeclProgramAccessDeclParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramAccessDecls__ProgramAccessDeclAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccessDeclsAccess().getProgramAccessDeclProgramAccessDeclParserRuleCall_3_0_0()); }
	ruleProgramAccessDecl{ after(grammarAccess.getProgramAccessDeclsAccess().getProgramAccessDeclProgramAccessDeclParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramAccessDecl__AccessNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccessDeclAccess().getAccessNameVariableParserRuleCall_0_0()); }
	ruleVariable{ after(grammarAccess.getProgramAccessDeclAccess().getAccessNameVariableParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramAccessDecl__SymbolicVariableAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccessDeclAccess().getSymbolicVariableNamedVariableAccessParserRuleCall_2_0()); }
	ruleNamedVariableAccess{ after(grammarAccess.getProgramAccessDeclAccess().getSymbolicVariableNamedVariableAccessParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramAccessDecl__TypeNameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccessDeclAccess().getTypeNameNonGenericTypeParserRuleCall_4_0()); }
	ruleNonGenericType{ after(grammarAccess.getProgramAccessDeclAccess().getTypeNameNonGenericTypeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramAccessDecl__DirectionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccessDeclAccess().getDirectionDirectionParserRuleCall_5_0()); }
	ruleDirection{ after(grammarAccess.getProgramAccessDeclAccess().getDirectionDirectionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); }
	ruleIdentifier{ after(grammarAccess.getConfigurationDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationDeclaration__GlobalVarDeclarationsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationDeclarationAccess().getGlobalVarDeclarationsGlobalVarDeclarationsParserRuleCall_2_0()); }
	ruleGlobalVarDeclarations{ after(grammarAccess.getConfigurationDeclarationAccess().getGlobalVarDeclarationsGlobalVarDeclarationsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationDeclaration__ResdeclAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationDeclarationAccess().getResdeclResourceDeclarationParserRuleCall_3_0()); }
	ruleResourceDeclaration{ after(grammarAccess.getConfigurationDeclarationAccess().getResdeclResourceDeclarationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); }
	ruleIdentifier{ after(grammarAccess.getResourceDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__ResnameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceDeclarationAccess().getResnameIdentifierParserRuleCall_3_0()); }
	ruleIdentifier{ after(grammarAccess.getResourceDeclarationAccess().getResnameIdentifierParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__GlobalVarDeclarationsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceDeclarationAccess().getGlobalVarDeclarationsGlobalVarDeclarationsParserRuleCall_4_0()); }
	ruleGlobalVarDeclarations{ after(grammarAccess.getResourceDeclarationAccess().getGlobalVarDeclarationsGlobalVarDeclarationsParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__SingleresourceAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceDeclarationAccess().getSingleresourceSingleResourceDeclarationParserRuleCall_5_0()); }
	ruleSingleResourceDeclaration{ after(grammarAccess.getResourceDeclarationAccess().getSingleresourceSingleResourceDeclarationParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleResourceDeclaration__TaskConfAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleResourceDeclarationAccess().getTaskConfTaskConfigurationParserRuleCall_0_0_0()); }
	ruleTaskConfiguration{ after(grammarAccess.getSingleResourceDeclarationAccess().getTaskConfTaskConfigurationParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleResourceDeclaration__ProgramConfAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleResourceDeclarationAccess().getProgramConfProgramConfigurationParserRuleCall_1_0_0()); }
	ruleProgramConfiguration{ after(grammarAccess.getSingleResourceDeclarationAccess().getProgramConfProgramConfigurationParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleResourceDeclaration__ProgramConfAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleResourceDeclarationAccess().getProgramConfProgramConfigurationParserRuleCall_2_0_0()); }
	ruleProgramConfiguration{ after(grammarAccess.getSingleResourceDeclarationAccess().getProgramConfProgramConfigurationParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramConfigurationAccess().getNameIdentifierParserRuleCall_2_0()); }
	ruleIdentifier{ after(grammarAccess.getProgramConfigurationAccess().getNameIdentifierParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__TaskAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramConfigurationAccess().getTaskTaskConfigurationCrossReference_3_1_0()); }
(
{ before(grammarAccess.getProgramConfigurationAccess().getTaskTaskConfigurationIdentifierParserRuleCall_3_1_0_1()); }
	ruleIdentifier{ after(grammarAccess.getProgramConfigurationAccess().getTaskTaskConfigurationIdentifierParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getProgramConfigurationAccess().getTaskTaskConfigurationCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__ProgAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramConfigurationAccess().getProgProgramDeclarationCrossReference_5_0()); }
(
{ before(grammarAccess.getProgramConfigurationAccess().getProgProgramDeclarationIdentifierParserRuleCall_5_0_1()); }
	ruleIdentifier{ after(grammarAccess.getProgramConfigurationAccess().getProgProgramDeclarationIdentifierParserRuleCall_5_0_1()); }
)
{ after(grammarAccess.getProgramConfigurationAccess().getProgProgramDeclarationCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__ProgConfAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramConfigurationAccess().getProgConfProgConfElementsParserRuleCall_6_1_0()); }
	ruleProgConfElements{ after(grammarAccess.getProgramConfigurationAccess().getProgConfProgConfElementsParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProgConfElements__ProgconfAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgConfElementsAccess().getProgconfProgConfElementParserRuleCall_0_0()); }
	ruleProgConfElement{ after(grammarAccess.getProgConfElementsAccess().getProgconfProgConfElementParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProgConfElements__ProgconfAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgConfElementsAccess().getProgconfProgConfElementParserRuleCall_1_1_0()); }
	ruleProgConfElement{ after(grammarAccess.getProgConfElementsAccess().getProgconfProgConfElementParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FBTask__FbnameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFBTaskAccess().getFbnameFunctionBlockDeclarationParserRuleCall_0_0()); }
	ruleFunctionBlockDeclaration{ after(grammarAccess.getFBTaskAccess().getFbnameFunctionBlockDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FBTask__TaskAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFBTaskAccess().getTaskTaskConfigurationParserRuleCall_2_0()); }
	ruleTaskConfiguration{ after(grammarAccess.getFBTaskAccess().getTaskTaskConfigurationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProgCNXN__VariablenameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgCNXNAccess().getVariablenameIdentifierParserRuleCall_0_0_0()); }
	ruleIdentifier{ after(grammarAccess.getProgCNXNAccess().getVariablenameIdentifierParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProgCNXN__ProgdAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgCNXNAccess().getProgdProgDataSourceParserRuleCall_0_1_1_0()); }
	ruleProgDataSource{ after(grammarAccess.getProgCNXNAccess().getProgdProgDataSourceParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProgCNXN__ProgdAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgCNXNAccess().getProgdDataSinkParserRuleCall_1_1_0()); }
	ruleDataSink{ after(grammarAccess.getProgCNXNAccess().getProgdDataSinkParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataSink__GlobvarAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataSinkAccess().getGlobvarGlobalVarParserRuleCall_0_0()); }
	ruleGlobalVar{ after(grammarAccess.getDataSinkAccess().getGlobvarGlobalVarParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataSink__DirvarAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataSinkAccess().getDirvarDirectVariableParserRuleCall_1_0()); }
	ruleDirectVariable{ after(grammarAccess.getDataSinkAccess().getDirvarDirectVariableParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclarations__GlobalVarDeclAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarDeclarationsAccess().getGlobalVarDeclGlobalVarDeclParserRuleCall_2_0()); }
	ruleGlobalVarDecl{ after(grammarAccess.getGlobalVarDeclarationsAccess().getGlobalVarDeclGlobalVarDeclParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclarations__GlobalVarDeclAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarDeclarationsAccess().getGlobalVarDeclGlobalVarDeclParserRuleCall_3_0()); }
	ruleGlobalVarDecl{ after(grammarAccess.getGlobalVarDeclarationsAccess().getGlobalVarDeclGlobalVarDeclParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDecl__SpecAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarDeclAccess().getSpecGlobalVarSpecParserRuleCall_0_0()); }
	ruleGlobalVarSpec{ after(grammarAccess.getGlobalVarDeclAccess().getSpecGlobalVarSpecParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDecl__SpecInitAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarDeclAccess().getSpecInitSpecInitParserRuleCall_2_0()); }
	ruleSpecInit{ after(grammarAccess.getGlobalVarDeclAccess().getSpecInitSpecInitParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarSpec__VariableAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarSpecAccess().getVariableGlobalVarParserRuleCall_1_0_0()); }
	ruleGlobalVar{ after(grammarAccess.getGlobalVarSpecAccess().getVariableGlobalVarParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarSpec__LocationAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarSpecAccess().getLocationLocationParserRuleCall_1_1_0()); }
	ruleLocation{ after(grammarAccess.getGlobalVarSpecAccess().getLocationLocationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarList__VariablesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarListAccess().getVariablesGlobalVarParserRuleCall_0_0()); }
	ruleGlobalVar{ after(grammarAccess.getGlobalVarListAccess().getVariablesGlobalVarParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarList__VariablesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarListAccess().getVariablesGlobalVarParserRuleCall_1_1_0()); }
	ruleGlobalVar{ after(grammarAccess.getGlobalVarListAccess().getVariablesGlobalVarParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVar__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarAccess().getNameIdentifierParserRuleCall_0()); }
	ruleIdentifier{ after(grammarAccess.getGlobalVarAccess().getNameIdentifierParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskConfiguration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskConfigurationAccess().getNameIdentifierParserRuleCall_1_0()); }
	ruleIdentifier{ after(grammarAccess.getTaskConfigurationAccess().getNameIdentifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskConfiguration__TaskInitAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskConfigurationAccess().getTaskInitTaskInitializationParserRuleCall_2_0()); }
	ruleTaskInitialization{ after(grammarAccess.getTaskConfigurationAccess().getTaskInitTaskInitializationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__SingleAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskInitializationAccess().getSingleDataSourceParserRuleCall_1_2_0()); }
	ruleDataSource{ after(grammarAccess.getTaskInitializationAccess().getSingleDataSourceParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__IntervalAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskInitializationAccess().getIntervalDataSourceParserRuleCall_2_2_0()); }
	ruleDataSource{ after(grammarAccess.getTaskInitializationAccess().getIntervalDataSourceParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__PriorAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskInitializationAccess().getPriorINTTerminalRuleCall_5_0()); }
	RULE_INT{ after(grammarAccess.getTaskInitializationAccess().getPriorINTTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__TypeAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getTypeIntegerTypeParserRuleCall_0_0_0()); }
	ruleIntegerType{ after(grammarAccess.getIntegerLiteralAccess().getTypeIntegerTypeParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getValueIntegerValueParserRuleCall_1_0()); }
	ruleIntegerValue{ after(grammarAccess.getIntegerLiteralAccess().getValueIntegerValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__TypeAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getTypeRealTypeParserRuleCall_0_0_0()); }
	ruleRealType{ after(grammarAccess.getRealLiteralAccess().getTypeRealTypeParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getValueRealValueParserRuleCall_1_0()); }
	ruleRealValue{ after(grammarAccess.getRealLiteralAccess().getValueRealValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CharacterString__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharacterStringAccess().getValueSINGLE_BYTE_STRINGTerminalRuleCall_0_0()); }
	RULE_SINGLE_BYTE_STRING{ after(grammarAccess.getCharacterStringAccess().getValueSINGLE_BYTE_STRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CharacterString__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharacterStringAccess().getValueDOUBLE_BYTE_STRINGTerminalRuleCall_1_0()); }
	RULE_DOUBLE_BYTE_STRING{ after(grammarAccess.getCharacterStringAccess().getValueDOUBLE_BYTE_STRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitString__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStringAccess().getValueBitStringValueParserRuleCall_1_0()); }
	ruleBitStringValue{ after(grammarAccess.getBitStringAccess().getValueBitStringValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__BoolIntAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAccess().getBoolIntIntegerParserRuleCall_1_0_1_0()); }
	ruleInteger{ after(grammarAccess.getBooleanAccess().getBoolIntIntegerParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__TrueAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAccess().getTrueTRUEKeyword_1_1_0_0()); }
(
{ before(grammarAccess.getBooleanAccess().getTrueTRUEKeyword_1_1_0_0()); }

	'TRUE' 

{ after(grammarAccess.getBooleanAccess().getTrueTRUEKeyword_1_1_0_0()); }
)

{ after(grammarAccess.getBooleanAccess().getTrueTRUEKeyword_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DurationLiteral__DurationAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationLiteralAccess().getDurationDAYSTerminalRuleCall_2_0_0()); }
	RULE_DAYS{ after(grammarAccess.getDurationLiteralAccess().getDurationDAYSTerminalRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DurationLiteral__DurationAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationLiteralAccess().getDurationHOURSTerminalRuleCall_2_1_0()); }
	RULE_HOURS{ after(grammarAccess.getDurationLiteralAccess().getDurationHOURSTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DurationLiteral__DurationAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationLiteralAccess().getDurationMINUTESTerminalRuleCall_2_2_0()); }
	RULE_MINUTES{ after(grammarAccess.getDurationLiteralAccess().getDurationMINUTESTerminalRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DurationLiteral__DurationAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationLiteralAccess().getDurationSECONDSTerminalRuleCall_2_3_0()); }
	RULE_SECONDS{ after(grammarAccess.getDurationLiteralAccess().getDurationSECONDSTerminalRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DurationLiteral__DurationAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDurationLiteralAccess().getDurationMILLISECONDSTerminalRuleCall_2_4_0()); }
	RULE_MILLISECONDS{ after(grammarAccess.getDurationLiteralAccess().getDurationMILLISECONDSTerminalRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeOfDayLiteral__HourAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeOfDayLiteralAccess().getHourIntegerParserRuleCall_1_0()); }
	ruleInteger{ after(grammarAccess.getTimeOfDayLiteralAccess().getHourIntegerParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeOfDayLiteral__MinuteAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeOfDayLiteralAccess().getMinuteIntegerParserRuleCall_3_0()); }
	ruleInteger{ after(grammarAccess.getTimeOfDayLiteralAccess().getMinuteIntegerParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeOfDayLiteral__SecondAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeOfDayLiteralAccess().getSecondIntegerParserRuleCall_5_0()); }
	ruleInteger{ after(grammarAccess.getTimeOfDayLiteralAccess().getSecondIntegerParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateLiteral__YearAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateLiteralAccess().getYearIntegerParserRuleCall_1_0()); }
	ruleInteger{ after(grammarAccess.getDateLiteralAccess().getYearIntegerParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateLiteral__MonthAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateLiteralAccess().getMonthIntegerParserRuleCall_3_0()); }
	ruleInteger{ after(grammarAccess.getDateLiteralAccess().getMonthIntegerParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateLiteral__DayAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateLiteralAccess().getDayIntegerParserRuleCall_5_0()); }
	ruleInteger{ after(grammarAccess.getDateLiteralAccess().getDayIntegerParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateAndTimeLiteral__YearAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAndTimeLiteralAccess().getYearIntegerParserRuleCall_1_0()); }
	ruleInteger{ after(grammarAccess.getDateAndTimeLiteralAccess().getYearIntegerParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateAndTimeLiteral__MonthAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAndTimeLiteralAccess().getMonthIntegerParserRuleCall_3_0()); }
	ruleInteger{ after(grammarAccess.getDateAndTimeLiteralAccess().getMonthIntegerParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateAndTimeLiteral__DayAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAndTimeLiteralAccess().getDayIntegerParserRuleCall_5_0()); }
	ruleInteger{ after(grammarAccess.getDateAndTimeLiteralAccess().getDayIntegerParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateAndTimeLiteral__HourAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAndTimeLiteralAccess().getHourIntegerParserRuleCall_7_0()); }
	ruleInteger{ after(grammarAccess.getDateAndTimeLiteralAccess().getHourIntegerParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateAndTimeLiteral__MinuteAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAndTimeLiteralAccess().getMinuteIntegerParserRuleCall_9_0()); }
	ruleInteger{ after(grammarAccess.getDateAndTimeLiteralAccess().getMinuteIntegerParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateAndTimeLiteral__SecondAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAndTimeLiteralAccess().getSecondIntegerParserRuleCall_11_0()); }
	ruleInteger{ after(grammarAccess.getDateAndTimeLiteralAccess().getSecondIntegerParserRuleCall_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_FIELD_SELECTOR : '.' RULE_ID;

RULE_DAYS : RULE_DIGIT+ ('.' RULE_DIGIT+)? 'd' ('_'? RULE_HOURS)?;

RULE_HOURS : RULE_DIGIT+ ('.' RULE_DIGIT+)? 'h' ('_'? RULE_MINUTES)?;

RULE_MINUTES : RULE_DIGIT+ ('.' RULE_DIGIT+)? 'm' ('_'? RULE_SECONDS)?;

RULE_SECONDS : RULE_DIGIT+ ('.' RULE_DIGIT+)? 's' ('_'? RULE_MILLISECONDS)?;

RULE_MILLISECONDS : RULE_DIGIT+ ('.' RULE_DIGIT+)? 'ms';

RULE_LETTER : ('a'..'z'|'A'..'Z');

RULE_DIGIT : ('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9');

RULE_ID : (RULE_LETTER|'_' (RULE_LETTER|RULE_DIGIT)) ('_'? (RULE_LETTER|RULE_DIGIT))*;

RULE_BINT : '2#' ('0'|'1') ('_'? ('0'|'1'))*;

RULE_OINT : '8#' ('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7') ('_'? ('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'))*;

RULE_HINT : '16#' ('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9'|'A'|'B'|'C'|'D'|'E'|'F') ('_'? ('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9'|'A'|'B'|'C'|'D'|'E'|'F'))*;

RULE_INT : ('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9') ('_'? ('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9'))*;

RULE_SUB_RANGE : RULE_INT '..' ('+'|'-')? RULE_INT;

RULE_FIXED_POINT : RULE_INT '.' RULE_INT;

RULE_EXPONENT : ('E'|'e') ('+'|'-')? RULE_INT;

RULE_SINGLE_BYTE_STRING : '\'' ('$' ('L'|'N'|'P'|'R'|'T'|'l'|'n'|'p'|'r'|'t'|'\''|'$'|('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9'|'A'|'B'|'C'|'D'|'E'|'F') ('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9'|'A'|'B'|'C'|'D'|'E'|'F'))|~(('$'|'\'')))* '\'';

RULE_DOUBLE_BYTE_STRING : '"' ('$' ('L'|'N'|'P'|'R'|'T'|'l'|'n'|'p'|'r'|'t'|'"'|'$'|('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9'|'A'|'B'|'C'|'D'|'E'|'F') ('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9'|'A'|'B'|'C'|'D'|'E'|'F') ('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9'|'A'|'B'|'C'|'D'|'E'|'F') ('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9'|'A'|'B'|'C'|'D'|'E'|'F'))|~(('$'|'"')))* '"';

RULE_DIRECT_VARIABLE_ID : '%' ('I'|'Q'|'M') ('NIL'|'X'|'B'|'W'|'D'|'L') RULE_INT ('.' RULE_INT)*;

RULE_EOL : ';';

RULE_MY_NL : ('\r'|'\n');

RULE_ML_COMMENT : '(*' ( options {greedy=false;} : . )*'*)';

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


