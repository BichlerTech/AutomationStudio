package com.bichler.opc.driver.base.handler;

import org.opcfoundation.ua.builtintypes.DataValue;
import org.opcfoundation.ua.builtintypes.NodeId;
import org.opcfoundation.ua.builtintypes.StatusCode;
import org.opcfoundation.ua.builtintypes.Variant;
import org.opcfoundation.ua.core.ReadValueId;
import org.opcfoundation.ua.core.TimestampsToReturn;

import com.bichler.opc.comdrv.IOPCServerSession;
import com.bichler.opc.comdrv.IReadListener;

import opc.sdk.ua.classes.BaseNode;
import opc.sdk.ua.classes.BaseVariableType;

public class BaseReadHandler extends AbstractBaseHandler implements IReadListener
{
  public BaseReadHandler()
  {
    super();
  }

  @Override
  public boolean prepareRead(IOPCServerSession session, NodeId nodeId)
  {
    return false;
  }

  @Override
  public StatusCode asyncReadValue(IOPCServerSession session, NodeId nodeId, long senderState)
  {
    return null;
  }

  @Override
  public DataValue syncReadValue(IOPCServerSession session, NodeId nodeId, long senderState)
  {
    BaseNode node = getManager().getNode(nodeId);
    if (!(node instanceof BaseVariableType))
    {
      return null;
    }
    return new DataValue(new Variant(((BaseVariableType<?>) node).getValue()));
  }

  @Override
  public DataValue read(IOPCServerSession session, ReadValueId readValueId, Double maxAge, TimestampsToReturn timestamp,
      long senderState)
  {
    return null;
  }
}
