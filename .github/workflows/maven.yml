# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Step 1 - Set up JDK 1.14
      uses: actions/setup-java@v1
      with:
        java-version: 1.14
        
    # - name: LS
    #  run: ls
      
    - name: Step 2 - Build with Maven
      
      # -- creates eclipse rcp product 
      # mvn clean install
      # -- creates jar files from the projects
      # mvn -B package --file pom.xml
      run: |
        mvn clean install
      # mkdir staging && cp target/*.jar staging 
    
    # - name: LS2
    #  run: ls /home/runner/work/BichlerTechStudio/BichlerTechStudio/releng/com.bichler.automationstudio.product/target
    
    # - name: LS3
    #  run: ls ./target
    
    - name: Step 3 - Set up Cache for Maven
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Step 4 - Persist worklfow data as artifacts
      uses: actions/upload-artifact@v2
      with:
       name: guthub-actions-artifact
       path: /home/runner/work/BichlerTechStudio/BichlerTechStudio/releng/com.bichler.automationstudio.product/target/products/com.bichler.astudio.product.feature-win32.win32.x86_64.zip
